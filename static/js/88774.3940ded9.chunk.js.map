{"version":3,"file":"static/js/88774.3940ded9.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/color-picker-hex-input.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-hex-input/color-picker-hex-input.scss?tag=calcite-color-picker-hex-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/color-picker.scss?tag=calcite-color-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/color-picker.tsx","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/dist/components/src/utils/math.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tab/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tab/tab.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tab/tab.scss?tag=calcite-tab&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.scss?tag=calcite-tabs&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/lodash-es/throttle.js"],"sourcesContent":["import Color from \"color\";\n\nexport const CSS = {\n  channel: \"channel\",\n  channels: \"channels\",\n  colorField: \"color-field\",\n  colorFieldScope: \"scope--color-field\",\n  colorMode: \"color-mode\",\n  colorModeContainer: \"color-mode-container\",\n  container: \"container\",\n  control: \"control\",\n  controlAndScope: \"control-and-scope\",\n  controlSection: \"control-section\",\n  deleteColor: \"delete-color\",\n  header: \"header\",\n  hexAndChannelsGroup: \"hex-and-channels-group\",\n  hexOptions: \"color-hex-options\",\n  hueScope: \"scope--hue\",\n  hueSlider: \"hue-slider\",\n  opacityScope: \"scope--opacity\",\n  opacitySlider: \"opacity-slider\",\n  preview: \"preview\",\n  previewAndSliders: \"preview-and-sliders\",\n  saveColor: \"save-color\",\n  savedColor: \"saved-color\",\n  savedColors: \"saved-colors\",\n  savedColorsButtons: \"saved-colors-buttons\",\n  savedColorsSection: \"saved-colors-section\",\n  scope: \"scope\",\n  section: \"section\",\n  slider: \"slider\",\n  sliders: \"sliders\",\n  splitSection: \"section--split\",\n};\n\nexport const DEFAULT_COLOR = Color(\"#007AC2\");\nexport const DEFAULT_STORAGE_KEY_PREFIX = \"calcite-color-\";\n\nexport const RGB_LIMITS = {\n  r: 255,\n  g: 255,\n  b: 255,\n};\n\nexport const HSV_LIMITS = {\n  h: 360,\n  s: 100,\n  v: 100,\n};\n\n// 0 and 360 represent the same value, so we limit the hue to 359\nexport const HUE_LIMIT_CONSTRAINED = HSV_LIMITS.h - 1;\n\nexport const OPACITY_LIMITS = {\n  min: 0,\n  max: 100,\n};\n\nexport const DIMENSIONS = {\n  s: {\n    slider: {\n      height: 12,\n      width: 104,\n    },\n    colorField: {\n      height: 80,\n      width: 160,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n  m: {\n    slider: {\n      height: 12,\n      width: 204,\n    },\n    colorField: {\n      height: 150,\n      width: 272,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n  l: {\n    slider: {\n      height: 12,\n      width: 384,\n    },\n    colorField: {\n      height: 200,\n      width: 464,\n    },\n    thumb: {\n      radius: 10,\n    },\n  },\n};\n\nexport const SCOPE_SIZE = 1;\n","export const CSS = {\n  container: \"container\",\n  hexInput: \"hex-input\",\n  opacityInput: \"opacity-input\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  alphaToOpacity,\n  hexChar,\n  hexify,\n  isLonghandHex,\n  isValidHex,\n  normalizeHex,\n  opacityToAlpha,\n  rgbToHex,\n} from \"../color-picker/utils\";\nimport { CSS } from \"./resources\";\nimport { Scale } from \"../interfaces\";\nimport { Channels, RGB } from \"../color-picker/interfaces\";\nimport Color from \"color\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { NumberingSystem } from \"../../utils/locale\";\nimport { OPACITY_LIMITS } from \"../color-picker/resources\";\nimport { ColorPickerMessages } from \"../color-picker/assets/color-picker/t9n\";\n\nconst DEFAULT_COLOR = Color();\n\n@Component({\n  tag: \"calcite-color-picker-hex-input\",\n  styleUrl: \"color-picker-hex-input.scss\",\n  shadow: true,\n})\nexport class ColorPickerHexInput implements LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { allowEmpty, alphaChannel, value } = this;\n\n    if (value) {\n      const normalized = normalizeHex(value, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        this.internalSetValue(normalized, normalized, false);\n      }\n\n      return;\n    }\n\n    if (allowEmpty) {\n      this.internalSetValue(null, null, false);\n    }\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop() allowEmpty = false;\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  /**\n   * Specifies accessible label for the input field.\n   *\n   * @deprecated use `messages` instead\n   */\n  @Prop() hexLabel = \"Hex\";\n\n  /**\n   * Messages are passed by parent component for accessible labels.\n   *\n   * @internal\n   */\n  @Prop() messages: ColorPickerMessages;\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop() numberingSystem?: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * The hex value.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n    this.alphaChannel,\n    true,\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: string, oldValue: string): void {\n    this.internalSetValue(value, oldValue, false);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Emitted when the hex value changes.\n   */\n  @Event({ cancelable: false }) calciteColorPickerHexInputChange: EventEmitter<void>;\n\n  private onHexInputBlur = (): void => {\n    const node = this.hexInputNode;\n    const inputValue = node.value;\n    const hex = `#${inputValue}`;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n    const isLonghand = isLonghandHex(hex);\n\n    // ensure modified pasted hex values are committed since we prevent default to remove the # char.\n    this.onHexInputChange();\n\n    if (willClearValue || (isValidHex(hex) && isLonghand)) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor\n        ? \"\"\n        : this.formatHexForInternalInput(\n            rgbToHex(\n              // always display hex input in RRGGBB format\n              internalColor.object() as any as RGB,\n            ),\n          );\n  };\n\n  private onOpacityInputBlur = (): void => {\n    const node = this.opacityInputNode;\n    const inputValue = node.value;\n    const { allowEmpty, internalColor } = this;\n    const willClearValue = allowEmpty && !inputValue;\n\n    if (willClearValue) {\n      return;\n    }\n\n    // manipulating DOM directly since rerender doesn't update input value\n    node.value =\n      allowEmpty && !internalColor ? \"\" : this.formatOpacityForInternalInput(internalColor);\n  };\n\n  private onHexInputChange = (): void => {\n    const nodeValue = this.hexInputNode.value;\n    let value = nodeValue;\n\n    if (value) {\n      const normalized = normalizeHex(value, false);\n      const preserveExistingAlpha = isValidHex(normalized) && this.alphaChannel;\n      if (preserveExistingAlpha && this.internalColor) {\n        const alphaHex = normalizeHex(this.internalColor.hexa(), true).slice(-2);\n        value = `${normalized + alphaHex}`;\n      }\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  private onOpacityInputChange = (): void => {\n    const node = this.opacityInputNode;\n    let value: number | string;\n\n    if (!node.value) {\n      value = node.value;\n    } else {\n      const alpha = opacityToAlpha(Number(node.value));\n      value = this.internalColor?.alpha(alpha).hexa();\n    }\n\n    this.internalSetValue(value, this.value);\n  };\n\n  protected onInputKeyDown = (event: KeyboardEvent): void => {\n    const { altKey, ctrlKey, metaKey, shiftKey } = event;\n    const { alphaChannel, hexInputNode, internalColor, value } = this;\n    const { key } = event;\n    const composedPath = event.composedPath();\n\n    if (key === \"Tab\" || key === \"Enter\") {\n      if (composedPath.includes(hexInputNode)) {\n        this.onHexInputChange();\n      } else {\n        this.onOpacityInputChange();\n      }\n\n      if (key === \"Enter\") {\n        event.preventDefault();\n      }\n\n      return;\n    }\n\n    const isNudgeKey = key === \"ArrowDown\" || key === \"ArrowUp\";\n    const oldValue = this.value;\n\n    if (isNudgeKey) {\n      if (!value) {\n        this.internalSetValue(this.previousNonNullValue, oldValue);\n        event.preventDefault();\n        return;\n      }\n\n      const direction = key === \"ArrowUp\" ? 1 : -1;\n      const bump = shiftKey ? 10 : 1;\n\n      this.internalSetValue(\n        hexify(\n          this.nudgeRGBChannels(\n            internalColor,\n            bump * direction,\n            composedPath.includes(hexInputNode) ? \"rgb\" : \"a\",\n          ),\n          alphaChannel,\n        ),\n        oldValue,\n      );\n\n      event.preventDefault();\n      return;\n    }\n\n    const withModifiers = altKey || ctrlKey || metaKey;\n    const singleChar = key.length === 1;\n    const validHexChar = hexChar.test(key);\n\n    if (singleChar && !withModifiers && !validHexChar) {\n      event.preventDefault();\n    }\n  };\n\n  private onHexInputPaste = (event: ClipboardEvent): void => {\n    const hex = event.clipboardData.getData(\"text\");\n\n    if (isValidHex(hex)) {\n      event.preventDefault();\n      this.hexInputNode.value = hex.slice(1);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerHexInputElement;\n\n  private hexInputNode: HTMLCalciteInputTextElement;\n\n  /**\n   * The last valid/selected color. Used as a fallback if an invalid hex code is entered.\n   */\n  @State() internalColor: Color | null = DEFAULT_COLOR;\n\n  private opacityInputNode: HTMLCalciteInputNumberElement;\n\n  private previousNonNullValue: string = this.value;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const { alphaChannel, hexLabel, internalColor, messages, scale, value } = this;\n    const hexInputValue = this.formatHexForInternalInput(value);\n    const opacityInputValue = this.formatOpacityForInternalInput(internalColor);\n    const inputScale = scale === \"l\" ? \"m\" : \"s\";\n\n    return (\n      <div class={CSS.container}>\n        <calcite-input-text\n          class={CSS.hexInput}\n          label={messages?.hex || hexLabel}\n          maxLength={6}\n          onCalciteInputTextChange={this.onHexInputChange}\n          onCalciteInternalInputTextBlur={this.onHexInputBlur}\n          onKeyDown={this.onInputKeyDown}\n          onPaste={this.onHexInputPaste}\n          prefixText=\"#\"\n          scale={inputScale}\n          value={hexInputValue}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.storeHexInputRef}\n        />\n        {alphaChannel ? (\n          <calcite-input-number\n            class={CSS.opacityInput}\n            key=\"opacity-input\"\n            label={messages?.opacity}\n            max={OPACITY_LIMITS.max}\n            maxLength={3}\n            min={OPACITY_LIMITS.min}\n            numberButtonType=\"none\"\n            numberingSystem={this.numberingSystem}\n            onCalciteInputNumberChange={this.onOpacityInputChange}\n            onCalciteInternalInputNumberBlur={this.onOpacityInputBlur}\n            onKeyDown={this.onInputKeyDown}\n            scale={inputScale}\n            suffixText=\"%\"\n            value={opacityInputValue}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.storeOpacityInputRef}\n          />\n        ) : null}\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.hexInputNode);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private internalSetValue(value: string | null, oldValue: string | null, emit = true): void {\n    if (value) {\n      const { alphaChannel } = this;\n      const normalized = normalizeHex(value, alphaChannel, alphaChannel);\n\n      if (isValidHex(normalized, alphaChannel)) {\n        const { internalColor: currentColor } = this;\n        const nextColor = Color(normalized);\n        const normalizedLonghand = normalizeHex(hexify(nextColor, alphaChannel), alphaChannel);\n\n        const changed =\n          !currentColor ||\n          normalizedLonghand !== normalizeHex(hexify(currentColor, alphaChannel), alphaChannel);\n\n        this.internalColor = nextColor;\n        this.previousNonNullValue = normalizedLonghand;\n        this.value = normalizedLonghand;\n\n        if (changed && emit) {\n          this.calciteColorPickerHexInputChange.emit();\n        }\n\n        return;\n      }\n    } else if (this.allowEmpty) {\n      this.internalColor = null;\n      this.value = null;\n\n      if (emit) {\n        this.calciteColorPickerHexInputChange.emit();\n      }\n\n      return;\n    }\n\n    this.value = oldValue;\n  }\n\n  private storeHexInputRef = (node: HTMLCalciteInputTextElement): void => {\n    this.hexInputNode = node;\n  };\n\n  private storeOpacityInputRef = (node: HTMLCalciteInputNumberElement): void => {\n    this.opacityInputNode = node;\n  };\n\n  private formatHexForInternalInput(hex: string): string {\n    return hex ? hex.replace(\"#\", \"\").slice(0, 6) : \"\";\n  }\n\n  private formatOpacityForInternalInput(color: Color): string {\n    return color ? `${alphaToOpacity(color.alpha())}` : \"\";\n  }\n\n  private nudgeRGBChannels(color: Color, amount: number, context: \"rgb\" | \"a\"): Color {\n    let nudgedChannels: Channels;\n    const channels = color.array();\n    const rgbChannels = channels.slice(0, 3);\n\n    if (context === \"rgb\") {\n      const nudgedRGBChannels = rgbChannels.map((channel) => channel + amount);\n      nudgedChannels = [\n        ...nudgedRGBChannels,\n        this.alphaChannel ? channels[3] : undefined,\n      ] as Channels;\n    } else {\n      const nudgedAlpha = opacityToAlpha(alphaToOpacity(color.alpha()) + amount);\n      nudgedChannels = [...rgbChannels, nudgedAlpha] as Channels;\n    }\n\n    return Color(nudgedChannels);\n  }\n}\n",":host {\n  @apply block;\n}\n\n.container {\n  @apply flex w-full items-center flex-nowrap;\n}\n\n.hex-input {\n  @apply grow uppercase;\n}\n\n.opacity-input {\n  inline-size: 68px;\n  margin-inline-start: -1px;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply flex-wrap gap-y-0.5;\n  }\n\n  .opacity-input {\n    inline-size: unset;\n    margin-inline-start: unset;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .opacity-input {\n    inline-size: 88px;\n  }\n}\n\n@include base-component();\n",":host {\n  @apply text-n2h inline-block font-normal;\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-color-picker-spacing: 8px;\n\n  .container {\n    inline-size: 160px;\n  }\n\n  .saved-colors {\n    @apply gap-1;\n    grid-template-columns: repeat(auto-fill, 20px);\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-color-picker-spacing: 12px;\n\n  .container {\n    inline-size: 272px;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-color-picker-spacing: 16px;\n\n  @apply text-n1h;\n\n  .container {\n    inline-size: 464px;\n  }\n\n  .section {\n    &:first-of-type {\n      padding-block-start: var(--calcite-color-picker-spacing);\n    }\n  }\n\n  .saved-colors {\n    grid-template-columns: repeat(auto-fill, 32px);\n  }\n\n  .control-section {\n    @apply flex-nowrap items-baseline;\n  }\n\n  .control-section {\n    @apply flex-wrap;\n  }\n\n  .color-hex-options {\n    @apply flex\n      flex-shrink\n      flex-col\n      justify-around;\n  }\n\n  .color-mode-container {\n    flex-shrink: 3;\n  }\n}\n\n.container {\n  @apply bg-foreground-1;\n  display: inline-block;\n  border: 1px solid var(--calcite-color-border-1);\n}\n\n.control-and-scope {\n  @apply flex relative cursor-pointer touch-none;\n}\n\n.scope {\n  @apply text-n1\n    focus-base\n    absolute\n    z-default\n    rounded-full\n    bg-transparent\n    w-px\n    h-px\n    pointer-events-none;\n  &:focus {\n    @apply focus-outset;\n    outline-offset: 11px;\n  }\n}\n\n.hex-and-channels-group {\n  @apply w-full;\n}\n\n.hex-and-channels-group,\n.control-section {\n  @apply flex flex-row flex-wrap;\n}\n\n.section {\n  padding-block: 0 var(--calcite-color-picker-spacing);\n  padding-inline: var(--calcite-color-picker-spacing);\n\n  &:first-of-type {\n    padding-block-start: var(--calcite-color-picker-spacing);\n  }\n}\n\n.sliders {\n  @apply flex flex-col justify-between;\n  margin-inline-start: var(--calcite-color-picker-spacing);\n}\n\n.preview-and-sliders {\n  @apply flex items-center;\n  padding: var(--calcite-color-picker-spacing);\n}\n\n.color-hex-options,\n.section--split {\n  flex-grow: 1;\n}\n\n.header {\n  @apply text-color-1\n    flex\n    items-center\n    justify-between;\n}\n\n.color-mode-container {\n  padding-block-start: var(--calcite-color-picker-spacing);\n}\n\n.channels {\n  @apply flex gap-y-0.5;\n}\n\n.channel {\n  &[data-channel-index=\"3\"] {\n    inline-size: 159px;\n  }\n}\n\n:host([scale=\"s\"]) {\n  .channels {\n    @apply flex-wrap;\n  }\n\n  .channel {\n    flex-basis: 30%;\n    flex-grow: 1;\n\n    &[data-channel-index=\"3\"] {\n      inline-size: unset;\n      margin-inline-start: unset;\n    }\n  }\n}\n\n:host([scale=\"l\"]) {\n  .channel {\n    &[data-channel-index=\"3\"] {\n      inline-size: 131px;\n    }\n  }\n}\n\n.saved-colors {\n  @apply grid gap-2;\n  padding-block-start: var(--calcite-color-picker-spacing);\n  grid-template-columns: repeat(auto-fill, 24px);\n}\n\n.saved-colors-buttons {\n  display: flex;\n}\n\n.saved-color {\n  @include focus-style-base();\n\n  cursor: pointer;\n\n  &:focus {\n    @include focus-style-outset();\n  }\n\n  &:hover {\n    transition: outline-color var(--calcite-internal-animation-timing-fast) ease-in-out;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport Color from \"color\";\nimport { Channels, ColorMode, ColorValue, HSLA, HSVA, InternalColor, RGBA } from \"./interfaces\";\nimport { throttle } from \"lodash-es\";\nimport { Direction, getElementDir, isPrimaryPointerButton } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport {\n  CSS,\n  DEFAULT_COLOR,\n  DEFAULT_STORAGE_KEY_PREFIX,\n  DIMENSIONS,\n  HSV_LIMITS,\n  HUE_LIMIT_CONSTRAINED,\n  OPACITY_LIMITS,\n  RGB_LIMITS,\n  SCOPE_SIZE,\n} from \"./resources\";\nimport {\n  alphaCompatible,\n  alphaToOpacity,\n  colorEqual,\n  CSSColorMode,\n  Format,\n  hexify,\n  normalizeAlpha,\n  normalizeColor,\n  normalizeHex,\n  opacityToAlpha,\n  parseMode,\n  SupportedMode,\n  toAlphaMode,\n  toNonAlphaMode,\n} from \"./utils\";\n\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n} from \"../../utils/locale\";\nimport { clamp, closeToRangeEdge, remap } from \"../../utils/math\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ColorPickerMessages } from \"./assets/color-picker/t9n\";\n\nconst throttleFor60FpsInMs = 16;\n\n@Component({\n  tag: \"calcite-color-picker\",\n  styleUrl: \"color-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ColorPicker\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   *\n   * @deprecated Use `clearable` instead\n   */\n  @Prop({ reflect: true }) allowEmpty = false;\n\n  @Watch(\"allowEmpty\")\n  @Watch(\"clearable\")\n  handleAllowEmptyOrClearableChange(): void {\n    this.isClearable = this.clearable || this.allowEmpty;\n  }\n\n  /**\n   * When `true`, the component will allow updates to the color's alpha value.\n   */\n  @Prop() alphaChannel = false;\n\n  @Watch(\"alphaChannel\")\n  handleAlphaChannelChange(alphaChannel: boolean): void {\n    const { format } = this;\n\n    if (alphaChannel && format !== \"auto\" && !alphaCompatible(format)) {\n      console.warn(\n        `ignoring alphaChannel as the current format (${format}) does not support alpha`,\n      );\n      this.alphaChannel = false;\n    }\n  }\n\n  /** When `true`, hides the RGB/HSV channel inputs. */\n  @Prop() channelsDisabled = false;\n\n  /**\n   * When `true`, an empty color (`null`) will be allowed as a `value`.\n   *\n   * When `false`, a color value is enforced, and clearing the input or blurring will restore the last valid `value`.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * Internal prop for advanced use-cases.\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) color: InternalColor | null = DEFAULT_COLOR;\n\n  @Watch(\"color\")\n  handleColorChange(color: Color | null, oldColor: Color | null): void {\n    this.drawColorControls();\n    this.updateChannelsFromColor(color);\n    this.previousColor = oldColor;\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The format of `value`.\n   *\n   * When `\"auto\"`, the format will be inferred from `value` when set.\n   *\n   * @default \"auto\"\n   */\n  @Prop({ reflect: true }) format: Format = \"auto\";\n\n  @Watch(\"alphaChannel\")\n  @Watch(\"format\")\n  handleFormatOrAlphaChannelChange(): void {\n    this.setMode(this.format);\n    this.internalColorSet(this.color, false, \"internal\");\n  }\n\n  /**\n   * When `true`, hides the RGB/HSV channel inputs.\n   *\n   * @deprecated use `channelsDisabled` instead\n   */\n  @Prop({ reflect: true }) hideChannels = false;\n\n  /** When `true`, hides the hex input. */\n  @Prop() hexDisabled = false;\n\n  /**\n   * When `true`, hides the hex input.\n   *\n   * @deprecated use `hexDisabled` instead\n   */\n  @Prop({ reflect: true }) hideHex = false;\n\n  /**\n   * When `true`, hides the saved colors section.\n   *\n   * @deprecated use `savedDisabled` instead\n   */\n  @Prop({ reflect: true }) hideSaved = false;\n\n  /** When `true`, hides the saved colors section. */\n  @Prop({ reflect: true }) savedDisabled = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"scale\")\n  handleScaleChange(scale: Scale = \"m\"): void {\n    this.updateDimensions(scale);\n    this.updateCanvasSize(\"all\");\n    this.drawColorControls();\n  }\n\n  /** Specifies the storage ID for colors. */\n  @Prop({ reflect: true }) storageId: string;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ColorPickerMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the Unicode numeral system used by the component for localization. */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * The component's value, where the value can be a CSS color string, or a RGB, HSL or HSV object.\n   *\n   * The type will be preserved as the color is updated.\n   *\n   * @default \"#007ac2\"\n   * @see [CSS Color](https://developer.mozilla.org/en-US/docs/Web/CSS/color)\n   * @see [ColorValue](https://github.com/Esri/calcite-design-system/blob/main/src/components/color-picker/interfaces.ts#L10)\n   */\n  @Prop({ mutable: true }) value: ColorValue | null = normalizeHex(\n    hexify(DEFAULT_COLOR, this.alphaChannel),\n  );\n\n  @Watch(\"value\")\n  handleValueChange(value: ColorValue | null, oldValue: ColorValue | null): void {\n    const { isClearable, format } = this;\n    const checkMode = !isClearable || value;\n    let modeChanged = false;\n\n    if (checkMode) {\n      const nextMode = parseMode(value);\n\n      if (!nextMode || (format !== \"auto\" && nextMode !== format)) {\n        this.showIncompatibleColorWarning(value, format);\n        this.value = oldValue;\n        return;\n      }\n\n      modeChanged = this.mode !== nextMode;\n      this.setMode(nextMode, this.internalColorUpdateContext === null);\n    }\n\n    const dragging = this.activeCanvasInfo;\n\n    if (this.internalColorUpdateContext === \"initial\") {\n      return;\n    }\n\n    if (this.internalColorUpdateContext === \"user-interaction\") {\n      this.calciteColorPickerInput.emit();\n\n      if (!dragging) {\n        this.calciteColorPickerChange.emit();\n      }\n      return;\n    }\n\n    const color =\n      isClearable && !value\n        ? null\n        : Color(\n            value != null && typeof value === \"object\" && alphaCompatible(this.mode)\n              ? normalizeColor(value as RGBA | HSVA | HSLA)\n              : value,\n          );\n    const colorChanged = !colorEqual(color, this.color);\n\n    if (modeChanged || colorChanged) {\n      this.internalColorSet(\n        color,\n        this.alphaChannel && !(this.mode.endsWith(\"a\") || this.mode.endsWith(\"a-css\")),\n        \"internal\",\n      );\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Internal State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerElement;\n\n  private activeCanvasInfo: {\n    context: CanvasRenderingContext2D;\n    bounds: DOMRect;\n  };\n\n  private get baseColorFieldColor(): Color {\n    return this.color || this.previousColor || DEFAULT_COLOR;\n  }\n\n  private checkerPattern: HTMLCanvasElement;\n\n  private colorFieldRenderingContext: CanvasRenderingContext2D;\n\n  private colorFieldScopeNode: HTMLDivElement;\n\n  private hueSliderRenderingContext: CanvasRenderingContext2D;\n\n  private hueScopeNode: HTMLDivElement;\n\n  private internalColorUpdateContext: \"internal\" | \"initial\" | \"user-interaction\" | null = null;\n\n  private isClearable: boolean;\n\n  private mode: SupportedMode = CSSColorMode.HEX;\n\n  private opacityScopeNode: HTMLDivElement;\n\n  private opacitySliderRenderingContext: CanvasRenderingContext2D;\n\n  private previousColor: InternalColor | null;\n\n  private shiftKeyChannelAdjustment = 0;\n\n  @State() defaultMessages: ColorPickerMessages;\n\n  @State() channelMode: ColorMode = \"rgb\";\n\n  @State() channels: Channels = this.toChannels(DEFAULT_COLOR);\n\n  @State() dimensions = DIMENSIONS.m;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ColorPickerMessages;\n\n  @State() savedColors: string[] = [];\n\n  @State() colorFieldScopeTop: number;\n\n  @State() colorFieldScopeLeft: number;\n\n  @State() hueScopeLeft: number;\n\n  @State() opacityScopeLeft: number;\n\n  @State() scopeOrientation: \"vertical\" | \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the color value has changed.\n   */\n  @Event({ cancelable: false }) calciteColorPickerChange: EventEmitter<void>;\n\n  /**\n   * Fires as the color value changes.\n   *\n   * Similar to the `calciteColorPickerChange` event with the exception of dragging. When dragging the color field or hue slider thumb, this event fires as the thumb is moved.\n   */\n  @Event({ cancelable: false }) calciteColorPickerInput: EventEmitter<void>;\n\n  private handleTabActivate = (event: Event): void => {\n    this.channelMode = (event.currentTarget as HTMLElement).getAttribute(\n      \"data-color-mode\",\n    ) as ColorMode;\n\n    this.updateChannelsFromColor(this.color);\n  };\n\n  private handleColorFieldScopeKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const arrowKeyToXYOffset = {\n      ArrowUp: { x: 0, y: -10 },\n      ArrowRight: { x: 10, y: 0 },\n      ArrowDown: { x: 0, y: 10 },\n      ArrowLeft: { x: -10, y: 0 },\n    };\n\n    if (arrowKeyToXYOffset[key]) {\n      event.preventDefault();\n      this.scopeOrientation = key === \"ArrowDown\" || key === \"ArrowUp\" ? \"vertical\" : \"horizontal\";\n      this.captureColorFieldColor(\n        this.colorFieldScopeLeft + arrowKeyToXYOffset[key].x || 0,\n        this.colorFieldScopeTop + arrowKeyToXYOffset[key].y || 0,\n        false,\n      );\n    }\n  };\n\n  private handleHueScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 1,\n      ArrowRight: 1,\n      ArrowDown: -1,\n      ArrowLeft: -1,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const hue = this.baseColorFieldColor.hue();\n      const color = this.baseColorFieldColor.hue(hue + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private handleHexInputChange = (event: Event): void => {\n    event.stopPropagation();\n    const { isClearable, color } = this;\n    const input = event.target as HTMLCalciteColorPickerHexInputElement;\n    const hex = input.value;\n\n    if (isClearable && !hex) {\n      this.internalColorSet(null);\n      return;\n    }\n\n    const normalizedHex = color && normalizeHex(hexify(color, alphaCompatible(this.mode)));\n\n    if (hex !== normalizedHex) {\n      this.internalColorSet(Color(hex));\n    }\n  };\n\n  private handleSavedColorSelect = (event: Event): void => {\n    const swatch = event.currentTarget as HTMLCalciteColorPickerSwatchElement;\n    this.internalColorSet(Color(swatch.color));\n  };\n\n  private handleChannelInput = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const isAlphaChannel = channelIndex === 3;\n\n    const limit = isAlphaChannel\n      ? OPACITY_LIMITS.max\n      : this.channelMode === \"rgb\"\n        ? RGB_LIMITS[Object.keys(RGB_LIMITS)[channelIndex]]\n        : HSV_LIMITS[Object.keys(HSV_LIMITS)[channelIndex]];\n\n    let inputValue: string;\n\n    if (this.isClearable && !input.value) {\n      inputValue = \"\";\n    } else {\n      const value = Number(input.value);\n      const adjustedValue = value + this.shiftKeyChannelAdjustment;\n      const clamped = clamp(adjustedValue, 0, limit);\n\n      inputValue = clamped.toString();\n    }\n\n    input.value = inputValue;\n\n    if (inputValue !== \"\" && this.shiftKeyChannelAdjustment !== 0) {\n      // we treat nudging as a change event since the input won't emit when modifying the value directly\n      this.handleChannelChange(event);\n    }\n  };\n\n  // using @Listen as a workaround for VDOM listener not firing\n  @Listen(\"keydown\", { capture: true })\n  @Listen(\"keyup\", { capture: true })\n  protected handleChannelKeyUpOrDown(event: KeyboardEvent): void {\n    this.shiftKeyChannelAdjustment = 0;\n    const { key } = event;\n\n    if (\n      (key !== \"ArrowUp\" && key !== \"ArrowDown\") ||\n      !event.composedPath().some((node: HTMLElement) => node.classList?.contains(CSS.channel))\n    ) {\n      return;\n    }\n\n    const { shiftKey } = event;\n    event.preventDefault();\n\n    if (!this.color) {\n      this.internalColorSet(this.previousColor);\n      event.stopPropagation();\n      return;\n    }\n\n    // this gets applied to the input's up/down arrow increment/decrement\n    const complementaryBump = 9;\n\n    this.shiftKeyChannelAdjustment =\n      key === \"ArrowUp\" && shiftKey\n        ? complementaryBump\n        : key === \"ArrowDown\" && shiftKey\n          ? -complementaryBump\n          : 0;\n  }\n\n  private handleChannelChange = (event: CustomEvent): void => {\n    const input = event.currentTarget as HTMLCalciteInputNumberElement;\n    const channelIndex = Number(input.getAttribute(\"data-channel-index\"));\n    const channels = [...this.channels] as this[\"channels\"];\n\n    const shouldClearChannels = this.isClearable && !input.value;\n\n    if (shouldClearChannels) {\n      this.channels = [null, null, null, null];\n      this.internalColorSet(null);\n      return;\n    }\n\n    const isAlphaChannel = channelIndex === 3;\n    const value = Number(input.value);\n\n    channels[channelIndex] = isAlphaChannel ? opacityToAlpha(value) : value;\n    this.updateColorFromChannels(channels);\n  };\n\n  private handleSavedColorKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      event.preventDefault();\n      this.handleSavedColorSelect(event);\n    }\n  };\n\n  private handleColorFieldPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX, offsetY } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.colorFieldRenderingContext,\n      bounds: this.colorFieldRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureColorFieldColor(offsetX, offsetY);\n    this.colorFieldScopeNode.focus();\n  };\n\n  private handleHueSliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.hueSliderRenderingContext,\n      bounds: this.hueSliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureHueSliderColor(offsetX);\n    this.hueScopeNode.focus();\n  };\n\n  private handleOpacitySliderPointerDown = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const { offsetX } = event;\n\n    window.addEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.addEventListener(\"pointerup\", this.globalPointerUpHandler, { once: true });\n\n    this.activeCanvasInfo = {\n      context: this.opacitySliderRenderingContext,\n      bounds: this.opacitySliderRenderingContext.canvas.getBoundingClientRect(),\n    };\n    this.captureOpacitySliderValue(offsetX);\n    this.opacityScopeNode.focus();\n  };\n\n  private globalPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    const previouslyDragging = this.activeCanvasInfo;\n    this.activeCanvasInfo = null;\n    this.drawColorControls();\n\n    if (previouslyDragging) {\n      this.calciteColorPickerChange.emit();\n    }\n  };\n\n  private globalPointerMoveHandler = (event: PointerEvent): void => {\n    const { activeCanvasInfo, el } = this;\n\n    if (!el.isConnected || !activeCanvasInfo) {\n      return;\n    }\n\n    const { context, bounds } = activeCanvasInfo;\n\n    let samplingX: number;\n    let samplingY: number;\n\n    const { clientX, clientY } = event;\n\n    if (context.canvas.matches(\":hover\")) {\n      samplingX = clientX - bounds.x;\n      samplingY = clientY - bounds.y;\n    } else {\n      // snap x and y to the closest edge\n\n      if (clientX < bounds.x + bounds.width && clientX > bounds.x) {\n        samplingX = clientX - bounds.x;\n      } else if (clientX < bounds.x) {\n        samplingX = 0;\n      } else {\n        samplingX = bounds.width;\n      }\n\n      if (clientY < bounds.y + bounds.height && clientY > bounds.y) {\n        samplingY = clientY - bounds.y;\n      } else if (clientY < bounds.y) {\n        samplingY = 0;\n      } else {\n        samplingY = bounds.height;\n      }\n    }\n\n    if (context === this.colorFieldRenderingContext) {\n      this.captureColorFieldColor(samplingX, samplingY, false);\n    } else if (context === this.hueSliderRenderingContext) {\n      this.captureHueSliderColor(samplingX);\n    } else if (context === this.opacitySliderRenderingContext) {\n      this.captureOpacitySliderValue(samplingX);\n    }\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n\n    this.handleAllowEmptyOrClearableChange();\n\n    const { isClearable, color, format, value } = this;\n    const willSetNoColor = isClearable && !value;\n    const parsedMode = parseMode(value);\n    const valueIsCompatible =\n      willSetNoColor || (format === \"auto\" && parsedMode) || format === parsedMode;\n    const initialColor = willSetNoColor ? null : valueIsCompatible ? Color(value) : color;\n\n    if (!valueIsCompatible) {\n      this.showIncompatibleColorWarning(value, format);\n    }\n    this.setMode(format, false);\n    this.internalColorSet(initialColor, false, \"initial\");\n\n    this.updateDimensions(this.scale);\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId && localStorage.getItem(storageKey)) {\n      this.savedColors = JSON.parse(localStorage.getItem(storageKey));\n    }\n\n    await setUpMessages(this);\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    window.removeEventListener(\"pointermove\", this.globalPointerMoveHandler);\n    window.removeEventListener(\"pointerup\", this.globalPointerUpHandler);\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const {\n      channelsDisabled,\n      color,\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n      dimensions: {\n        slider: { width: sliderWidth },\n        thumb: { radius: thumbRadius },\n      },\n      hexDisabled,\n      hideChannels,\n      hideHex,\n      hideSaved,\n      hueScopeLeft,\n      messages,\n      alphaChannel,\n      opacityScopeLeft,\n      savedColors,\n      savedDisabled,\n      scale,\n      scopeOrientation,\n    } = this;\n    const selectedColorInHex = color ? hexify(color, alphaChannel) : null;\n    const hueTop = thumbRadius;\n    const hueLeft = hueScopeLeft ?? (sliderWidth * DEFAULT_COLOR.hue()) / HSV_LIMITS.h;\n    const opacityTop = thumbRadius;\n    const opacityLeft =\n      opacityScopeLeft ??\n      (sliderWidth * alphaToOpacity(DEFAULT_COLOR.alpha())) / OPACITY_LIMITS.max;\n    const noColor = color === null;\n    const vertical = scopeOrientation === \"vertical\";\n    const noHex = hexDisabled || hideHex;\n    const noChannels = channelsDisabled || hideChannels;\n    const noSaved = savedDisabled || hideSaved;\n    const [adjustedColorFieldScopeLeft, adjustedColorFieldScopeTop] = this.getAdjustedScopePosition(\n      colorFieldScopeLeft,\n      colorFieldScopeTop,\n    );\n    const [adjustedHueScopeLeft, adjustedHueScopeTop] = this.getAdjustedScopePosition(\n      hueLeft,\n      hueTop,\n    );\n    const [adjustedOpacityScopeLeft, adjustedOpacityScopeTop] = this.getAdjustedScopePosition(\n      opacityLeft,\n      opacityTop,\n    );\n\n    return (\n      <InteractiveContainer disabled={this.disabled}>\n        <div class={CSS.container}>\n          <div class={CSS.controlAndScope}>\n            <canvas\n              class={CSS.colorField}\n              onPointerDown={this.handleColorFieldPointerDown}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.initColorField}\n            />\n            <div\n              aria-label={vertical ? messages.value : messages.saturation}\n              aria-valuemax={vertical ? HSV_LIMITS.v : HSV_LIMITS.s}\n              aria-valuemin=\"0\"\n              aria-valuenow={(vertical ? color?.saturationv() : color?.value()) || \"0\"}\n              class={{ [CSS.scope]: true, [CSS.colorFieldScope]: true }}\n              onKeyDown={this.handleColorFieldScopeKeyDown}\n              role=\"slider\"\n              style={{\n                top: `${adjustedColorFieldScopeTop || 0}px`,\n                left: `${adjustedColorFieldScopeLeft || 0}px`,\n              }}\n              tabindex=\"0\"\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.storeColorFieldScope}\n            />\n          </div>\n          <div class={CSS.previewAndSliders}>\n            <calcite-color-picker-swatch class={CSS.preview} color={selectedColorInHex} scale=\"l\" />\n            <div class={CSS.sliders}>\n              <div class={CSS.controlAndScope}>\n                <canvas\n                  class={{ [CSS.slider]: true, [CSS.hueSlider]: true }}\n                  onPointerDown={this.handleHueSliderPointerDown}\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.initHueSlider}\n                />\n                <div\n                  aria-label={messages.hue}\n                  aria-valuemax={HSV_LIMITS.h}\n                  aria-valuemin=\"0\"\n                  aria-valuenow={color?.round().hue() || DEFAULT_COLOR.round().hue()}\n                  class={{ [CSS.scope]: true, [CSS.hueScope]: true }}\n                  onKeyDown={this.handleHueScopeKeyDown}\n                  role=\"slider\"\n                  style={{\n                    top: `${adjustedHueScopeTop}px`,\n                    left: `${adjustedHueScopeLeft}px`,\n                  }}\n                  tabindex=\"0\"\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.storeHueScope}\n                />\n              </div>\n              {alphaChannel ? (\n                <div class={CSS.controlAndScope}>\n                  <canvas\n                    class={{ [CSS.slider]: true, [CSS.opacitySlider]: true }}\n                    onPointerDown={this.handleOpacitySliderPointerDown}\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.initOpacitySlider}\n                  />\n                  <div\n                    aria-label={messages.opacity}\n                    aria-valuemax={OPACITY_LIMITS.max}\n                    aria-valuemin={OPACITY_LIMITS.min}\n                    aria-valuenow={(color || DEFAULT_COLOR).round().alpha()}\n                    class={{ [CSS.scope]: true, [CSS.opacityScope]: true }}\n                    onKeyDown={this.handleOpacityScopeKeyDown}\n                    role=\"slider\"\n                    style={{\n                      top: `${adjustedOpacityScopeTop}px`,\n                      left: `${adjustedOpacityScopeLeft}px`,\n                    }}\n                    tabindex=\"0\"\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.storeOpacityScope}\n                  />\n                </div>\n              ) : null}\n            </div>\n          </div>\n          {noHex && noChannels ? null : (\n            <div\n              class={{\n                [CSS.controlSection]: true,\n                [CSS.section]: true,\n              }}\n            >\n              <div class={CSS.hexAndChannelsGroup}>\n                {noHex ? null : (\n                  <div class={CSS.hexOptions}>\n                    <calcite-color-picker-hex-input\n                      allowEmpty={this.isClearable}\n                      alphaChannel={alphaChannel}\n                      class={CSS.control}\n                      messages={messages}\n                      numberingSystem={this.numberingSystem}\n                      onCalciteColorPickerHexInputChange={this.handleHexInputChange}\n                      scale={scale}\n                      value={selectedColorInHex}\n                    />\n                  </div>\n                )}\n                {noChannels ? null : (\n                  <calcite-tabs\n                    class={{\n                      [CSS.colorModeContainer]: true,\n                      [CSS.splitSection]: true,\n                    }}\n                    scale={scale === \"l\" ? \"m\" : \"s\"}\n                  >\n                    <calcite-tab-nav slot=\"title-group\">\n                      {this.renderChannelsTabTitle(\"rgb\")}\n                      {this.renderChannelsTabTitle(\"hsv\")}\n                    </calcite-tab-nav>\n                    {this.renderChannelsTab(\"rgb\")}\n                    {this.renderChannelsTab(\"hsv\")}\n                  </calcite-tabs>\n                )}\n              </div>\n            </div>\n          )}\n          {noSaved ? null : (\n            <div class={{ [CSS.savedColorsSection]: true, [CSS.section]: true }}>\n              <div class={CSS.header}>\n                <label>{messages.saved}</label>\n                <div class={CSS.savedColorsButtons}>\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.deleteColor}\n                    disabled={noColor}\n                    iconStart=\"minus\"\n                    kind=\"neutral\"\n                    label={messages.deleteColor}\n                    onClick={this.deleteColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                  <calcite-button\n                    appearance=\"transparent\"\n                    class={CSS.saveColor}\n                    disabled={noColor}\n                    iconStart=\"plus\"\n                    kind=\"neutral\"\n                    label={messages.saveColor}\n                    onClick={this.saveColor}\n                    scale={scale}\n                    type=\"button\"\n                  />\n                </div>\n              </div>\n              {savedColors.length > 0 ? (\n                <div class={CSS.savedColors}>\n                  {[\n                    ...savedColors.map((color) => (\n                      <calcite-color-picker-swatch\n                        class={CSS.savedColor}\n                        color={color}\n                        key={color}\n                        onClick={this.handleSavedColorSelect}\n                        onKeyDown={this.handleSavedColorKeyDown}\n                        scale={scale}\n                        tabIndex={0}\n                      />\n                    )),\n                  ]}\n                </div>\n              ) : null}\n            </div>\n          )}\n        </div>\n      </InteractiveContainer>\n    );\n  }\n\n  private storeColorFieldScope = (node: HTMLDivElement): void => {\n    this.colorFieldScopeNode = node;\n  };\n\n  private storeHueScope = (node: HTMLDivElement): void => {\n    this.hueScopeNode = node;\n  };\n\n  private renderChannelsTabTitle = (channelMode: this[\"channelMode\"]): VNode => {\n    const { channelMode: activeChannelMode, messages } = this;\n    const selected = channelMode === activeChannelMode;\n    const label = channelMode === \"rgb\" ? messages.rgb : messages.hsv;\n\n    return (\n      <calcite-tab-title\n        class={CSS.colorMode}\n        data-color-mode={channelMode}\n        key={channelMode}\n        onCalciteTabsActivate={this.handleTabActivate}\n        selected={selected}\n      >\n        {label}\n      </calcite-tab-title>\n    );\n  };\n\n  private renderChannelsTab = (channelMode: this[\"channelMode\"]): VNode => {\n    const { isClearable, channelMode: activeChannelMode, channels, messages, alphaChannel } = this;\n    const selected = channelMode === activeChannelMode;\n    const isRgb = channelMode === \"rgb\";\n    const channelAriaLabels = isRgb\n      ? [messages.red, messages.green, messages.blue]\n      : [messages.hue, messages.saturation, messages.value];\n    const direction = getElementDir(this.el);\n    const channelsToRender = alphaChannel ? channels : channels.slice(0, 3);\n\n    return (\n      <calcite-tab class={CSS.control} key={channelMode} selected={selected}>\n        {/* channel order should not be mirrored */}\n        <div class={CSS.channels} dir=\"ltr\">\n          {channelsToRender.map((channelValue, index) => {\n            const isAlphaChannel = index === 3;\n\n            if (isAlphaChannel) {\n              channelValue =\n                isClearable && !channelValue ? channelValue : alphaToOpacity(channelValue);\n            }\n\n            /* the channel container is ltr, so we apply the host's direction */\n            return this.renderChannel(\n              channelValue,\n              index,\n              channelAriaLabels[index],\n              direction,\n              isAlphaChannel ? \"%\" : \"\",\n            );\n          })}\n        </div>\n      </calcite-tab>\n    );\n  };\n\n  private renderChannel = (\n    value: number | null,\n    index: number,\n    ariaLabel: string,\n    direction: Direction,\n    suffix?: string,\n  ): VNode => {\n    return (\n      <calcite-input-number\n        class={CSS.channel}\n        data-channel-index={index}\n        dir={direction}\n        key={index}\n        label={ariaLabel}\n        lang={this.effectiveLocale}\n        numberButtonType=\"none\"\n        numberingSystem={this.numberingSystem}\n        onCalciteInputNumberChange={this.handleChannelChange}\n        onCalciteInputNumberInput={this.handleChannelInput}\n        onKeyDown={this.handleKeyDown}\n        scale={this.scale === \"l\" ? \"m\" : \"s\"}\n        // workaround to ensure input borders overlap as desired\n        // this is because the build transforms margin-left to its\n        // logical-prop, which is undesired as channels are always ltr\n        style={{\n          marginLeft:\n            index > 0 && !(this.scale === \"s\" && this.alphaChannel && index === 3) ? \"-1px\" : \"\",\n        }}\n        suffixText={suffix}\n        value={value?.toString()}\n      />\n    );\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  handleKeyDown(event: KeyboardEvent): void {\n    if (event.key === \"Enter\") {\n      event.preventDefault();\n    }\n  }\n\n  private showIncompatibleColorWarning(value: ColorValue, format: Format): void {\n    console.warn(\n      `ignoring color value (${value}) as it is not compatible with the current format (${format})`,\n    );\n  }\n\n  private setMode(format: ColorPicker[\"format\"], warn = true): void {\n    const mode = format === \"auto\" ? this.mode : format;\n    this.mode = this.ensureCompatibleMode(mode, warn);\n  }\n\n  private ensureCompatibleMode(mode: SupportedMode, warn): SupportedMode {\n    const { alphaChannel } = this;\n    const isAlphaCompatible = alphaCompatible(mode);\n\n    if (alphaChannel && !isAlphaCompatible) {\n      const alphaMode = toAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${alphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return alphaMode;\n    }\n\n    if (!alphaChannel && isAlphaCompatible) {\n      const nonAlphaMode = toNonAlphaMode(mode);\n\n      if (warn) {\n        console.warn(\n          `setting format to (${nonAlphaMode}) as the provided one (${mode}) does not support alpha`,\n        );\n      }\n\n      return nonAlphaMode;\n    }\n\n    return mode;\n  }\n\n  private captureHueSliderColor(x: number): void {\n    const {\n      dimensions: {\n        slider: { width },\n      },\n    } = this;\n    const hue = (HUE_LIMIT_CONSTRAINED / width) * x;\n\n    this.internalColorSet(this.baseColorFieldColor.hue(hue), false);\n  }\n\n  private captureOpacitySliderValue(x: number): void {\n    const {\n      dimensions: {\n        slider: { width },\n      },\n    } = this;\n    const alpha = opacityToAlpha((OPACITY_LIMITS.max / width) * x);\n\n    this.internalColorSet(this.baseColorFieldColor.alpha(alpha), false);\n  }\n\n  private internalColorSet(\n    color: Color | null,\n    skipEqual = true,\n    context: ColorPicker[\"internalColorUpdateContext\"] = \"user-interaction\",\n  ): void {\n    if (skipEqual && colorEqual(color, this.color)) {\n      return;\n    }\n\n    this.internalColorUpdateContext = context;\n    this.color = color;\n    this.value = this.toValue(color);\n    this.internalColorUpdateContext = null;\n  }\n\n  private toValue(color: Color | null, format: SupportedMode = this.mode): ColorValue | null {\n    if (!color) {\n      return null;\n    }\n\n    const hexMode = \"hex\";\n\n    if (format.includes(hexMode)) {\n      const hasAlpha = format === CSSColorMode.HEXA;\n      return normalizeHex(hexify(color.round(), hasAlpha), hasAlpha);\n    }\n\n    if (format.includes(\"-css\")) {\n      const value = color[format.replace(\"-css\", \"\").replace(\"a\", \"\")]().round().string();\n\n      // Color omits alpha values when alpha is 1\n      const needToInjectAlpha =\n        (format.endsWith(\"a\") || format.endsWith(\"a-css\")) && color.alpha() === 1;\n      if (needToInjectAlpha) {\n        const model = value.slice(0, 3);\n        const values = value.slice(4, -1);\n        return `${model}a(${values}, ${color.alpha()})`;\n      }\n\n      return value;\n    }\n\n    const colorObject =\n      /* Color() does not support hsva, hsla nor rgba, so we use the non-alpha mode */\n      color[toNonAlphaMode(format)]().round().object();\n\n    if (format.endsWith(\"a\")) {\n      return normalizeAlpha(colorObject);\n    }\n\n    return colorObject;\n  }\n\n  private getSliderCapSpacing(): number {\n    const {\n      dimensions: {\n        slider: { height },\n        thumb: { radius },\n      },\n    } = this;\n\n    return radius * 2 - height;\n  }\n\n  private updateDimensions(scale: Scale = \"m\"): void {\n    this.dimensions = DIMENSIONS[scale];\n  }\n\n  private deleteColor = (): void => {\n    const colorToDelete = hexify(this.color, this.alphaChannel);\n    const inStorage = this.savedColors.indexOf(colorToDelete) > -1;\n\n    if (!inStorage) {\n      return;\n    }\n\n    const savedColors = this.savedColors.filter((color) => color !== colorToDelete);\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private saveColor = (): void => {\n    const colorToSave = hexify(this.color, this.alphaChannel);\n    const alreadySaved = this.savedColors.indexOf(colorToSave) > -1;\n\n    if (alreadySaved) {\n      return;\n    }\n\n    const savedColors = [...this.savedColors, colorToSave];\n\n    this.savedColors = savedColors;\n\n    const storageKey = `${DEFAULT_STORAGE_KEY_PREFIX}${this.storageId}`;\n\n    if (this.storageId) {\n      localStorage.setItem(storageKey, JSON.stringify(savedColors));\n    }\n  };\n\n  private drawColorControls = throttle(\n    (type: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\"): void => {\n      if ((type === \"all\" || type === \"color-field\") && this.colorFieldRenderingContext) {\n        this.drawColorField();\n      }\n\n      if ((type === \"all\" || type === \"hue-slider\") && this.hueSliderRenderingContext) {\n        this.drawHueSlider();\n      }\n\n      if (\n        this.alphaChannel &&\n        (type === \"all\" || type === \"opacity-slider\") &&\n        this.opacitySliderRenderingContext\n      ) {\n        this.drawOpacitySlider();\n      }\n    },\n    throttleFor60FpsInMs,\n  );\n\n  private drawColorField(): void {\n    const context = this.colorFieldRenderingContext;\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n\n    context.fillStyle = this.baseColorFieldColor\n      .hsv()\n      .saturationv(100)\n      .value(100)\n      .alpha(1)\n      .string();\n    context.fillRect(0, 0, width, height);\n\n    const whiteGradient = context.createLinearGradient(0, 0, width, 0);\n    whiteGradient.addColorStop(0, \"rgba(255,255,255,1)\");\n    whiteGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n    context.fillStyle = whiteGradient;\n    context.fillRect(0, 0, width, height);\n\n    const blackGradient = context.createLinearGradient(0, 0, 0, height);\n    blackGradient.addColorStop(0, \"rgba(0,0,0,0)\");\n    blackGradient.addColorStop(1, \"rgba(0,0,0,1)\");\n    context.fillStyle = blackGradient;\n    context.fillRect(0, 0, width, height);\n\n    this.drawActiveColorFieldColor();\n  }\n\n  private setCanvasContextSize(\n    canvas: HTMLCanvasElement,\n    { height, width }: { height: number; width: number },\n  ): void {\n    if (!canvas) {\n      return;\n    }\n\n    const devicePixelRatio = window.devicePixelRatio || 1;\n\n    canvas.width = width * devicePixelRatio;\n    canvas.height = height * devicePixelRatio;\n    canvas.style.height = `${height}px`;\n    canvas.style.width = `${width}px`;\n\n    const context = canvas.getContext(\"2d\");\n    context.scale(devicePixelRatio, devicePixelRatio);\n  }\n\n  private captureColorFieldColor = (x: number, y: number, skipEqual = true): void => {\n    const {\n      dimensions: {\n        colorField: { height, width },\n      },\n    } = this;\n    const saturation = Math.round((HSV_LIMITS.s / width) * x);\n    const value = Math.round((HSV_LIMITS.v / height) * (height - y));\n\n    this.internalColorSet(\n      this.baseColorFieldColor.hsv().saturationv(saturation).value(value),\n      skipEqual,\n    );\n  };\n\n  private initColorField = (canvas: HTMLCanvasElement): void => {\n    this.colorFieldRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"color-field\");\n    this.drawColorControls();\n  };\n\n  private initHueSlider = (canvas: HTMLCanvasElement): void => {\n    this.hueSliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"hue-slider\");\n    this.drawHueSlider();\n  };\n\n  private initOpacitySlider = (canvas: HTMLCanvasElement): void => {\n    if (!canvas) {\n      return;\n    }\n\n    this.opacitySliderRenderingContext = canvas.getContext(\"2d\");\n    this.updateCanvasSize(\"opacity-slider\");\n    this.drawOpacitySlider();\n  };\n\n  private updateCanvasSize(\n    context: \"all\" | \"color-field\" | \"hue-slider\" | \"opacity-slider\" = \"all\",\n  ): void {\n    const { dimensions } = this;\n\n    if (context === \"all\" || context === \"color-field\") {\n      this.setCanvasContextSize(this.colorFieldRenderingContext?.canvas, dimensions.colorField);\n    }\n\n    const adjustedSliderDimensions = {\n      width: dimensions.slider.width,\n      height:\n        dimensions.slider.height + (dimensions.thumb.radius - dimensions.slider.height / 2) * 2,\n    };\n\n    if (context === \"all\" || context === \"hue-slider\") {\n      this.setCanvasContextSize(this.hueSliderRenderingContext?.canvas, adjustedSliderDimensions);\n    }\n\n    if (context === \"all\" || context === \"opacity-slider\") {\n      this.setCanvasContextSize(\n        this.opacitySliderRenderingContext?.canvas,\n        adjustedSliderDimensions,\n      );\n    }\n  }\n\n  private drawActiveColorFieldColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv();\n\n    const {\n      dimensions: {\n        colorField: { height, width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.saturationv() / (HSV_LIMITS.s / width);\n    const y = height - hsvColor.value() / (HSV_LIMITS.v / height);\n\n    requestAnimationFrame(() => {\n      this.colorFieldScopeLeft = x;\n      this.colorFieldScopeTop = y;\n    });\n\n    this.drawThumb(this.colorFieldRenderingContext, radius, x, y, hsvColor, false);\n  }\n\n  private drawThumb(\n    context: CanvasRenderingContext2D,\n    radius: number,\n    x: number,\n    y: number,\n    color: Color,\n    applyAlpha: boolean,\n  ): void {\n    const startAngle = 0;\n    const endAngle = 2 * Math.PI;\n    const outlineWidth = 1;\n\n    context.beginPath();\n    context.arc(x, y, radius, startAngle, endAngle);\n    context.fillStyle = \"#fff\";\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = outlineWidth;\n    context.stroke();\n\n    if (applyAlpha && color.alpha() < 1) {\n      const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n      context.beginPath();\n      context.arc(x, y, radius - 3, startAngle, endAngle);\n      context.fillStyle = pattern;\n      context.fill();\n    }\n\n    context.globalCompositeOperation = \"source-atop\";\n\n    context.beginPath();\n    context.arc(x, y, radius - 3, startAngle, endAngle);\n    const alpha = applyAlpha ? color.alpha() : 1;\n    context.fillStyle = color.rgb().alpha(alpha).string();\n    context.fill();\n\n    context.globalCompositeOperation = \"source-over\";\n  }\n\n  private drawActiveHueSliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color.hsv().saturationv(100).value(100);\n\n    const {\n      dimensions: {\n        slider: { width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = hsvColor.hue() / (HUE_LIMIT_CONSTRAINED / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.hueScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.hueSliderRenderingContext, radius, sliderBoundX, y, hsvColor, false);\n  }\n\n  private drawHueSlider(): void {\n    const context = this.hueSliderRenderingContext;\n    const {\n      dimensions: {\n        slider: { height, width },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n\n    const gradient = context.createLinearGradient(0, 0, width, 0);\n\n    const hueSliderColorStopKeywords = [\n      \"red\",\n      \"yellow\",\n      \"lime\",\n      \"cyan\",\n      \"blue\",\n      \"magenta\",\n      \"#ff0004\" /* 1 unit less than #ff0 to avoid duplicate values within range */,\n    ];\n\n    const offset = 1 / (hueSliderColorStopKeywords.length - 1);\n    let currentOffset = 0;\n\n    hueSliderColorStopKeywords.forEach((keyword) => {\n      gradient.addColorStop(currentOffset, Color(keyword).string());\n      currentOffset += offset;\n    });\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveHueSliderColor();\n  }\n\n  private drawOpacitySlider(): void {\n    const context = this.opacitySliderRenderingContext;\n    const {\n      baseColorFieldColor: previousColor,\n      dimensions: {\n        slider: { height, width },\n        thumb: { radius: thumbRadius },\n      },\n    } = this;\n\n    const x = 0;\n    const y = thumbRadius - height / 2;\n\n    context.clearRect(0, 0, width, height + this.getSliderCapSpacing() * 2);\n\n    const gradient = context.createLinearGradient(0, y, width, 0);\n    const startColor = previousColor.rgb().alpha(0);\n    const midColor = previousColor.rgb().alpha(0.5);\n    const endColor = previousColor.rgb().alpha(1);\n\n    gradient.addColorStop(0, startColor.string());\n    gradient.addColorStop(0.5, midColor.string());\n    gradient.addColorStop(1, endColor.string());\n\n    this.drawSliderPath(context, height, width, x, y);\n\n    const pattern = context.createPattern(this.getCheckeredBackgroundPattern(), \"repeat\");\n    context.fillStyle = pattern;\n    context.fill();\n\n    context.fillStyle = gradient;\n    context.fill();\n\n    context.strokeStyle = \"rgba(0,0,0,0.3)\";\n    context.lineWidth = 1;\n    context.stroke();\n\n    this.drawActiveOpacitySliderColor();\n  }\n\n  private drawSliderPath(\n    context: CanvasRenderingContext2D,\n    height: number,\n    width: number,\n    x: number,\n    y: number,\n  ): void {\n    const radius = height / 2 + 1;\n    context.beginPath();\n    context.moveTo(x + radius, y);\n    context.lineTo(x + width - radius, y);\n    context.quadraticCurveTo(x + width, y, x + width, y + radius);\n    context.lineTo(x + width, y + height - radius);\n    context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    context.lineTo(x + radius, y + height);\n    context.quadraticCurveTo(x, y + height, x, y + height - radius);\n    context.lineTo(x, y + radius);\n    context.quadraticCurveTo(x, y, x + radius, y);\n    context.closePath();\n  }\n\n  private getCheckeredBackgroundPattern(): HTMLCanvasElement {\n    if (this.checkerPattern) {\n      return this.checkerPattern;\n    }\n\n    const pattern = document.createElement(\"canvas\");\n    pattern.width = 10;\n    pattern.height = 10;\n    const patternContext = pattern.getContext(\"2d\");\n\n    patternContext.fillStyle = \"#ccc\";\n    patternContext.fillRect(0, 0, 10, 10);\n    patternContext.fillStyle = \"#fff\";\n    patternContext.fillRect(0, 0, 5, 5);\n    patternContext.fillRect(5, 5, 5, 5);\n\n    this.checkerPattern = pattern;\n\n    return pattern;\n  }\n\n  private drawActiveOpacitySliderColor(): void {\n    const { color } = this;\n\n    if (!color) {\n      return;\n    }\n\n    const hsvColor = color;\n\n    const {\n      dimensions: {\n        slider: { width },\n        thumb: { radius },\n      },\n    } = this;\n\n    const x = alphaToOpacity(hsvColor.alpha()) / (OPACITY_LIMITS.max / width);\n    const y = radius;\n    const sliderBoundX = this.getSliderBoundX(x, width, radius);\n\n    requestAnimationFrame(() => {\n      this.opacityScopeLeft = sliderBoundX;\n    });\n\n    this.drawThumb(this.opacitySliderRenderingContext, radius, sliderBoundX, y, hsvColor, true);\n  }\n\n  private getSliderBoundX(x: number, width: number, radius: number): number {\n    const closeToEdge = closeToRangeEdge(x, width, radius);\n\n    return closeToEdge === 0\n      ? x\n      : closeToEdge === -1\n        ? remap(x, 0, width, radius, radius * 2)\n        : remap(x, 0, width, width - radius * 2, width - radius);\n  }\n\n  private storeOpacityScope = (node: HTMLDivElement): void => {\n    this.opacityScopeNode = node;\n  };\n\n  private handleOpacityScopeKeyDown = (event: KeyboardEvent): void => {\n    const modifier = event.shiftKey ? 10 : 1;\n    const { key } = event;\n    const arrowKeyToXOffset = {\n      ArrowUp: 0.01,\n      ArrowRight: 0.01,\n      ArrowDown: -0.01,\n      ArrowLeft: -0.01,\n    };\n\n    if (arrowKeyToXOffset[key]) {\n      event.preventDefault();\n      const delta = arrowKeyToXOffset[key] * modifier;\n      const alpha = this.baseColorFieldColor.alpha();\n      const color = this.baseColorFieldColor.alpha(alpha + delta);\n      this.internalColorSet(color, false);\n    }\n  };\n\n  private updateColorFromChannels(channels: this[\"channels\"]): void {\n    this.internalColorSet(Color(channels, this.channelMode));\n  }\n\n  private updateChannelsFromColor(color: Color | null): void {\n    this.channels = color ? this.toChannels(color) : [null, null, null, null];\n  }\n\n  private toChannels(color: Color): Channels {\n    const { channelMode } = this;\n\n    const channels = color[channelMode]()\n      .array()\n      .map((value, index) => {\n        const isAlpha = index === 3;\n        return isAlpha ? value : Math.floor(value);\n      });\n\n    if (channels.length === 3) {\n      channels.push(1); // Color omits alpha when 1\n    }\n\n    return channels as Channels;\n  }\n\n  private getAdjustedScopePosition(left: number, top: number): [number, number] {\n    return [left - SCOPE_SIZE / 2, top - SCOPE_SIZE / 2];\n  }\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","export const clamp = (value: number, min: number, max: number): number => Math.max(min, Math.min(value, max));\n\nconst decimalNumberRegex = new RegExp(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n/**\n * Returns the quantity of real decimal places for a number, which excludes trailing zeros.\n *\n * Adapted from {@link https://stackoverflow.com/questions/10454518/javascript-how-to-retrieve-the-number-of-decimals-of-a-string-number}.\n *\n * @param decimal - decimal value\n * @param value\n * @returns {number} the amount of decimal places in a number\n */\nexport const decimalPlaces = (value: number | string): number => {\n  const match = (\"\" + value).match(decimalNumberRegex);\n  if (!match || parseInt(match[1]) === 0) {\n    return 0;\n  }\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n      // Adjust for scientific notation.\n      (match[2] ? +match[2] : 0),\n  );\n};\n\nexport function getDecimals(value: number): number {\n  if (decimalPlaces(value) > 0 && value > 0) {\n    return parseFloat(`0.${value.toString().split(\".\")[1]}`);\n  }\n  return value;\n}\n\nexport function remap(value: number, fromMin: number, fromMax: number, toMin: number, toMax: number): number {\n  return ((value - fromMin) * (toMax - toMin)) / (fromMax - fromMin) + toMin;\n}\n\n/**\n * Helper to determine if a value is close to the edge of a range within a threshold.\n *\n * @param value\n * @param range\n * @param threshold\n * @returns -1 if close to lower edge, 1 if close to upper edge, 0 otherwise.\n */\nexport function closeToRangeEdge(value: number, range: number, threshold: number): number {\n  return value < threshold ? -1 : value > range - threshold ? 1 : 0;\n}\n","export const CSS = {\n  container: \"container\",\n  content: \"content\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n} from \"@stencil/core\";\nimport { CSS } from \"./resources\";\nimport { nodeListToArray } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { Scale } from \"../interfaces\";\nimport { TabChangeEventDetail } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-tab\",\n  styleUrl: \"tab.scss\",\n  shadow: true,\n})\nexport class Tab {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies a unique name for the component.\n   *\n   * When specified, use the same value on the `calcite-tab-title`.\n   */\n  @Prop({ reflect: true }) tab: string;\n\n  /**\n   * When `true`, the component's contents are selected.\n   *\n   * Only one tab can be selected within the `calcite-tabs` parent.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  /**\n   * Specifies the size of the component inherited from the parent `calcite-tabs`, defaults to `m`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const id = this.el.id || this.guid;\n\n    return (\n      <Host aria-labelledby={this.labeledBy} id={id}>\n        <div\n          class={{ [CSS.container]: true, [`scale-${this.scale}`]: true }}\n          role=\"tabpanel\"\n          tabIndex={this.selected ? 0 : -1}\n        >\n          <section class={CSS.content}>\n            <slot />\n          </section>\n        </div>\n      </Host>\n    );\n  }\n\n  connectedCallback(): void {\n    this.parentTabsEl = this.el.closest(\"calcite-tabs\");\n  }\n\n  componentDidLoad(): void {\n    this.calciteInternalTabRegister.emit();\n  }\n\n  disconnectedCallback(): void {\n    // Dispatching to body in order to be listened by other elements that are still connected to the DOM.\n    document.body?.dispatchEvent(\n      new CustomEvent(\"calciteTabUnregister\", {\n        detail: this.el,\n      }),\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalTabRegister: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalTabChange\", { target: \"body\" })\n  internalTabChangeHandler(event: CustomEvent<TabChangeEventDetail>): void {\n    const targetTabsEl = event\n      .composedPath()\n      .find((el: HTMLElement) => el.tagName === \"CALCITE-TABS\");\n\n    // to allow `<calcite-tabs>` to be nested we need to make sure this\n    // `calciteTabChange` event was actually fired from a within the same\n    // `<calcite-tabs>` that is the a parent of this tab.\n    if (targetTabsEl !== this.parentTabsEl) {\n      return;\n    }\n\n    if (this.tab) {\n      this.selected = this.tab === event.detail.tab;\n    } else {\n      this.getTabIndex().then((index) => {\n        this.selected = index === event.detail.tab;\n      });\n    }\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Returns the index of the component item within the tab array.\n   */\n  @Method()\n  async getTabIndex(): Promise<number> {\n    return Array.prototype.indexOf.call(\n      nodeListToArray(this.el.parentElement.children).filter((el) => el.matches(\"calcite-tab\")),\n      this.el,\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabElement;\n\n  parentTabsEl: HTMLCalciteTabsElement;\n\n  guid = `calcite-tab-title-${guid()}`;\n\n  @State() labeledBy: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @param tabIds\n   * @param titleIds\n   * @internal\n   */\n  @Method()\n  async updateAriaInfo(tabIds: string[] = [], titleIds: string[] = []): Promise<void> {\n    this.labeledBy = titleIds[tabIds.indexOf(this.el.id)] || null;\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-tab-content-block-padding: Specifies the block padding of the component's content in the `default` slot.\n */\n\n:host([selected]) {\n  section,\n  .container {\n    @apply block;\n  }\n}\n\n:host {\n  @apply hidden h-full w-full;\n}\n\n:host([selected]) {\n  @apply block h-full w-full overflow-auto;\n}\n\n.content {\n  @apply box-border;\n  padding-block: var(--calcite-internal-tab-content-block-padding);\n}\n\n.scale-s {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.1\"));\n  @apply text-n2h;\n}\n\n.scale-m {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.2\"));\n  @apply text-n1h;\n}\n\n.scale-l {\n  --calcite-internal-tab-content-block-padding: var(--calcite-tab-content-block-padding, theme(\"spacing.[2.5]\"));\n  @apply text-0h;\n}\n\nsection,\n.container {\n  @apply hidden h-full w-full;\n}\n\n.container {\n  @apply focus-base;\n\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\n@include base-component();\n","export const SLOTS = {\n  titleGroup: \"title-group\",\n};\n","import { Component, Element, Fragment, h, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { TabLayout, TabPosition } from \"./interfaces\";\nimport { SLOTS } from \"./resources\";\nimport { createObserver } from \"../../utils/observers\";\n\n/**\n * @slot - A slot for adding `calcite-tab`s.\n * @slot title-group - A slot for adding a `calcite-tab-nav`.\n */\n@Component({\n  tag: \"calcite-tabs\",\n  styleUrl: \"tabs.scss\",\n  shadow: true,\n})\nexport class Tabs {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the layout of the `calcite-tab-nav`, justifying the `calcite-tab-title`s to the start (`\"inline\"`), or across and centered (`\"center\"`).\n   */\n  @Prop({ reflect: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to the `calcite-tabs`.\n   */\n  @Prop({ reflect: true }) position: TabPosition = \"top\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"position\")\n  @Watch(\"scale\")\n  handleInheritableProps(): void {\n    this.updateItems();\n  }\n\n  /**\n   * When `true`, the component will display with a folder style menu.\n   */\n  @Prop() bordered = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver.observe(this.el, { childList: true });\n    this.updateItems();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.updateItems();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <slot name={SLOTS.titleGroup} />\n        <section>\n          <slot />\n        </section>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteInternalTabTitleRegister\")\n  calciteInternalTabTitleRegister(event: CustomEvent): void {\n    this.titles = [...this.titles, event.target as HTMLCalciteTabTitleElement];\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteTabTitleUnregister\", { target: \"body\" })\n  calciteTabTitleUnregister(event: CustomEvent): void {\n    this.titles = this.titles.filter((el) => el !== event.detail);\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteInternalTabRegister\")\n  calciteInternalTabRegister(event: CustomEvent): void {\n    this.tabs = [...this.tabs, event.target as HTMLCalciteTabElement];\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteTabUnregister\", { target: \"body\" })\n  calciteTabUnregister(event: CustomEvent): void {\n    this.tabs = this.tabs.filter((el) => el !== event.detail);\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabsElement;\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab-titles>`s to match up ARIA\n   * attributes.\n   */\n  @State() titles: HTMLCalciteTabTitleElement[] = [];\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab>`s to match up ARIA attributes.\n   */\n  @State() tabs: HTMLCalciteTabElement[] = [];\n\n  mutationObserver = createObserver(\"mutation\", (mutationsList: MutationRecord[]) => {\n    for (const mutation of mutationsList) {\n      const target = mutation.target as HTMLElement;\n      if (\n        target.nodeName === \"CALCITE-TAB-NAV\" ||\n        target.nodeName === \"CALCITE-TAB-TITLE\" ||\n        target.nodeName === \"CALCITE-TAB\"\n      ) {\n        this.updateItems();\n      }\n    }\n  });\n\n  private updateItems(): void {\n    const { position, scale } = this;\n\n    const nav = this.el.querySelector(\"calcite-tab-nav\");\n    if (nav) {\n      nav.position = position;\n      nav.scale = scale;\n    }\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab\")).forEach((tab: HTMLCalciteTabElement) => {\n      if (tab.parentElement === this.el) {\n        tab.scale = scale;\n      }\n    });\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab-nav > calcite-tab-title\")).forEach(\n      (title: HTMLCalciteTabTitleElement) => {\n        title.position = position;\n        title.scale = scale;\n      },\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   *\n   * Matches up elements from the internal `tabs` and `titles` to automatically\n   * update the ARIA attributes and link `<calcite-tab>` and\n   * `<calcite-tab-title>` components.\n   */\n  async registryHandler(): Promise<void> {\n    let tabIds;\n    let titleIds;\n\n    // determine if we are using `tab` based or `index` based tab identifiers.\n    if (this.tabs.some((el) => el.tab) || this.titles.some((el) => el.tab)) {\n      // if we are using `tab` based identifiers sort by `tab` to account for\n      // possible out of order tabs and get the id of each tab\n      tabIds = this.tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n    } else {\n      // if we are using index based tabs then the `<calcite-tab>` and\n      // `<calcite-tab-title>` might have been rendered out of order so the\n      // order of `this.tabs` and `this.titles` might not reflect the DOM state,\n      // and might not match each other so we need to get the index of all the\n      // tabs and titles in the DOM order to match them up as a source of truth\n      const tabDomIndexes = await Promise.all(this.tabs.map((el) => el.getTabIndex()));\n\n      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));\n\n      // once we have the DOM order as a source of truth we can build the\n      // matching tabIds and titleIds arrays\n      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.tabs[registryIndex].id;\n        return ids;\n      }, []);\n\n      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.titles[registryIndex].id;\n        return ids;\n      }, []);\n    }\n\n    // pass all our new aria information to each `<calcite-tab>` and\n    // `<calcite-tab-title>` which will check if they can update their internal\n    // `controlled` or `labeledBy` states and re-render if necessary\n    this.tabs.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n    this.titles.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n  }\n}\n",":host {\n  @apply flex flex-col;\n}\n\n:host([bordered]) {\n  box-shadow: inset 0 1px 0 var(--calcite-color-border-1);\n  background-color: var(--calcite-color-foreground-1);\n\n  section {\n    @apply border-color-1 border border-solid;\n  }\n}\n\n:host([bordered][position=\"bottom\"]) {\n  box-shadow:\n    inset 0 1px 0 var(--calcite-color-border-1),\n    inset 0 -1px 0 var(--calcite-color-border-1);\n}\n\n:host([bordered]:not([position=\"bottom\"])) ::slotted(calcite-tab-nav) {\n  margin-block-end: -1px;\n}\n\n:host([bordered][scale=\"s\"]) section {\n  @apply p-3;\n}\n\n:host([bordered][scale=\"m\"]) section {\n  @apply p-2;\n}\n\n:host([bordered][scale=\"l\"]) section {\n  @apply p-4;\n}\n\n:host([position=\"bottom\"]) {\n  @apply flex-col-reverse;\n}\n\nsection {\n  @apply border-t-color-1\n    flex\n    flex-grow\n    overflow-hidden\n    border-t;\n  border-block-start-style: solid;\n}\n\n:host([position=\"bottom\"]) section {\n  @apply border-b-color-1\n    flex-col-reverse\n    border-t-0\n    border-b;\n}\n\n:host([position=\"bottom\"]:not([bordered])) section {\n  border-block-end-style: solid;\n}\n\n@media (forced-colors: active) {\n  :host([bordered]) section {\n    @apply border-t-0\n      border-b;\n  }\n  :host([position=\"bottom\"][bordered]) section {\n    @apply border-t\n      border-b-0;\n  }\n}\n\n@include base-component();\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n"],"names":["CSS$1","DEFAULT_COLOR$1","color","DEFAULT_STORAGE_KEY_PREFIX","RGB_LIMITS","r","g","b","HSV_LIMITS","h","s","v","HUE_LIMIT_CONSTRAINED","OPACITY_LIMITS","DIMENSIONS","slider","height","width","colorField","thumb","radius","m","l","CSS","DEFAULT_COLOR","ColorPickerHexInput","proxyCustomElement","HTMLElement","onHexInputBlur","node","this","hexInputNode","inputValue","value","hex","concat","allowEmpty","internalColor","willClearValue","isLonghand","isLonghandHex","onHexInputChange","isValidHex","formatHexForInternalInput","rgbToHex","object","onOpacityInputBlur","opacityInputNode","formatOpacityForInternalInput","normalized","normalizeHex","alphaChannel","alphaHex","hexa","slice","internalSetValue","onOpacityInputChange","_this$internalColor","alpha","opacityToAlpha","Number","onInputKeyDown","event","altKey","ctrlKey","metaKey","shiftKey","key","composedPath","includes","preventDefault","isNudgeKey","oldValue","previousNonNullValue","direction","bump","hexify","nudgeRGBChannels","withModifiers","singleChar","length","validHexChar","hexChar","test","onHexInputPaste","clipboardData","getData","storeHexInputRef","storeOpacityInputRef","connectedCallback","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","handleValueChange","render","hexLabel","messages","scale","hexInputValue","opacityInputValue","inputScale","class","label","maxLength","onCalciteInputTextChange","onCalciteInternalInputTextBlur","onKeyDown","onPaste","prefixText","ref","opacity","max","min","numberButtonType","numberingSystem","onCalciteInputNumberChange","onCalciteInternalInputNumberBlur","suffixText","setFocus","componentFocusable","focusElement","emit","arguments","undefined","currentColor","nextColor","normalizedLonghand","changed","calciteColorPickerHexInputChange","replace","alphaToOpacity","color$1","amount","context","nudgedChannels","channels","array","rgbChannels","map","channel","nudgedAlpha","ColorPicker","internalColorUpdateContext","mode","CSSColorMode","HEX","shiftKeyChannelAdjustment","handleTabActivate","channelMode","currentTarget","getAttribute","updateChannelsFromColor","handleColorFieldScopeKeyDown","arrowKeyToXYOffset","ArrowUp","x","y","ArrowRight","ArrowDown","ArrowLeft","scopeOrientation","captureColorFieldColor","colorFieldScopeLeft","colorFieldScopeTop","handleHueScopeKeyDown","modifier","arrowKeyToXOffset","delta","hue","baseColorFieldColor","internalColorSet","handleHexInputChange","stopPropagation","isClearable","target","alphaCompatible","handleSavedColorSelect","swatch","handleChannelInput","input","channelIndex","limit","Object","keys","adjustedValue","clamp","toString","handleChannelChange","isAlphaChannel","updateColorFromChannels","handleSavedColorKeyDown","isActivationKey","handleColorFieldPointerDown","isPrimaryPointerButton","offsetX","offsetY","window","addEventListener","globalPointerMoveHandler","globalPointerUpHandler","once","activeCanvasInfo","colorFieldRenderingContext","bounds","canvas","getBoundingClientRect","colorFieldScopeNode","focus","handleHueSliderPointerDown","hueSliderRenderingContext","captureHueSliderColor","hueScopeNode","handleOpacitySliderPointerDown","opacitySliderRenderingContext","captureOpacitySliderValue","opacityScopeNode","previouslyDragging","drawColorControls","calciteColorPickerChange","el","isConnected","samplingX","samplingY","clientX","clientY","matches","storeColorFieldScope","storeHueScope","renderChannelsTabTitle","activeChannelMode","selected","rgb","hsv","onCalciteTabsActivate","renderChannelsTab","channelAriaLabels","red","green","blue","saturation","getElementDir","channelsToRender","dir","channelValue","index","renderChannel","ariaLabel","suffix","lang","effectiveLocale","onCalciteInputNumberInput","handleKeyDown","style","marginLeft","deleteColor","colorToDelete","savedColors","indexOf","filter","storageKey","storageId","localStorage","setItem","JSON","stringify","saveColor","colorToSave","throttle","type","_this","drawColorField","drawHueSlider","drawOpacitySlider","skipEqual","dimensions","Math","round","saturationv","initColorField","getContext","updateCanvasSize","initHueSlider","initOpacitySlider","storeOpacityScope","handleOpacityScopeKeyDown","toChannels","handleAllowEmptyOrClearableChange","clearable","handleAlphaChannelChange","format","console","warn","handleColorChange","oldColor","previousColor","handleFormatOrAlphaChannelChange","setMode","handleScaleChange","updateDimensions","onMessagesChange","modeChanged","nextMode","parseMode","showIncompatibleColorWarning","dragging","calciteColorPickerInput","normalizeColor","colorChanged","colorEqual","endsWith","effectiveLocaleChange","updateMessages","handleChannelKeyUpOrDown","some","_node$classList","classList","contains","willSetNoColor","parsedMode","valueIsCompatible","initialColor","getItem","parse","setUpMessages","connectInteractive","connectLocalized","connectMessages","disconnectedCallback","removeEventListener","disconnectInteractive","disconnectLocalized","disconnectMessages","componentDidRender","updateHostInteraction","channelsDisabled","sliderWidth","thumbRadius","hexDisabled","hideChannels","hideHex","hideSaved","hueScopeLeft","opacityScopeLeft","savedDisabled","selectedColorInHex","hueTop","hueLeft","opacityTop","opacityLeft","noColor","vertical","noHex","noChannels","noSaved","adjustedColorFieldScopeLeft","adjustedColorFieldScopeTop","getAdjustedScopePosition","adjustedHueScopeLeft","adjustedHueScopeTop","adjustedOpacityScopeLeft","adjustedOpacityScopeTop","InteractiveContainer","disabled","onPointerDown","role","top","left","tabindex","onCalciteColorPickerHexInputChange","slot","saved","appearance","iconStart","kind","onClick","tabIndex","ensureCompatibleMode","isAlphaCompatible","alphaMode","toAlphaMode","nonAlphaMode","toNonAlphaMode","toValue","hasAlpha","HEXA","string","model","values","colorObject","normalizeAlpha","getSliderCapSpacing","fillStyle","fillRect","whiteGradient","createLinearGradient","addColorStop","blackGradient","drawActiveColorFieldColor","setCanvasContextSize","_ref","devicePixelRatio","_this$colorFieldRende","adjustedSliderDimensions","_this$hueSliderRender","_this$opacitySliderRe","hsvColor","requestAnimationFrame","drawThumb","applyAlpha","endAngle","PI","beginPath","arc","fill","strokeStyle","lineWidth","stroke","pattern","createPattern","getCheckeredBackgroundPattern","globalCompositeOperation","drawActiveHueSliderColor","sliderBoundX","getSliderBoundX","gradient","hueSliderColorStopKeywords","offset","currentOffset","forEach","keyword","clearRect","drawSliderPath","startColor","midColor","endColor","drawActiveOpacitySliderColor","moveTo","lineTo","quadraticCurveTo","closePath","checkerPattern","document","createElement","patternContext","closeToEdge","closeToRangeEdge","remap","floor","push","SCOPE_SIZE","freeGlobal","global","freeSelf","self","root","Function","Symbol","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","symToStringTag$1","toStringTag","nativeObjectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","symbolTag","isSymbol","reWhitespace","reTrimStart","baseTrim","charAt","trimmedEndIndex","isObject","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","now","Date","FUNC_ERROR_TEXT","nativeMax","nativeMin","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","leadingEdge","clearTimeout","cancel","flush","decimalNumberRegex","RegExp","decimalPlaces","match","getDecimals","parseFloat","split","fromMin","fromMax","toMin","toMax","range","threshold","Tab","guid","id","Host","labeledBy","parentTabsEl","closest","calciteInternalTabRegister","_document$body","body","dispatchEvent","CustomEvent","detail","internalTabChangeHandler","find","tagName","tab","getTabIndex","then","Array","nodeListToArray","parentElement","children","updateAriaInfo","tabIds","titleIds","SLOTS","Tabs","mutationObserver","createObserver","mutationsList","mutation","nodeName","updateItems","handleInheritableProps","observe","childList","_this$mutationObserve","disconnect","Fragment","name","calciteInternalTabTitleRegister","titles","registryHandler","calciteTabTitleUnregister","tabs","calciteTabUnregister","position","nav","querySelector","from","querySelectorAll","title","sort","a","localeCompare","tabDomIndexes","Promise","all","titleDomIndexes","reduce","ids","indexInDOM","registryIndex"],"sourceRoot":""}