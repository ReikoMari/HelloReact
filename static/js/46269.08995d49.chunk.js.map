{"version":3,"file":"static/js/46269.08995d49.chunk.js","mappings":";wSAAO,MAAMA,EACS,uBADTA,EAGA,YAHAA,EAIH,SAJGA,EAKM,mBALNA,EAMe,+BANfA,EAOF,UAPEA,EASE,cATFA,EAUI,iBAVJA,EAWI,iBAXJA,EAYO,sBAZPA,EAaS,wBAbTA,EAcK,kBAdLA,EAeG,gBAfHA,EAgBH,SAGGC,EACJ,IADIA,EAEL,WAFKA,EAKH,eALGA,EAMD,aAGCC,EAAQ,CACnBC,UAAW,aACXC,mBAAoB,uBACpBC,iBAAkB,qBAClBC,kBAAmB,sBACnBC,cAAe,iBACfC,IAAK,MACLC,OAAQ,SACRC,cAAe,kBC4BJC,GAAKC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,6PAqIhB,KAAAC,gBAAiBC,EAAAA,EAAAA,GAAe,UAAU,IAAMC,KAAKC,kBAwDrD,KAAAA,cAAgB,KACd,MAAM,cAAEC,GAAkBF,KAGvBE,GACqC,kBAA/BA,EAAcC,cACiB,kBAA/BD,EAAcE,eAKvBF,EAAcG,SAAWH,EAAcC,aAAeD,EAAcE,aAAe,GAAK,EAAC,EAG3F,KAAAE,gBAAmBC,IACjBP,KAAKQ,YAAcD,CAAI,EAGzB,KAAAE,oBAAuBC,IACjBV,KAAKW,UAA0B,WAAdD,EAAME,MAAqBF,EAAMG,mBACpDb,KAAKc,QACLJ,EAAMK,mBAIV,KAAAD,MAAQ,KACNd,KAAKgB,QAAS,EACdhB,KAAKiB,kBAAkBC,MAAM,EAG/B,KAAAC,SAAW,KACTnB,KAAKoB,WAAapB,KAAKoB,UACvBpB,KAAKqB,mBAAmBH,MAAM,EAGhC,KAAAI,mBAAqB,KACnBtB,KAAKuB,mBAAmBL,MAAM,EAGhC,KAAAM,mCAAsCd,IACpCV,KAAKyB,iBAAkBC,EAAAA,EAAAA,GAA6BhB,EAAM,EAG5D,KAAAiB,iCAAoCjB,IAClCV,KAAK4B,eAAgBF,EAAAA,EAAAA,GAA6BhB,EAAM,EAG1D,KAAAmB,kCAAqCnB,IACnCV,KAAK8B,cAAeJ,EAAAA,EAAAA,GAA6BhB,EAAM,EAGzD,KAAAqB,0BAA6BrB,IAC3B,MAAMsB,GAAaC,EAAAA,EAAAA,GAA8BvB,GAAOwB,QACrDC,GAAS,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIC,QAAQ,wBAGtBJ,EAAWK,SAASlD,GAAeA,EAAUmD,OAAS,eAEtDtC,KAAKuC,eAAiBP,EAAWQ,MAAM,EAGzC,KAAAC,8BAAiC/B,IAC/BV,KAAK0C,kBAAmBhB,EAAAA,EAAAA,GAA6BhB,EAAM,EAG7D,KAAAiC,uBAA0BjC,IACxBV,KAAK4C,kBAAmBlB,EAAAA,EAAAA,GAA6BhB,EAAM,EAG7D,KAAAmC,8BAAiCnC,IAC/BV,KAAK8C,kBAAmBpB,EAAAA,EAAAA,GAA6BhB,EAAM,EAG7D,KAAAqC,oBAAuBrC,IACrBV,KAAKgD,QAAStB,EAAAA,EAAAA,GAA6BhB,EAAM,EA4OnD,KAAAuC,iBAAoBd,IAAe,IAAAe,EAIzBC,GAHRnD,KAAKE,cAAgBiC,EACF,QAAnBe,EAAAlD,KAAKF,sBAAc,IAAAoD,GAAnBA,EAAqBE,aAEjBjB,KACiB,QAAnBgB,EAAAnD,KAAKF,sBAAc,IAAAqD,GAAnBA,EAAqBE,QAAQlB,GAC7BnC,KAAKC,+BA/ewC,iBAKb,iBAGA,kBAKC,yBAOM,yBAKJ,yCAUJ,6DAaC,4EA6B8B,iCAgDvC,sBAEF,qBAED,yBAEI,qBAEJ,yBAEI,yBAEA,eAEV,mDAIS,2BAEE,EAhF7BqD,gBAAAA,IAoBAC,iBAAAA,IACEC,EAAAA,EAAAA,GAAmBxD,OACnByD,EAAAA,EAAAA,GAAiBzD,OACjB0D,EAAAA,EAAAA,GAAgB1D,MAGlB,uBAAM2D,IACJC,EAAAA,EAAAA,GAAuB5D,YACjB6D,EAAAA,EAAAA,GAAc7D,MAGtB8D,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB/D,MAGrBgE,kBAAAA,IACEC,EAAAA,EAAAA,GAAsBjE,MAGxBkE,oBAAAA,GAAoB,IAAAC,GAClBC,EAAAA,EAAAA,GAAsBpE,OACtBqE,EAAAA,EAAAA,GAAoBrE,OACpBsE,EAAAA,EAAAA,GAAmBtE,MACA,QAAnBmE,EAAAnE,KAAKF,sBAAc,IAAAqE,GAAnBA,EAAqBf,aAwCvBmB,qBAAAA,IACEC,EAAAA,EAAAA,GAAexE,KAAMA,KAAKyE,iBAqH5B,cAAMC,SACEC,EAAAA,EAAAA,GAAmB3E,OACzB4E,EAAAA,EAAAA,GAAmB5E,KAAKQ,aAgB1B,qBAAMqE,CAAgBC,GAAyB,IAAAC,EAC3B,QAAlBA,EAAA/E,KAAKE,qBAAa,IAAA6E,GAAlBA,EAAoBC,SAASF,GAS/BG,mBAAAA,GACE,MAAM,QAAEC,EAAO,aAAEC,EAAY,YAAEC,EAAW,iBAAE1C,GAAqB1C,KAC3DqF,EAAcH,GAClBI,EAAAA,EAAAA,GAACC,EAAAA,EAAO,CAACC,MAAOxG,EAAayG,MAAON,GACjCD,GAED,KAEEQ,EAAkBN,GAAcE,EAAAA,EAAAA,GAAA,QAAME,MAAOxG,GAAkBoG,GAAsB,KAE3F,OAAQ1C,IAAqB2C,IAAeK,EAKxC,MAJFJ,EAAAA,EAAAA,GAAA,OAAKE,MAAOxG,EAAmB4B,IAAI,kBAChCyE,EACAK,GAKPC,eAAAA,GACE,OACEL,EAAAA,EAAAA,GAAA,OAAKE,MAAOxG,EAAwB4G,QAAS5F,KAAKuC,eAChD+C,EAAAA,EAAAA,GAAA,QAAMO,KAAM3G,EAAMC,UAAW2G,aAAc9F,KAAK+B,6BAKtDgE,0BAAAA,GACE,OACET,EAAAA,EAAAA,GAAA,OAAKE,MAAOxG,EAAmB4G,QAAS5F,KAAK0C,iBAAkB9B,IAAI,2BACjE0E,EAAAA,EAAAA,GAAA,QAAMO,KAAM3G,EAAMK,cAAeuG,aAAc9F,KAAKyC,iCAK1DuD,wBAAAA,GACE,MAAM,gBAAEvE,GAAoBzB,KAE5B,OACEsF,EAAAA,EAAAA,GAAA,OACEE,MAAO,CAAE,CAACxG,IAAyB,EAAM,CAACA,IAAoB,GAC9D4G,QAASnE,EACTb,IAAI,yBAEJ0E,EAAAA,EAAAA,GAAA,QACEO,KAAM3G,EAAME,mBACZ0G,aAAc9F,KAAKwB,sCAM3ByE,sBAAAA,GACE,MAAM,cACJrE,EAAa,SACbsE,EAAQ,SACRvF,EAAQ,UACRS,EAAS,kBACT+E,EAAiB,YACjBC,EAAW,aACXtE,GACE9B,MACE,SAAEmB,EAAQ,OAAEkF,EAAM,MAAEvF,GAAUoF,EAE9BI,EAAQ,CAACrH,EAAcA,GAEH,OAAtBkH,GACFG,EAAMC,UAGR,MAAMC,EAAeJ,GACnBd,EAAAA,EAAAA,GAAA,mCACiBmB,EAAAA,EAAAA,IAAerF,GAAU,aAC5BD,EAAQ,YACV,WACVuF,KAAMtF,EAAYkF,EAAM,GAAKA,EAAM,GACnCK,QAAS3G,KAAKmB,SACdyF,KAAMzF,EACN0F,MAAOzF,EAAYiF,EAASlF,IAE5B,KAEE2F,EAAYnG,GAChB2E,EAAAA,EAAAA,GAAA,+BACcxE,EAAK,YACP,QACV4F,KAAMzH,EACN0H,QAAS3G,KAAKc,MACd8F,KAAM9F,EACN+F,MAAO/F,IAEP,KAEEiG,GACJzB,EAAAA,EAAAA,GAAA,QAAMO,KAAM3G,EAAMG,iBAAkByG,aAAc9F,KAAK2B,mCAGnDqF,EAAgBpF,GAAiB4E,GAAgBM,GAAahF,EAEpE,OACEwD,EAAAA,EAAAA,GAAA,OACEE,MAAO,CAAE,CAACxG,IAAuB,EAAM,CAACA,IAAoB,GAC5D4G,QAASoB,EACTpG,IAAI,sBAEHmG,EACA/G,KAAKiH,aACLT,EACAM,GAKPG,UAAAA,GACE,MAAM,aAAEnF,EAAY,SAAEoE,EAAQ,SAAEgB,GAAalH,KAE7C,OACEsF,EAAAA,EAAAA,GAAA,uBACE6B,eAAgB,CAAC,MAAO,UACxBvB,QAAS9D,EACTlB,IAAI,OACJwG,MAAOlB,EAASpB,QAChBuC,KAAMH,EACNI,mBAAoBtH,KAAKsH,mBACzBC,UAAU,eAEVjC,EAAAA,EAAAA,GAAA,kBACEoB,KAAMzH,EACNuI,KAAMC,EAAAA,EAAkBC,QACxBd,KAAMV,EAASpB,WAEjBQ,EAAAA,EAAAA,GAAA,QACEO,KAAM3G,EAAMI,kBACZwG,aAAc9F,KAAK6B,qCAM3B8F,gBAAAA,GACE,MAAM,iBACJjF,EAAgB,gBAChBjB,EAAe,cACfG,EAAa,SACbjB,EAAQ,YACRyF,EAAW,aACXtE,EAAY,aACZS,GACEvC,KAEE4H,EAAoB5H,KAAKiF,sBAEzB4C,EACJnF,KACEkF,GACFnG,GACAG,GACAwE,GACAzF,GACAmB,EAIF,OAFA9B,KAAK6H,kBAAoBA,GAGvBvC,EAAAA,EAAAA,GAAA,UAAQE,MAAOxG,EAAY4G,SAAUiC,GAAqBtF,KACxD+C,EAAAA,EAAAA,GAAA,OACEE,MAAO,CAAE,CAACxG,IAAsB,EAAM,CAACA,GAA+BuD,GACtEqD,QAASiC,GAER7H,KAAKgG,2BACLhG,KAAK+F,6BACL6B,EACA5H,KAAKiG,0BAEPjG,KAAK2F,mBAKZmC,gBAAAA,GACE,MAAM,iBAAElF,EAAgB,iBAAEE,GAAqB9C,KAEzC+H,EAAanF,GAAoBE,EAEvC,OACEwC,EAAAA,EAAAA,GAAA,UAAQE,MAAOxG,EAAY4G,QAASmC,IAClCzC,EAAAA,EAAAA,GAAA,QAAM1E,IAAI,cAAciF,KAAM3G,EAAMO,OAAQqG,aAAc9F,KAAK2C,0BAC/D2C,EAAAA,EAAAA,GAAA,QACE1E,IAAI,sBACJiF,KAAM3G,EAAMQ,cACZoG,aAAc9F,KAAK6C,iCAgB3BmF,aAAAA,GACE,OACE1C,EAAAA,EAAAA,GAAA,OACEE,MAAOxG,EACP4G,OAAQ5F,KAAKoG,aAAepG,KAAKoB,UACjC6G,SAAUjI,KAAKsB,mBAEf4G,IAAKlI,KAAKiD,mBAEVqC,EAAAA,EAAAA,GAAA,aACCtF,KAAKmI,aAKZA,SAAAA,GACE,OACE7C,EAAAA,EAAAA,GAAA,OAAKE,MAAOxG,EAAkB4G,QAAS5F,KAAKgD,SAC1CsC,EAAAA,EAAAA,GAAA,QAAMO,KAAM3G,EAAMM,IAAKsG,aAAc9F,KAAK+C,uBAKhDqF,MAAAA,GACE,MAAM,SAAEC,EAAQ,QAAEC,EAAO,oBAAE7H,EAAmB,OAAEO,EAAM,SAAEL,GAAaX,KAE/DuI,GACJjD,EAAAA,EAAAA,GAAA,wBACamB,EAAAA,EAAAA,GAAc6B,GACzB9C,MAAOxG,EACP4G,OAAQ5E,EACRwH,UAAW/H,EACXJ,SAAUM,EAAW,GAAK,EAE1BuH,IAAKlI,KAAKM,iBAETN,KAAK2H,mBACL3H,KAAKgI,gBACLhI,KAAK8H,oBAIV,OACExC,EAAAA,EAAAA,GAACmD,EAAAA,EAAoB,CAACJ,SAAUA,GAC7BC,GAAUhD,EAAAA,EAAAA,GAAA,iBAAegD,QAASA,IAAc,KAChDC,wMC1mBQ,yrJCAV,MAAMvJ,EACJ,QADIA,EAEF,UAGE0J,EACR,GADQA,EAGR,ICgBQC,GAAK/I,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEAuChB,KAAAC,gBAAiBC,EAAAA,EAAAA,GAAe,UAAU,IAAMC,KAAK4I,iBAuE7C,KAAAC,wBAA2BnI,IACjCV,KAAK8I,YAAaC,EAAAA,EAAAA,GAAqBrI,EAAM,EAGvC,KAAAsI,cAAiB7G,IACvBnC,KAAKiJ,SAAW9G,EAChBnC,KAAK4I,cAAc,gBA1Gc,6HAqCR,oBAOL,EA3BtBtF,gBAAAA,IAuBAiB,qBAAAA,IACEC,EAAAA,EAAAA,GAAexE,KAAMA,KAAKyE,iBAW5BlB,iBAAAA,GAAiB,IAAAL,GACfO,EAAAA,EAAAA,GAAiBzD,OACjB0D,EAAAA,EAAAA,GAAgB1D,MACG,QAAnBkD,EAAAlD,KAAKF,sBAAc,IAAAoD,GAAnBA,EAAqBG,QAAQrD,KAAKmC,IAGpC,uBAAMwB,SACEE,EAAAA,EAAAA,GAAc7D,MAGtBkE,oBAAAA,GAAoB,IAAAf,GAClBkB,EAAAA,EAAAA,GAAoBrE,OACpBsE,EAAAA,EAAAA,GAAmBtE,MACA,QAAnBmD,EAAAnD,KAAKF,sBAAc,IAAAqD,GAAnBA,EAAqBC,aASvBgF,MAAAA,GACE,MAAM,WAAEU,EAAU,QAAER,EAAO,SAAEpC,GAAalG,KAE1C,OACEsF,EAAAA,EAAAA,GAAA,OAAKE,MAAOxG,GACTsJ,GACChD,EAAAA,EAAAA,GAAA,kBACE8B,MAAOlB,EAASoC,QAChBY,MAAOlJ,KAAKmJ,YAEZjB,IAAKlI,KAAKgJ,gBAEV,MACJ1D,EAAAA,EAAAA,GAAA,OAAKE,MAAOxG,EAAa4G,QAASkD,IAChCxD,EAAAA,EAAAA,GAAA,QAAMQ,aAAc9F,KAAK6I,4BAqBzBO,QAAAA,CAASC,GACf,OAAIA,EAAOX,EACF,IACEW,GAAQX,EACV,IAEA,IAIHE,YAAAA,GAAY,IAAAU,EAClB,MAAM,SAAEL,EAAQ,GAAE9G,GAAOnC,KAEpBiJ,IAILjJ,KAAKmJ,YAAcnJ,KAAKoJ,SAAkD,QAA1CE,EAACC,KAAKC,IAAIrH,EAAGsH,aAActH,EAAGuH,oBAAY,IAAAJ,EAAAA,EAAI,yMChKjE","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/panel/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/panel/panel.scss?tag=calcite-panel&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow"],"sourcesContent":["export const CSS = {\n  actionBarContainer: \"action-bar-container\",\n  backButton: \"back-button\",\n  container: \"container\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerContainerBorderEnd: \"header-container--border-end\",\n  heading: \"heading\",\n  summary: \"summary\",\n  description: \"description\",\n  headerContent: \"header-content\",\n  headerActions: \"header-actions\",\n  headerActionsEnd: \"header-actions--end\",\n  headerActionsStart: \"header-actions--start\",\n  contentWrapper: \"content-wrapper\",\n  fabContainer: \"fab-container\",\n  footer: \"footer\",\n};\n\nexport const ICONS = {\n  close: \"x\",\n  menu: \"ellipsis\",\n  backLeft: \"chevron-left\",\n  backRight: \"chevron-right\",\n  expand: \"chevron-down\",\n  collapse: \"chevron-up\",\n};\n\nexport const SLOTS = {\n  actionBar: \"action-bar\",\n  headerActionsStart: \"header-actions-start\",\n  headerActionsEnd: \"header-actions-end\",\n  headerMenuActions: \"header-menu-actions\",\n  headerContent: \"header-content\",\n  fab: \"fab\",\n  footer: \"footer\",\n  footerActions: \"footer-actions\",\n};\n\nexport const HEADING_LEVEL = 3;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  focusFirstTabbable,\n  slotChangeGetAssignedElements,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\n\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { PanelMessages } from \"./assets/panel/t9n\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot action-bar - A slot for adding a `calcite-action-bar` to the component.\n * @slot header-actions-start - A slot for adding actions or content to the start side of the header.\n * @slot header-actions-end - A slot for adding actions or content to the end side of the header.\n * @slot header-content - A slot for adding custom content to the header.\n * @slot header-menu-actions - A slot for adding an overflow menu with actions inside a `calcite-dropdown`.\n * @slot fab - A slot for adding a `calcite-fab` (floating action button) to perform an action.\n * @slot footer-actions - [Deprecated] Use the `\"footer\"` slot instead. A slot for adding `calcite-button`s to the component's footer.\n * @slot footer - A slot for adding custom content to the footer.\n */\n@Component({\n  tag: \"calcite-panel\",\n  styleUrl: \"panel.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Panel\n  implements InteractiveComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** When `true`, the component will be hidden. */\n  @Prop({ mutable: true, reflect: true }) closed = false;\n\n  /**\n   *  When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** When `true`, displays a close button in the trailing side of the header. */\n  @Prop({ reflect: true }) closable = false;\n\n  /**\n   * When `true`, hides the component's content area.\n   */\n  @Prop({ reflect: true }) collapsed = false;\n\n  /**\n   * Specifies the direction of the collapse.\n   *\n   * @internal\n   */\n  @Prop() collapseDirection: \"down\" | \"up\" = \"down\";\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading: string;\n\n  /** A description for the component. */\n  @Prop() description: string;\n\n  /**\n   * When `true`, the action menu items in the `header-menu-actions` slot are open.\n   */\n  @Prop({ reflect: true }) menuOpen = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<PanelMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: PanelMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalcitePanelElement;\n\n  containerEl: HTMLElement;\n\n  panelScrollEl: HTMLElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.resizeHandler());\n\n  @State() hasStartActions = false;\n\n  @State() hasEndActions = false;\n\n  @State() hasMenuItems = false;\n\n  @State() hasHeaderContent = false;\n\n  @State() hasActionBar = false;\n\n  @State() hasFooterContent = false;\n\n  @State() hasFooterActions = false;\n\n  @State() hasFab = false;\n\n  @State() defaultMessages: PanelMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @State() showHeaderContent = false;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelClose: EventEmitter<void>;\n\n  /**\n   * Fires when the collapse button is clicked.\n   */\n  @Event({ cancelable: false }) calcitePanelToggle: EventEmitter<void>;\n\n  /**\n   * Fires when the content is scrolled.\n   */\n  @Event({ cancelable: false }) calcitePanelScroll: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  resizeHandler = (): void => {\n    const { panelScrollEl } = this;\n\n    if (\n      !panelScrollEl ||\n      typeof panelScrollEl.scrollHeight !== \"number\" ||\n      typeof panelScrollEl.offsetHeight !== \"number\"\n    ) {\n      return;\n    }\n\n    panelScrollEl.tabIndex = panelScrollEl.scrollHeight > panelScrollEl.offsetHeight ? 0 : -1;\n  };\n\n  setContainerRef = (node: HTMLElement): void => {\n    this.containerEl = node;\n  };\n\n  panelKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.closable && event.key === \"Escape\" && !event.defaultPrevented) {\n      this.close();\n      event.preventDefault();\n    }\n  };\n\n  close = (): void => {\n    this.closed = true;\n    this.calcitePanelClose.emit();\n  };\n\n  collapse = (): void => {\n    this.collapsed = !this.collapsed;\n    this.calcitePanelToggle.emit();\n  };\n\n  panelScrollHandler = (): void => {\n    this.calcitePanelScroll.emit();\n  };\n\n  handleHeaderActionsStartSlotChange = (event: Event): void => {\n    this.hasStartActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderActionsEndSlotChange = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleHeaderMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuItems = slotChangeHasAssignedElement(event);\n  };\n\n  handleActionBarSlotChange = (event: Event): void => {\n    const actionBars = slotChangeGetAssignedElements(event).filter(\n      (el) => el?.matches(\"calcite-action-bar\"),\n    ) as HTMLCalciteActionBarElement[];\n\n    actionBars.forEach((actionBar) => (actionBar.layout = \"horizontal\"));\n\n    this.hasActionBar = !!actionBars.length;\n  };\n\n  handleHeaderContentSlotChange = (event: Event): void => {\n    this.hasHeaderContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterSlotChange = (event: Event): void => {\n    this.hasFooterContent = slotChangeHasAssignedElement(event);\n  };\n\n  handleFooterActionsSlotChange = (event: Event): void => {\n    this.hasFooterActions = slotChangeHasAssignedElement(event);\n  };\n\n  handleFabSlotChange = (event: Event): void => {\n    this.hasFab = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.containerEl);\n  }\n\n  /**\n   * Scrolls the component's content to a specified set of coordinates.\n   *\n   * @example\n   * myCalciteFlowItem.scrollContentTo({\n   *   left: 0, // Specifies the number of pixels along the X axis to scroll the window or element.\n   *   top: 0, // Specifies the number of pixels along the Y axis to scroll the window or element\n   *   behavior: \"auto\" // Specifies whether the scrolling should animate smoothly (smooth), or happen instantly in a single jump (auto, the default value).\n   * });\n   * @param options - allows specific coordinates to be defined.\n   * @returns - promise that resolves once the content is scrolled to.\n   */\n  @Method()\n  async scrollContentTo(options?: ScrollToOptions): Promise<void> {\n    this.panelScrollEl?.scrollTo(options);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderHeaderContent(): VNode {\n    const { heading, headingLevel, description, hasHeaderContent } = this;\n    const headingNode = heading ? (\n      <Heading class={CSS.heading} level={headingLevel}>\n        {heading}\n      </Heading>\n    ) : null;\n\n    const descriptionNode = description ? <span class={CSS.description}>{description}</span> : null;\n\n    return !hasHeaderContent && (headingNode || descriptionNode) ? (\n      <div class={CSS.headerContent} key=\"header-content\">\n        {headingNode}\n        {descriptionNode}\n      </div>\n    ) : null;\n  }\n\n  renderActionBar(): VNode {\n    return (\n      <div class={CSS.actionBarContainer} hidden={!this.hasActionBar}>\n        <slot name={SLOTS.actionBar} onSlotchange={this.handleActionBarSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderSlottedContent(): VNode {\n    return (\n      <div class={CSS.headerContent} hidden={!this.hasHeaderContent} key=\"slotted-header-content\">\n        <slot name={SLOTS.headerContent} onSlotchange={this.handleHeaderContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderHeaderStartActions(): VNode {\n    const { hasStartActions } = this;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsStart]: true, [CSS.headerActions]: true }}\n        hidden={!hasStartActions}\n        key=\"header-actions-start\"\n      >\n        <slot\n          name={SLOTS.headerActionsStart}\n          onSlotchange={this.handleHeaderActionsStartSlotChange}\n        />\n      </div>\n    );\n  }\n\n  renderHeaderActionsEnd(): VNode {\n    const {\n      hasEndActions,\n      messages,\n      closable,\n      collapsed,\n      collapseDirection,\n      collapsible,\n      hasMenuItems,\n    } = this;\n    const { collapse, expand, close } = messages;\n\n    const icons = [ICONS.expand, ICONS.collapse];\n\n    if (collapseDirection === \"up\") {\n      icons.reverse();\n    }\n\n    const collapseNode = collapsible ? (\n      <calcite-action\n        aria-expanded={toAriaBoolean(!collapsed)}\n        aria-label={collapse}\n        data-test=\"collapse\"\n        icon={collapsed ? icons[0] : icons[1]}\n        onClick={this.collapse}\n        text={collapse}\n        title={collapsed ? expand : collapse}\n      />\n    ) : null;\n\n    const closeNode = closable ? (\n      <calcite-action\n        aria-label={close}\n        data-test=\"close\"\n        icon={ICONS.close}\n        onClick={this.close}\n        text={close}\n        title={close}\n      />\n    ) : null;\n\n    const slotNode = (\n      <slot name={SLOTS.headerActionsEnd} onSlotchange={this.handleHeaderActionsEndSlotChange} />\n    );\n\n    const showContainer = hasEndActions || collapseNode || closeNode || hasMenuItems;\n\n    return (\n      <div\n        class={{ [CSS.headerActionsEnd]: true, [CSS.headerActions]: true }}\n        hidden={!showContainer}\n        key=\"header-actions-end\"\n      >\n        {slotNode}\n        {this.renderMenu()}\n        {collapseNode}\n        {closeNode}\n      </div>\n    );\n  }\n\n  renderMenu(): VNode {\n    const { hasMenuItems, messages, menuOpen } = this;\n\n    return (\n      <calcite-action-menu\n        flipPlacements={[\"top\", \"bottom\"]}\n        hidden={!hasMenuItems}\n        key=\"menu\"\n        label={messages.options}\n        open={menuOpen}\n        overlayPositioning={this.overlayPositioning}\n        placement=\"bottom-end\"\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.options}\n        />\n        <slot\n          name={SLOTS.headerMenuActions}\n          onSlotchange={this.handleHeaderMenuActionsSlotChange}\n        />\n      </calcite-action-menu>\n    );\n  }\n\n  renderHeaderNode(): VNode {\n    const {\n      hasHeaderContent,\n      hasStartActions,\n      hasEndActions,\n      closable,\n      collapsible,\n      hasMenuItems,\n      hasActionBar,\n    } = this;\n\n    const headerContentNode = this.renderHeaderContent();\n\n    const showHeaderContent =\n      hasHeaderContent ||\n      !!headerContentNode ||\n      hasStartActions ||\n      hasEndActions ||\n      collapsible ||\n      closable ||\n      hasMenuItems;\n\n    this.showHeaderContent = showHeaderContent;\n\n    return (\n      <header class={CSS.header} hidden={!(showHeaderContent || hasActionBar)}>\n        <div\n          class={{ [CSS.headerContainer]: true, [CSS.headerContainerBorderEnd]: hasActionBar }}\n          hidden={!showHeaderContent}\n        >\n          {this.renderHeaderStartActions()}\n          {this.renderHeaderSlottedContent()}\n          {headerContentNode}\n          {this.renderHeaderActionsEnd()}\n        </div>\n        {this.renderActionBar()}\n      </header>\n    );\n  }\n\n  renderFooterNode(): VNode {\n    const { hasFooterContent, hasFooterActions } = this;\n\n    const showFooter = hasFooterContent || hasFooterActions;\n\n    return (\n      <footer class={CSS.footer} hidden={!showFooter}>\n        <slot key=\"footer-slot\" name={SLOTS.footer} onSlotchange={this.handleFooterSlotChange} />\n        <slot\n          key=\"footer-actions-slot\"\n          name={SLOTS.footerActions}\n          onSlotchange={this.handleFooterActionsSlotChange}\n        />\n      </footer>\n    );\n  }\n\n  setPanelScrollEl = (el: HTMLElement): void => {\n    this.panelScrollEl = el;\n    this.resizeObserver?.disconnect();\n\n    if (el) {\n      this.resizeObserver?.observe(el);\n      this.resizeHandler();\n    }\n  };\n\n  renderContent(): VNode {\n    return (\n      <div\n        class={CSS.contentWrapper}\n        hidden={this.collapsible && this.collapsed}\n        onScroll={this.panelScrollHandler}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setPanelScrollEl}\n      >\n        <slot />\n        {this.renderFab()}\n      </div>\n    );\n  }\n\n  renderFab(): VNode {\n    return (\n      <div class={CSS.fabContainer} hidden={!this.hasFab}>\n        <slot name={SLOTS.fab} onSlotchange={this.handleFabSlotChange} />\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled, loading, panelKeyDownHandler, closed, closable } = this;\n\n    const panelNode = (\n      <article\n        aria-busy={toAriaBoolean(loading)}\n        class={CSS.container}\n        hidden={closed}\n        onKeyDown={panelKeyDownHandler}\n        tabIndex={closable ? 0 : -1}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setContainerRef}\n      >\n        {this.renderHeaderNode()}\n        {this.renderContent()}\n        {this.renderFooterNode()}\n      </article>\n    );\n\n    return (\n      <InteractiveContainer disabled={disabled}>\n        {loading ? <calcite-scrim loading={loading} /> : null}\n        {panelNode}\n      </InteractiveContainer>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-panel-footer-padding: Specifies the padding of the component's footer.\n * @prop --calcite-panel-header-border-block-end: Specifies the component header's block end border.\n */\n\n:host {\n  @extend %component-host;\n  @apply relative flex w-full h-full flex-auto overflow-hidden;\n\n  --calcite-min-header-height: calc(var(--calcite-icon-size) * 3);\n}\n\n@include disabled();\n\n@import \"../../assets/styles/header\";\n\n.container {\n  @apply bg-background m-0 flex w-full flex-auto flex-col items-stretch p-0;\n\n  transition:\n    max-block-size var(--calcite-animation-timing),\n    inline-size var(--calcite-animation-timing);\n}\n\n.container[hidden] {\n  @apply hidden;\n}\n\n.header {\n  @apply bg-foreground-1 flex flex-col\n    z-header;\n  border-block-end: var(--calcite-panel-header-border-block-end, 1px solid var(--calcite-color-border-3));\n}\n\n.header-container {\n  @apply flex flex-row w-full\n  items-stretch\n  justify-start;\n  flex: 0 0 auto;\n}\n\n.header-container--border-end {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n.action-bar-container {\n  @apply w-full;\n}\n\n.action-bar-container ::slotted(calcite-action-bar) {\n  @apply w-full;\n}\n\n.header-content {\n  @apply flex\n    flex-col\n    overflow-hidden\n    px-3\n    py-3.5;\n  margin-inline-end: auto;\n  .heading,\n  .description {\n    @apply block\n      break-words\n      p-0;\n  }\n  .heading {\n    @apply text-0h mx-0 mt-0 mb-1 font-medium;\n    &:only-child {\n      @apply mb-0;\n    }\n  }\n  .description {\n    @apply text-color-2 text-n1h;\n  }\n}\n\n.back-button {\n  @apply border-color-3\n  border-0\n  border-solid;\n  border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n}\n\n.header-actions {\n  @apply flex\n  flex-row\n  flex-nowrap\n  items-stretch;\n}\n\n.header-actions--end {\n  margin-inline-start: theme(\"margin.auto\");\n}\n\n.content-wrapper {\n  @apply flex\n  flex-auto\n  flex-col\n  flex-nowrap\n  items-stretch\n  bg-background\n  overflow-auto\n  h-full;\n}\n\n.footer {\n  @apply bg-foreground-1\n  flex\n  w-full\n  justify-evenly;\n\n  flex: 0 0 auto;\n  padding: var(--calcite-panel-footer-padding, theme(\"spacing.2\"));\n  border-block-start: 1px solid var(--calcite-color-border-3);\n}\n\n.fab-container {\n  @apply sticky\n  bottom-0\n  my-0\n  mx-auto\n  block\n  p-2\n  z-sticky;\n  inset-inline: 0;\n  inline-size: fit-content;\n}\n\n@include base-component();\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            scale={this.loaderScale}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.storeLoaderEl}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n"],"names":["CSS","ICONS","SLOTS","actionBar","headerActionsStart","headerActionsEnd","headerMenuActions","headerContent","fab","footer","footerActions","Panel","proxyCustomElement","HTMLElement","resizeObserver","createObserver","this","resizeHandler","panelScrollEl","scrollHeight","offsetHeight","tabIndex","setContainerRef","node","containerEl","panelKeyDownHandler","event","closable","key","defaultPrevented","close","preventDefault","closed","calcitePanelClose","emit","collapse","collapsed","calcitePanelToggle","panelScrollHandler","calcitePanelScroll","handleHeaderActionsStartSlotChange","hasStartActions","slotChangeHasAssignedElement","handleHeaderActionsEndSlotChange","hasEndActions","handleHeaderMenuActionsSlotChange","hasMenuItems","handleActionBarSlotChange","actionBars","slotChangeGetAssignedElements","filter","el","matches","forEach","layout","hasActionBar","length","handleHeaderContentSlotChange","hasHeaderContent","handleFooterSlotChange","hasFooterContent","handleFooterActionsSlotChange","hasFooterActions","handleFabSlotChange","hasFab","setPanelScrollEl","_this$resizeObserver","_this$resizeObserver2","disconnect","observe","onMessagesChange","connectedCallback","connectInteractive","connectLocalized","connectMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","_this$resizeObserver3","disconnectInteractive","disconnectLocalized","disconnectMessages","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","focusFirstTabbable","scrollContentTo","options","_this$panelScrollEl","scrollTo","renderHeaderContent","heading","headingLevel","description","headingNode","h","Heading","class","level","descriptionNode","renderActionBar","hidden","name","onSlotchange","renderHeaderSlottedContent","renderHeaderStartActions","renderHeaderActionsEnd","messages","collapseDirection","collapsible","expand","icons","reverse","collapseNode","toAriaBoolean","icon","onClick","text","title","closeNode","slotNode","showContainer","renderMenu","menuOpen","flipPlacements","label","open","overlayPositioning","placement","slot","SLOTS$1","trigger","renderHeaderNode","headerContentNode","showHeaderContent","renderFooterNode","showFooter","renderContent","onScroll","ref","renderFab","render","disabled","loading","panelNode","onKeyDown","InteractiveContainer","BREAKPOINTS","Scrim","handleResize","handleDefaultSlotChange","hasContent","slotChangeHasContent","storeLoaderEl","loaderEl","scale","loaderScale","getScale","size","_Math$min","Math","min","clientHeight","clientWidth"],"sourceRoot":""}