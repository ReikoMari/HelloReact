"use strict";(self.webpackChunkhelloworld=self.webpackChunkhelloworld||[]).push([[26060],{45652:(e,s,t)=>{t.d(s,{$1:()=>c,H2:()=>f,MT:()=>m,VP:()=>h,WF:()=>u,Wt:()=>a,XQ:()=>g,hK:()=>d,nS:()=>p,uh:()=>l,xY:()=>i});var o=t(50076);const n="upload-assets",r=()=>new Error;class a extends o.A{constructor(){super("".concat(n,":unsupported"),"Layer does not support asset uploads.",r())}}class l extends o.A{constructor(){super("".concat(n,":no-glb-support"),"Layer does not support glb.",r())}}class i extends o.A{constructor(){super("".concat(n,":no-supported-source"),"No supported external source found",r())}}class c extends o.A{constructor(){super("".concat(n,":not-base-64"),"Expected gltf data in base64 format after conversion.",r())}}class u extends o.A{constructor(){super("".concat(n,":unable-to-prepare-options"),"Unable to prepare uploadAsset request options.",r())}}class p extends o.A{constructor(e,s){super("".concat(n,":bad-response"),"Bad response. Uploaded ".concat(e," items and received ").concat(s," results."),r())}}class d extends o.A{constructor(e,s){var t,o;super("".concat(n,"-layer:upload-failed"),"Failed to upload mesh file ".concat(e,". Error code: ").concat(null!==(t=null===s||void 0===s?void 0:s.code)&&void 0!==t?t:"-1",". Error message: ").concat(null!==(o=null===s||void 0===s?void 0:s.messages)&&void 0!==o?o:"unknown"),r())}}class f extends o.A{constructor(e){super("".concat(n,"-layer:unsupported-format"),"The service allowed us to upload an asset of FormatID ".concat(e,", but it does not list it in its supported formats."),r())}}class m extends o.A{constructor(){super("".concat(n,":convert3D-failed"),"convert3D failed.")}}class h extends o.A{constructor(){super("invalid-input:no-model","No supported model found")}}class g extends o.A{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}},26060:(e,s,t)=>{t.d(s,{uploadAssets:()=>A});var o=t(3825),n=(t(81806),t(76460)),r=t(50346),a=t(91417),l=t(90534),i=t(49723),c=t(57045),u=t(45652),p=t(53195),d=t(13096),f=t(91364);const m=1e6,h=20*m,g=2e9,w=3;async function y(e,s,t){let{data:n,name:a,description:i}=e,c=null;try{const e=(0,l.fj)(s,"uploads"),p=(0,l.fj)(e,"info"),{data:y}=await(0,o.A)(p,{query:{f:"json"},responseType:"json"});(0,r.Te)(t);const v=(0,d.Wo)(s),A=y.maxUploadFileSize*m,T=v?g:A,P=v?Math.min(h,A):h;if(n.size>T)throw new Error("Data too large");const b=(0,l.fj)(e,"register"),{data:j}=await(0,o.A)(b,{query:{f:"json",itemName:(u=a,u.replaceAll("/","_").replaceAll("\\","_")),description:i},responseType:"json",method:"post"});if((0,r.Te)(t),!j.success)throw new Error("Registration failed");const{itemID:x}=j.item;c=(0,l.fj)(e,x);const F=(0,l.fj)(c,"uploadPart"),M=Math.ceil(n.size/P),E=new Array;for(let s=0;s<M;++s)E.push(n.slice(s*P,Math.min((s+1)*P,n.size)));const N=E.slice().reverse(),S=new Array,_=(0,f.XA)(M,null===t||void 0===t?void 0:t.onProgress,"uploadItem"),k=async()=>{for(;0!==N.length;){const e=E.length-N.length,s=N.pop(),n=new FormData,a=_.simulate(e,(0,f.V7)(s.size));try{n.append("f","json"),n.append("file",s),n.append("partId","".concat(e));const{data:a}=await(0,o.A)(F,{timeout:0,body:n,responseType:"json",method:"post"});if((0,r.Te)(t),!a.success)throw new Error("Part upload failed")}finally{a.remove()}}};for(let s=0;s<w&&0!==N.length;++s)S.push(k());await Promise.all(S);const I=(0,l.fj)(c,"commit"),{data:D}=await(0,o.A)(I,{query:{f:"json",parts:E.map(((e,s)=>s)).join(",")},responseType:"json",method:"post"});if((0,r.Te)(t),!D.success)throw new Error("Commit failed");return D.item}catch(p){if(null!=c){const e=(0,l.fj)(c,"delete");await(0,o.A)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw p}var u}var v=t(19463);async function A(e,s,t){var o;const n=e.length;if(!n)return null!==t&&void 0!==t&&null!==(o=t.onProgress)&&void 0!==o&&o.call(t,1),[];const a=(0,f.XA)(n,null===t||void 0===t?void 0:t.onProgress,"uploadAssets");return Promise.all(e.map(((e,o)=>async function(e,s,t){var o;let{layer:n,ongoingUploads:a}=s;const l=a.get(e);if(l)return l;if(!function(e){return!!e.infoFor3D&&!!e.url}(n))throw new u.Wt;if(function(e,s){const{parsedUrl:t}=s;return null!=t&&e.metadata.externalSources.some((e=>(0,c.eN)(e,t)))}(e,n))return null!==t&&void 0!==t&&null!==(o=t.onProgress)&&void 0!==o&&o.call(t,1),e;const d=async function(e,s,t){const{metadata:o}=e,{displaySource:n}=o,a=T(null===n||void 0===n?void 0:n.source,s),l=!!a,c=o.externalSources.length>0,d=l?async function(e,s,t){return{source:await b(e,s,t),original:!0}}(a,s,t):c?async function(e,s,t){const o=E(s),{externalSources:n}=e.metadata,r=function(e,s){for(const t of e){const e=T(t.source,s);if(e)return e}return null}(n,s);if(!r)throw new u.xY;const a=(0,f.XA)(p.y.uploadConvertibleSource,null===t||void 0===t?void 0:t.onProgress,"uploadConvertibleSource"),l=await b(r,s,{onProgress:a.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:l,original:!0}]);const i=r.reduce(((e,s)=>{let{asset:t}=s;return t instanceof File?e+t.size:e}),0),c=a.simulate("serviceAssetsToGlb",(0,f.sL)(i));try{return{source:await x(l,s,o)}}finally{c.remove()}}(e,s,t):async function(e,s,t){const o=(0,f.XA)(p.y.uploadLocalMesh,null===t||void 0===t?void 0:t.onProgress,"uploadLocalMesh"),n=async function(e,s,t){const o=E(s),n=await e.load(t),a=await n.toBinaryGLTF({ignoreLocalTransform:!0});(0,r.Te)(t);const l=await a.buffer();return(0,r.Te)(t),{blob:new Blob([l.data],{type:l.type}),assetName:"".concat((0,i.yS)(),".glb"),assetType:o}}(e,s,{...t,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await j([n],s,{...t,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,s,t),m=await d;return(0,r.Te)(t),e.addExternalSources([m]),e}(e,n,t);a.set(e,d);try{await d}finally{a.delete(e)}return e}(e,s,{...t,onProgress:a.makeOnProgress(o)}))))}function T(e,s){if(!e)return null;const{infoFor3D:{supportedFormats:t,editFormats:o}}=s,n=(0,c.WN)(e),r=new Array;let a=!1;for(let l=0;l<n.length;++l){const e=P(n[l],t);if(!e)return null;o.includes(e.assetType)&&(a=!0),r.push(e)}return a?r:null}function P(e,s){const t=(0,c.fH)(e,s);return t?{asset:e,assetType:t}:null}async function b(e,s,t){return j(e.map((e=>async function(e,s){const{asset:t,assetType:o}=e;if(t instanceof File)return{blob:t,assetName:t.name,assetType:o};const n=await t.toBlob(s);return(0,r.Te)(s),{blob:n,assetName:t.assetName,assetType:o}}(e,t))),s,t)}async function j(e,s,t){const a=(0,f.XA)(p.y.uploadAssetBlobs,null===t||void 0===t?void 0:t.onProgress,"uploadAssetBlobs"),i=await function(e,s,t){const o=(0,f.XA)(e.length,null===t||void 0===t?void 0:t.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,a)=>{const i=async function(e,s,t){const{blob:o,assetType:a,assetName:i}=e;let c=null;try{const e=await y({data:o,name:i},s.url,t);(0,r.Te)(t),c={assetType:a,assetUploadId:e.itemID}}catch(w){(0,r.QP)(w),n.A.getLogger("esri.layers.graphics.sources.support.uploadAssets").warnOnce("Service ".concat(s.url," does not support the REST Uploads API."))}if(!c){const e=await(0,l._0)(o);if((0,r.Te)(t),!e.isBase64)throw new u.$1;c={assetType:a,assetData:e.data}}if(!c)throw new u.WF;return{item:c,assetName:i}}(await e,s,{...t,onProgress:o.makeOnProgress(a)});return(0,r.Te)(t),i})))}(e,s,{...t,onProgress:a.makeOnProgress("prepareAssetItems")});(0,r.Te)(t);const d=i.map((e=>{let{item:s}=e;return s})),{uploadResults:m}=await async function(e,s,t){const n=(0,f.aG)(null===t||void 0===t?void 0:t.onProgress);try{const n=await(0,o.A)((0,l.fj)(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,r.Te)(t),n.data.uploadResults.length!==e.length)throw new u.nS(e.length,n.data.uploadResults.length);return n.data}finally{n.remove()}}(d,s,{...t,onProgress:a.makeOnProgress("uploadAssetItems")});return(0,r.Te)(t),e.map(((e,t)=>function(e,s,t){const{success:o}=s;if(!o){const{error:t}=s;throw new u.hK(e.assetName,t)}const{assetHash:n}=s,{assetName:r,item:{assetType:a}}=e,{infoFor3D:{supportedFormats:l}}=t,i=(0,v.Fm)(a,l);if(!i)throw new u.H2(a);return new c.Qp(r,i,[new c.Bq("".concat(t.parsedUrl.path,"/assets/").concat(n),n)])}(i[t],m[t],s)))}async function x(e,s,t){var o;const n=e.map((e=>{let{assetName:s,parts:t}=e;return{assetName:s,assetHash:t[0].partHash}})),r=null===(o=s.capabilities)||void 0===o?void 0:o.operations.supportsAsyncConvert3D,a={f:"json",assets:JSON.stringify(n),transportType:"esriTransportTypeUrl",targetFormat:t,async:r},i=(0,l.fj)(s.parsedUrl.path,"convert3D");let p;try{p=(await(r?M:F)(i,{query:a,responseType:"json",timeout:0})).data}catch(w){throw new u.MT}const{supportedFormats:d}=s.infoFor3D;return p.assets.map((e=>{const s=(0,v.R_)(e.contentType,d);if(!s)throw new u.H2(s);return new c.Qp(e.assetName,e.contentType,[new c.Bq(e.assetURL,e.assetHash)])}))}function F(e,s){return(0,o.A)(e,s)}async function M(e,s){const t=(await(0,o.A)(e,s)).data.statusUrl;for(;;){const e=(await(0,o.A)(t,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,o.A)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,r.Pl)(N)}}function E(e){var s;const{infoFor3D:t}=e,o=null!==(s=(0,v.R_)("model/gltf-binary",t.supportedFormats))&&void 0!==s?s:(0,v.E1)("glb",t.supportedFormats);if(!o)throw new u.uh;return o}const N=(0,a.l5)(1e3)},53195:(e,s,t)=>{t.d(s,{y:()=>o});const o={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}}},91364:(e,s,t)=>{t.d(s,{V7:()=>u,XA:()=>l,aG:()=>c,sL:()=>p});var o=t(54901),n=t(81806),r=t(87663),a=t(91417);function l(e){return new i(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class i{constructor(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},t=arguments.length>2?arguments[2]:void 0;if(this.onProgress=s,this.taskName=t,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let s=0;s<e;s++){const t=s,o=1/e;this._weights[t]=o,this._progressMap.set(t,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[o,n]of this._progressMap.entries())e+=n*this._weights[o];if(1===e&&(0,n.A)("enable-feature:esri-3dofl-upload-timings")){var s;const e=Math.round(performance.now()-(null!==(s=this._startTime)&&void 0!==s?s:0))/1e3;console.log("".concat(this.taskName," done in ").concat(e," sec"));for(const[s,o]of this._timingsMap){var t;const n=Math.round(o.end-o.start)/1e3,r=Math.round(n/e*100);console.log(null!==(t=this.taskName)&&void 0!==t?t:"Task",{stepKey:s,stepTime:n,relativeTime:r})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,n.A)("enable-feature:esri-3dofl-upload-timings")){var t;const o=performance.now();null!==(t=this._startTime)&&void 0!==t||(this._startTime=o);const n=(0,r.tE)(this._timingsMap,e,(()=>({start:o,end:0})));1===s&&(n.end=o)}this.emitProgress()}simulate(e,s){return c((s=>this.setProgress(e,s)),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:g;const t=performance.now();e(0);const n=setInterval((()=>{const o=performance.now()-t,n=1-Math.exp(-o/s);e(n)}),h);return(0,o.hA)((()=>{clearInterval(n),e(1)}))}function u(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:d;return(0,a.gr)((0,a.Kp)(e*m/s))}function p(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:f;return(0,a.gr)((0,a.Kp)(e*m/s))}const d=10,f=10,m=8e-6,h=(0,a.l5)(50),g=(0,a.l5)(1e3)}}]);
//# sourceMappingURL=26060.d5febef0.chunk.js.map