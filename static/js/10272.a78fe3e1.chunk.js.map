{"version":3,"file":"static/js/10272.a78fe3e1.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/map-components/dist/esm/arcgis-building-explorer.entry.js","../node_modules/@arcgis/map-components/dist/esm/component-utils-858627d8.js","../node_modules/@arcgis/map-components/dist/esm/disconnected-e221dd46.js"],"sourcesContent":["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.29/esri/copyright.txt for details.\n * v4.29.10\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-8642bf82.js';\nimport { j as newWidgetsBuildingExplorer, i as importCoreReactiveUtils } from './index-f6afcedb.js';\nimport { r as referenceElementHelper, c as checkForView, a as addHandles } from './component-utils-858627d8.js';\nimport { o as onDisconnectedHelper } from './disconnected-e221dd46.js';\n\nconst buildingExplorerCss = \"\";\n\nconst ArcgisBuildingExplorer = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisBuildingExplorerReady = createEvent(this, \"arcgisBuildingExplorerReady\", 7);\n        this._watchHandles = [];\n        this.referenceElement = undefined;\n        this.icon = undefined;\n        this.layers = undefined;\n        this.level = undefined;\n        this.phase = undefined;\n        this.state = \"disabled\";\n        this.visibleElementsLevels = true;\n        this.visibleElementsPhases = true;\n        this.visibleElementsDisciplines = true;\n        this.position = \"bottom-left\";\n        this.view = undefined;\n        this.widget = undefined;\n    }\n    referenceElementWatcher(value) {\n        void referenceElementHelper(this, value);\n    }\n    iconWatcher(value) {\n        if (this.widget) {\n            this.widget.icon = value;\n        }\n    }\n    layersWatcher(value) {\n        if (this.widget) {\n            this.widget.layers = value;\n        }\n    }\n    visibleElementsLevelsWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = { ...this.widget.visibleElements, levels: value };\n        }\n    }\n    visibleElementsPhasesWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = { ...this.widget.visibleElements, phases: value };\n        }\n    }\n    visibleElementsDisciplinesWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = { ...this.widget.visibleElements, disciplines: value };\n        }\n    }\n    positionWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.view.ui.move(this.childElem, value);\n        }\n    }\n    viewWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.view = value;\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    async componentDidLoad() {\n        const params = this._createParams();\n        const widget = await newWidgetsBuildingExplorer(params);\n        this.widget = widget;\n        await this._addWatchers();\n        this._addContainer();\n        this.arcgisBuildingExplorerReady.emit();\n        checkForView(this);\n    }\n    disconnectedCallback() {\n        onDisconnectedHelper(this);\n    }\n    render() {\n        return h(\"div\", { ref: (el) => (this.childElem = el) });\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    _addContainer() {\n        this.widget.container = this.childElem;\n    }\n    async _addWatchers() {\n        const { watch } = await importCoreReactiveUtils();\n        addHandles(this, [\n            watch(() => this.widget.viewModel.level, (value) => (this.level = value), {\n                initial: true\n            }),\n            watch(() => this.widget.viewModel.phase, (value) => (this.phase = value), {\n                initial: true\n            }),\n            watch(() => this.widget.viewModel.state, (value) => (this.state = value), {\n                initial: true\n            })\n        ]);\n    }\n    _createParams() {\n        const params = {};\n        params.visibleElements = {\n            levels: this.visibleElementsLevels,\n            phases: this.visibleElementsPhases,\n            disciplines: this.visibleElementsDisciplines\n        };\n        if (this.icon) {\n            params.icon = this.icon;\n        }\n        if (this.layers) {\n            params.layers = this.layers;\n        }\n        if (this.view) {\n            params.view = this.view;\n        }\n        return params;\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"referenceElement\": [\"referenceElementWatcher\"],\n        \"icon\": [\"iconWatcher\"],\n        \"layers\": [\"layersWatcher\"],\n        \"visibleElementsLevels\": [\"visibleElementsLevelsWatcher\"],\n        \"visibleElementsPhases\": [\"visibleElementsPhasesWatcher\"],\n        \"visibleElementsDisciplines\": [\"visibleElementsDisciplinesWatcher\"],\n        \"position\": [\"positionWatcher\"],\n        \"view\": [\"viewWatcher\"]\n    }; }\n};\nArcgisBuildingExplorer.style = buildingExplorerCss;\n\nexport { ArcgisBuildingExplorer as arcgis_building_explorer };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.29/esri/copyright.txt for details.\n * v4.29.10\n */\nfunction checkForExpand(element) {\n    const expandRef = element.el.closest(\"arcgis-expand\") || element.expandElem;\n    if (expandRef?.widget) {\n        element.view = expandRef.view;\n        expandRef.widget.content = element.childElem;\n        // TODO: Update to be expandIcon = widget.icon, not ready yet in 4.27next\n        if (!expandRef.expandIcon) {\n            expandRef.widget.expandIcon = element.widget.icon;\n            expandRef.widget.expandIconClass = element.widget.iconClass;\n        }\n        return true;\n    }\n    if (expandRef) {\n        const widgetHandler = () => {\n            expandRef.removeEventListener(\"arcgisExpandReady\", widgetHandler, false);\n            element.view = expandRef.view;\n            expandRef.widget.content = element.childElem;\n            if (!expandRef.expandIcon) {\n                expandRef.widget.expandIcon = element.widget.icon;\n                expandRef.widget.expandIconClass = element.widget.iconClass;\n            }\n        };\n        expandRef.addEventListener(\"arcgisExpandReady\", widgetHandler, false);\n        return true;\n    }\n    return false;\n}\n\n//--------------------------------------------------------------------------\n//\n//  Public Methods\n//\n//--------------------------------------------------------------------------\nfunction addHandles(element, handle) {\n    if (Array.isArray(handle)) {\n        element._watchHandles = [...element._watchHandles, ...handle];\n    }\n    else {\n        element._watchHandles.push(handle);\n    }\n}\nfunction checkForView(element) {\n    let isUsingRefernceElement = false;\n    if (!checkForExpand(element)) {\n        let viewRef = element.el.closest(\"arcgis-map\") ?? element.el.closest(\"arcgis-scene\");\n        if (!viewRef && typeof element.referenceElement === \"string\") {\n            viewRef = document.querySelector(element.referenceElement);\n            isUsingRefernceElement = true;\n        }\n        if (viewRef?.view) {\n            element.view = viewRef.view;\n            const el = element.childElem ?? element.el;\n            if (!isUsingRefernceElement) {\n                element.view.ui.add(el, element.position);\n            }\n        }\n        else if (viewRef) {\n            waitForViewHandler(viewRef, element, isUsingRefernceElement);\n        }\n    }\n    else {\n        const viewRef = element.el.closest(\"arcgis-map\") ?? element.el.closest(\"arcgis-scene\");\n        if (viewRef?.view) {\n            element.view = viewRef.view;\n        }\n        else if (viewRef) {\n            const handler = () => {\n                viewRef.removeEventListener(\"arcgisViewReadyChange\", handler, false);\n                element.view = viewRef.view;\n            };\n            viewRef.addEventListener(\"arcgisViewReadyChange\", handler, false);\n        }\n    }\n}\nfunction isNullOrEmptyString(value) {\n    return value === undefined || value === null || value === \"\";\n}\nfunction isValidInteger(value) {\n    return value != null && value % 1 === 0;\n}\nfunction isNotSameCamera(camera, camera2) {\n    return (camera2 === undefined ||\n        camera.position !== camera2.position ||\n        camera.heading !== camera2.heading ||\n        camera.tilt !== camera2.tilt);\n}\nfunction isNotSameEnvironment(environment, environment2) {\n    return (environment2 === undefined ||\n        environment2.atmosphereEnabled !== environment.atmosphereEnabled ||\n        environment2.lighting.date !== environment.lighting.date ||\n        environment2.lighting.directShadowsEnabled !==\n            environment.lighting.directShadowsEnabled ||\n        environment2.lighting.cameraTrackingEnabled !==\n            environment.lighting.cameraTrackingEnabled ||\n        environment2.lighting.date !== environment.lighting.date ||\n        environment2.lighting.displayUTCOffset !==\n            environment.lighting.displayUTCOffset);\n}\nfunction isNotSameViewpoint(viewpoint, viewpoint2) {\n    return (viewpoint2 === undefined ||\n        viewpoint.targetGeometry !== viewpoint2.targetGeometry ||\n        viewpoint.rotation !== viewpoint2.rotation ||\n        viewpoint.scale !== viewpoint2.scale);\n}\nasync function updateForView(viewStr) {\n    const viewRef = document.querySelector(viewStr);\n    return await new Promise((resolve) => {\n        if (viewRef?.view !== undefined) {\n            resolve(viewRef.view);\n        }\n        else if (viewRef) {\n            const handler = () => {\n                viewRef.removeEventListener(\"arcgisViewReadyChange\", handler, false);\n                resolve(viewRef.view);\n            };\n            viewRef.addEventListener(\"arcgisViewReadyChange\", handler, false);\n        }\n    });\n}\nasync function referenceElementHelper(element, refElement) {\n    if (typeof refElement === \"string\") {\n        element.view = await updateForView(refElement);\n    }\n    else if (element.widget) {\n        element.view = refElement.view;\n    }\n}\n//--------------------------------------------------------------------------\n//\n//  Private Methods\n//\n//--------------------------------------------------------------------------\nfunction waitForViewHandler(viewRef, element, isUsingRefernceElement) {\n    const handler = () => {\n        viewRef.removeEventListener(\"arcgisViewReadyChange\", handler, false);\n        element.view = viewRef.view;\n        if (!isUsingRefernceElement) {\n            if (element.childElem) {\n                element.view.ui.add(element.childElem, element.position);\n            }\n            else {\n                element.view.ui.add(element.el, element.position);\n            }\n        }\n    };\n    viewRef.addEventListener(\"arcgisViewReadyChange\", handler, false);\n}\n\nexport { addHandles as a, isNotSameViewpoint as b, checkForView as c, checkForExpand as d, isNotSameCamera as e, isNotSameEnvironment as f, isValidInteger as g, isNullOrEmptyString as i, referenceElementHelper as r };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.29/esri/copyright.txt for details.\n * v4.29.10\n */\nfunction onDisconnectedHelper(element) {\n    if (element.childElem) {\n        if (!element.el.isConnected) {\n            if (element.view) {\n                element.view.ui.remove(element.childElem);\n            }\n            else if (element.widget?.view) {\n                element.widget.view.ui.remove(element.childElem);\n            }\n            if (element._watchHandles) {\n                element._watchHandles.forEach((handle) => {\n                    handle.remove();\n                });\n            }\n            element._watchHandles = [];\n            element.widget?.destroy();\n        }\n    }\n    else {\n        setTimeout(() => {\n            if (!element.el.isConnected) {\n                if (element.view) {\n                    element.view.ui.remove(element.el);\n                }\n                else if (element.widget?.view) {\n                    element.widget.view.ui.remove(element.el);\n                }\n                if (element._watchHandles) {\n                    element._watchHandles.forEach((handle) => {\n                        handle.remove();\n                    });\n                }\n                element._watchHandles = [];\n                element.widget?.destroy();\n            }\n        }, 1000);\n    }\n}\n\nexport { onDisconnectedHelper as o };\n"],"names":["ArcgisBuildingExplorer","constructor","hostRef","registerInstance","this","arcgisBuildingExplorerReady","createEvent","_watchHandles","referenceElement","undefined","icon","layers","level","phase","state","visibleElementsLevels","visibleElementsPhases","visibleElementsDisciplines","position","view","widget","referenceElementWatcher","value","referenceElementHelper","iconWatcher","layersWatcher","visibleElementsLevelsWatcher","visibleElements","levels","visibleElementsPhasesWatcher","phases","visibleElementsDisciplinesWatcher","disciplines","positionWatcher","ui","move","childElem","viewWatcher","componentDidLoad","params","_createParams","newWidgetsBuildingExplorer","_addWatchers","_addContainer","emit","checkForView","disconnectedCallback","onDisconnectedHelper","render","h","ref","el","container","watch","importCoreReactiveUtils","addHandles","viewModel","initial","getElement","watchers","style","checkForExpand","element","expandRef","closest","expandElem","content","expandIcon","expandIconClass","iconClass","widgetHandler","removeEventListener","addEventListener","handle","Array","isArray","push","isUsingRefernceElement","_element$el$closest2","viewRef","handler","_element$el$closest","_viewRef","document","querySelector","_element$childElem","add","waitForViewHandler","isNullOrEmptyString","isValidInteger","isNotSameCamera","camera","camera2","heading","tilt","isNotSameEnvironment","environment","environment2","atmosphereEnabled","lighting","date","directShadowsEnabled","cameraTrackingEnabled","displayUTCOffset","isNotSameViewpoint","viewpoint","viewpoint2","targetGeometry","rotation","scale","async","refElement","viewStr","Promise","resolve","updateForView","_element$widget","_element$widget2","isConnected","remove","forEach","destroy","setTimeout","_element$widget3","_element$widget4"],"sourceRoot":""}