"use strict";(self.webpackChunkhelloworld=self.webpackChunkhelloworld||[]).push([[58842],{59395:(e,t,r)=>{r.d(t,{d:()=>s});var o,n,c=r(57528),a=r(72412),i=r(64839);function s(e){(0,a.i$)(e),e.vertex.code.add((0,i.H)(o||(o=(0,c.A)(["vec4 transformPositionWithDepth(mat4 proj, mat4 view, vec3 pos, vec2 nearFar, out float depth) {\nvec4 eye = view * vec4(pos, 1.0);\ndepth = calculateLinearDepth(nearFar,eye.z);\nreturn proj * eye;\n}"])))),e.vertex.code.add((0,i.H)(n||(n=(0,c.A)(["vec4 transformPosition(mat4 proj, mat4 view, vec3 pos) {\nreturn proj * (view * vec4(pos, 1.0));\n}"]))))}},54478:(e,t,r)=>{r.d(t,{c:()=>l});var o,n,c,a=r(57528),i=r(64839),s=r(66470);function l(e,t){t.hasVertexColors?(e.attributes.add(s.r.COLOR,"vec4"),e.varyings.add("vColor","vec4"),e.vertex.code.add((0,i.H)(o||(o=(0,a.A)(["void forwardVertexColor() { vColor = color; }"])))),e.vertex.code.add((0,i.H)(n||(n=(0,a.A)(["void forwardNormalizedVertexColor() { vColor = color * 0.003921568627451; }"]))))):e.vertex.code.add((0,i.H)(c||(c=(0,a.A)(["void forwardVertexColor() {}\nvoid forwardNormalizedVertexColor() {}"]))))}},25530:(e,t,r)=>{r.d(t,{G:()=>A,V:()=>S});var o,n,c,a,i,s,l=r(57528),f=r(43047),d=r(55855),v=r(69817),u=r(3799),p=r(58350),g=r(64839);function A(e,t){const r=e.vertex;t.hasVerticalOffset?(S(r),t.hasScreenSizePerspective&&(e.include(v.Y6),(0,v.OH)(r),(0,u.yu)(e.vertex,t)),r.code.add((0,g.H)(o||(o=(0,l.A)(["\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\n        ","\n        ","\n        // Screen sized offset in world space, used for example for line callouts\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\n        return worldNormal * worldOffset;\n      }\n\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\n      }\n    "])),t.spherical?(0,g.H)(n||(n=(0,l.A)(["vec3 worldNormal = normalize(worldPos + localOrigin);"]))):(0,g.H)(c||(c=(0,l.A)(["vec3 worldNormal = vec3(0.0, 0.0, 1.0);"]))),t.hasScreenSizePerspective?(0,g.H)(a||(a=(0,l.A)(["\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);"]))):(0,g.H)(i||(i=(0,l.A)(["\n            float verticalOffsetScreenHeight = verticalOffset.x;"])))))):r.code.add((0,g.H)(s||(s=(0,l.A)(["vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }"]))))}const h=(0,d.vt)();function S(e){e.uniforms.add(new p.E("verticalOffset",((e,t)=>{const{minWorldLength:r,maxWorldLength:o,screenLength:n}=e.verticalOffset,c=Math.tan(.5*t.camera.fovY)/(.5*t.camera.fullViewport[3]),a=t.camera.pixelRatio||1;return(0,f.s)(h,n*a,c,r,o)})))}},48020:(e,t,r)=>{r.d(t,{Qh:()=>f,U:()=>s,bO:()=>l});var o,n=r(57528),c=r(55855),a=r(64839),i=r(70367);const s=(0,c.fA)(1,1,0,1),l=(0,c.fA)(1,0,1,1);function f(e){e.fragment.uniforms.add(new i.N("depthTexture",((e,t)=>t.mainDepth))),e.fragment.constants.add("occludedHighlightFlag","vec4",s).add("unoccludedHighlightFlag","vec4",l),e.fragment.code.add((0,a.H)(o||(o=(0,n.A)(["void outputHighlight() {\nfloat sceneDepth = float(texelFetch(depthTexture, ivec2(gl_FragCoord.xy), 0).x);\nif (gl_FragCoord.z > sceneDepth + 5e-7) {\nfragColor = occludedHighlightFlag;\n} else {\nfragColor = unoccludedHighlightFlag;\n}\n}"]))))}},69817:(e,t,r)=>{r.d(t,{OH:()=>A,Y6:()=>p,pM:()=>g});var o,n,c,a,i,s,l=r(57528),f=r(20664),d=r(9392),v=r(5517),u=r(64839);function p(e){e.vertex.code.add((0,u.H)(o||(o=(0,l.A)(["float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {\nreturn absCosAngle * absCosAngle * absCosAngle;\n}"])))),e.vertex.code.add((0,u.H)(n||(n=(0,l.A)(["vec3 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec3 params) {\nreturn vec3(\nmin(params.x / (distanceToCamera - params.y), 1.0),\nscreenSizePerspectiveViewAngleDependentFactor(absCosAngle),\nparams.z\n);\n}"])))),e.vertex.code.add((0,u.H)(c||(c=(0,l.A)(["float applyScreenSizePerspectiveScaleFactorFloat(float size, vec3 factor) {\nreturn mix(size * clamp(factor.x, factor.z, 1.0), size, factor.y);\n}"])))),e.vertex.code.add((0,u.H)(a||(a=(0,l.A)(["float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec3 params) {\nreturn applyScreenSizePerspectiveScaleFactorFloat(\nsize,\nscreenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)\n);\n}"])))),e.vertex.code.add((0,u.H)(i||(i=(0,l.A)(["vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec3 factor) {\nreturn mix(size * clamp(factor.x, factor.z, 1.0), size, factor.y);\n}"])))),e.vertex.code.add((0,u.H)(s||(s=(0,l.A)(["vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec3 params) {\nreturn applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));\n}"]))))}function g(e){e.uniforms.add(new v.t("screenSizePerspective",(e=>h(e.screenSizePerspective))))}function A(e){e.uniforms.add(new v.t("screenSizePerspectiveAlignment",(e=>h(e.screenSizePerspectiveAlignment||e.screenSizePerspective))))}function h(e){return(0,f.s)(S,e.parameters.divisor,e.parameters.offset,e.minScaleFactor)}const S=(0,d.vt)()},82809:(e,t,r)=>{r.d(t,{Z:()=>c});var o=r(66470),n=r(52757);class c{constructor(e){this.vertexBufferLayout=e}elementCount(e){return e.attributes.get(o.r.POSITION).indices.length}write(e,t,r,o,c){(0,n.SA)(r,this.vertexBufferLayout,e,t,o,c)}}},52757:(e,t,r)=>{r.d(t,{Hk:()=>v,Pq:()=>d,SA:()=>A,Ut:()=>f,p1:()=>u,tH:()=>g,tb:()=>p,uO:()=>i,zC:()=>h});var o=r(34761),n=r(88105),c=r(86994),a=r(66470);function i(e,t,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const{data:n,indices:c}=e,a=t.typedBuffer,i=t.typedBufferStride,s=c.length;if(r*=i,1===o)for(let l=0;l<s;++l)a[r]=n[c[l]],r+=i;else for(let l=0;l<s;++l){const e=n[c[l]];for(let t=0;t<o;t++)a[r]=e,r+=i}}function s(e,t,r){const{data:o,indices:n}=e,c=t.typedBuffer,a=t.typedBufferStride,i=n.length;r*=a;for(let s=0;s<i;++s){const e=2*n[s];c[r]=o[e],c[r+1]=o[e+1],r+=a}}function l(e,t,r,o){const{data:n,indices:c}=e,a=t.typedBuffer,i=t.typedBufferStride,s=c.length;if(r*=i,null==o||1===o)for(let l=0;l<s;++l){const e=3*c[l];a[r]=n[e],a[r+1]=n[e+1],a[r+2]=n[e+2],r+=i}else for(let l=0;l<s;++l){const e=3*c[l];for(let t=0;t<o;++t)a[r]=n[e],a[r+1]=n[e+1],a[r+2]=n[e+2],r+=i}}function f(e,t,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const{data:n,indices:c}=e,a=t.typedBuffer,i=t.typedBufferStride,s=c.length;if(r*=i,1===o)for(let l=0;l<s;++l){const e=4*c[l];a[r]=n[e],a[r+1]=n[e+1],a[r+2]=n[e+2],a[r+3]=n[e+3],r+=i}else for(let l=0;l<s;++l){const e=4*c[l];for(let t=0;t<o;++t)a[r]=n[e],a[r+1]=n[e+1],a[r+2]=n[e+2],a[r+3]=n[e+3],r+=i}}function d(e,t,r){const o=e.typedBuffer,n=e.typedBufferStride;t*=n;for(let c=0;c<r;++c)o[t]=0,o[t+1]=0,o[t+2]=0,o[t+3]=0,t+=n}function v(e,t,r,n){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(!t)return void l(e,r,n,c);const{data:a,indices:i}=e,s=r.typedBuffer,f=r.typedBufferStride,d=i.length,v=t[0],u=t[1],p=t[2],g=t[4],A=t[5],h=t[6],S=t[8],m=t[9],z=t[10],w=t[12],O=t[13],y=t[14];n*=f;let P=0,C=0,x=0;const b=(0,o.tZ)(t)?e=>{P=a[e]+w,C=a[e+1]+O,x=a[e+2]+y}:e=>{const t=a[e],r=a[e+1],o=a[e+2];P=v*t+g*r+S*o+w,C=u*t+A*r+m*o+O,x=p*t+h*r+z*o+y};if(1===c)for(let o=0;o<d;++o)b(3*i[o]),s[n]=P,s[n+1]=C,s[n+2]=x,n+=f;else for(let o=0;o<d;++o){b(3*i[o]);for(let e=0;e<c;++e)s[n]=P,s[n+1]=C,s[n+2]=x,n+=f}}function u(e,t,r,n){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(!t)return void l(e,r,n,c);const{data:a,indices:i}=e,s=t,f=r.typedBuffer,d=r.typedBufferStride,v=i.length,u=s[0],p=s[1],g=s[2],A=s[4],h=s[5],S=s[6],m=s[8],z=s[9],w=s[10],O=!(0,o.ut)(s),y=1e-6,P=1-y;n*=d;let C=0,x=0,b=0;const F=(0,o.tZ)(s)?e=>{C=a[e],x=a[e+1],b=a[e+2]}:e=>{const t=a[e],r=a[e+1],o=a[e+2];C=u*t+A*r+m*o,x=p*t+h*r+z*o,b=g*t+S*r+w*o};if(1===c)if(O)for(let o=0;o<v;++o){F(3*i[o]);const e=C*C+x*x+b*b;if(e<P&&e>y){const t=1/Math.sqrt(e);f[n]=C*t,f[n+1]=x*t,f[n+2]=b*t}else f[n]=C,f[n+1]=x,f[n+2]=b;n+=d}else for(let o=0;o<v;++o)F(3*i[o]),f[n]=C,f[n+1]=x,f[n+2]=b,n+=d;else for(let o=0;o<v;++o){if(F(3*i[o]),O){const e=C*C+x*x+b*b;if(e<P&&e>y){const t=1/Math.sqrt(e);C*=t,x*=t,b*=t}}for(let e=0;e<c;++e)f[n]=C,f[n+1]=x,f[n+2]=b,n+=d}}function p(e,t,r,o){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;const{data:c,indices:a}=e,i=r.typedBuffer,s=r.typedBufferStride,l=a.length;if(o*=s,t!==c.length||4!==t)if(1!==n)if(4!==t)for(let f=0;f<l;++f){const e=3*a[f];for(let t=0;t<n;++t)i[o]=c[e],i[o+1]=c[e+1],i[o+2]=c[e+2],i[o+3]=255,o+=s}else for(let f=0;f<l;++f){const e=4*a[f];for(let t=0;t<n;++t)i[o]=c[e],i[o+1]=c[e+1],i[o+2]=c[e+2],i[o+3]=c[e+3],o+=s}else{if(4===t){for(let e=0;e<l;++e){const t=4*a[e];i[o]=c[t],i[o+1]=c[t+1],i[o+2]=c[t+2],i[o+3]=c[t+3],o+=s}return}for(let e=0;e<l;++e){const t=3*a[e];i[o]=c[t],i[o+1]=c[t+1],i[o+2]=c[t+2],i[o+3]=255,o+=s}}else{i[o]=c[0],i[o+1]=c[1],i[o+2]=c[2],i[o+3]=c[3];const e=new Uint32Array(r.typedBuffer.buffer,r.start),t=s/4,a=e[o/=4];o+=t;const f=l*n;for(let r=1;r<f;++r)e[o]=a,o+=t}}function g(e,t,r,o){let n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;const c=t.typedBuffer,a=t.typedBufferStride;if(o*=a,1===n)for(let i=0;i<r;++i)c[o]=e[0],c[o+1]=e[1],c[o+2]=e[2],c[o+3]=e[3],o+=a;else for(let i=0;i<r;++i)for(let t=0;t<n;++t)c[o]=e[0],c[o+1]=e[1],c[o+2]=e[2],c[o+3]=e[3],o+=a}function A(e,t,r,o,c,i){for(const l of t.fields.keys()){const t=e.attributes.get(l),f=null===t||void 0===t?void 0:t.indices;if(t&&f)h(l,t,r,o,c,i);else if(l===a.r.OBJECTANDLAYERIDCOLOR&&null!=e.objectAndLayerIdColor){var s;const t=null===(s=e.attributes.get(a.r.POSITION))||void 0===s?void 0:s.indices;if(t){const r=t.length,o=c.getField(l,n.XP);g(e.objectAndLayerIdColor,o,r,i)}}}}function h(e,t,r,i,l,d){switch(e){case a.r.POSITION:{(0,c.vA)(3===t.size);const o=l.getField(e,n.xs);(0,c.vA)(!!o,"No buffer view for ".concat(e)),o&&v(t,r,o,d);break}case a.r.NORMAL:{(0,c.vA)(3===t.size);const r=l.getField(e,n.xs);(0,c.vA)(!!r,"No buffer view for ".concat(e)),r&&u(t,i,r,d);break}case a.r.NORMALCOMPRESSED:{(0,c.vA)(2===t.size);const r=l.getField(e,n.mJ);(0,c.vA)(!!r,"No buffer view for ".concat(e)),r&&s(t,r,d);break}case a.r.UV0:{(0,c.vA)(2===t.size);const r=l.getField(e,n.gH);(0,c.vA)(!!r,"No buffer view for ".concat(e)),r&&s(t,r,d);break}case a.r.COLOR:case a.r.SYMBOLCOLOR:{const r=l.getField(e,n.XP);(0,c.vA)(!!r,"No buffer view for ".concat(e)),(0,c.vA)(3===t.size||4===t.size),!r||3!==t.size&&4!==t.size||p(t,t.size,r,d);break}case a.r.COLORFEATUREATTRIBUTE:{const r=l.getField(e,n.Y$);(0,c.vA)(!!r,"No buffer view for ".concat(e)),(0,c.vA)(1===t.size),r&&1===t.size&&function(e,t,r){const{data:o,indices:n}=e,c=t.typedBuffer,a=t.typedBufferStride,i=n.length,s=o[0];r*=a;for(let l=0;l<i;++l)c[r]=s,r+=a}(t,r,d);break}case a.r.TANGENT:{(0,c.vA)(4===t.size);const r=l.getField(e,n.Eq);(0,c.vA)(!!r,"No buffer view for ".concat(e)),r&&function(e,t,r,n){let c=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(!t)return void f(e,r,n,c);const{data:a,indices:i}=e,s=t,l=r.typedBuffer,d=r.typedBufferStride,v=i.length,u=s[0],p=s[1],g=s[2],A=s[4],h=s[5],S=s[6],m=s[8],z=s[9],w=s[10],O=!(0,o.ut)(s),y=1e-6,P=1-y;if(n*=d,1===c)for(let o=0;o<v;++o){const e=4*i[o],t=a[e],r=a[e+1],c=a[e+2],s=a[e+3];let f=u*t+A*r+m*c,v=p*t+h*r+z*c,C=g*t+S*r+w*c;if(O){const e=f*f+v*v+C*C;if(e<P&&e>y){const t=1/Math.sqrt(e);f*=t,v*=t,C*=t}}l[n]=f,l[n+1]=v,l[n+2]=C,l[n+3]=s,n+=d}else for(let o=0;o<v;++o){const e=4*i[o],t=a[e],r=a[e+1],s=a[e+2],f=a[e+3];let v=u*t+A*r+m*s,C=p*t+h*r+z*s,x=g*t+S*r+w*s;if(O){const e=v*v+C*C+x*x;if(e<P&&e>y){const t=1/Math.sqrt(e);v*=t,C*=t,x*=t}}for(let o=0;o<c;++o)l[n]=v,l[n+1]=C,l[n+2]=x,l[n+3]=f,n+=d}}(t,i,r,d);break}case a.r.PROFILERIGHT:case a.r.PROFILEUP:case a.r.PROFILEVERTEXANDNORMAL:case a.r.FEATUREVALUE:{(0,c.vA)(4===t.size);const r=l.getField(e,n.Eq);(0,c.vA)(!!r,"No buffer view for ".concat(e)),r&&f(t,r,d)}}}}}]);
//# sourceMappingURL=58842.94684ea1.chunk.js.map