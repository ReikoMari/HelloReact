{"version":3,"file":"static/js/88012.f0e03cbd.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-swatch/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-swatch/color-picker-swatch.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker-swatch/color-picker-swatch.scss?tag=calcite-color-picker-swatch&encapsulation=shadow","../node_modules/@esri/calcite-components/node_modules/color-name/index.js","../node_modules/@esri/calcite-components/node_modules/simple-swizzle/index.js","../node_modules/@esri/calcite-components/node_modules/simple-swizzle/node_modules/is-arrayish/index.js","../node_modules/@esri/calcite-components/node_modules/color-string/index.js","../node_modules/@esri/calcite-components/node_modules/color/node_modules/color-name/index.js","../node_modules/@esri/calcite-components/node_modules/color/node_modules/color-convert/conversions.js","../node_modules/@esri/calcite-components/node_modules/color/node_modules/color-convert/route.js","../node_modules/@esri/calcite-components/node_modules/color/node_modules/color-convert/index.js","../node_modules/@esri/calcite-components/node_modules/color/index.js","../node_modules/@esri/calcite-components/dist/components/src/components/color-picker/utils.ts"],"sourcesContent":["export const CSS = {\n  swatch: \"swatch\",\n  noColorSwatch: \"swatch--no-color\",\n  checker: \"checker\",\n};\n\nexport const COLORS = {\n  borderLight: \"rgba(0, 0, 0, 0.3)\",\n  borderDark: \"rgba(255, 255, 255, 0.15)\",\n};\n\nconst checkerSquareSize = 4;\n\nexport const CHECKER_DIMENSIONS = {\n  squareSize: checkerSquareSize,\n  size: checkerSquareSize * 2,\n};\n","import { Component, Element, Fragment, h, Prop, VNode, Watch } from \"@stencil/core\";\nimport Color from \"color\";\nimport { getModeName } from \"../../utils/dom\";\nimport { Scale } from \"../interfaces\";\nimport { hexify } from \"../color-picker/utils\";\nimport { CHECKER_DIMENSIONS, COLORS, CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-color-picker-swatch\",\n  styleUrl: \"color-picker-swatch.scss\",\n  shadow: true,\n})\nexport class ColorPickerSwatch {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is active.\n   */\n  @Prop({\n    reflect: true,\n  })\n  active = false;\n\n  /**\n   * The color value.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/color_value\n   */\n  @Prop()\n  color: string | null;\n\n  @Watch(\"color\")\n  handleColorChange(color: string | null): void {\n    this.internalColor = color ? Color(color) : null;\n  }\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteColorPickerSwatchElement;\n\n  private internalColor: Color;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.handleColorChange(this.color);\n  }\n\n  render(): VNode {\n    const isEmpty = !this.internalColor;\n    const classes = {\n      [CSS.swatch]: true,\n      [CSS.noColorSwatch]: isEmpty,\n    };\n\n    return (\n      <svg class={classes} xmlns=\"http://www.w3.org/2000/svg\">\n        {this.renderSwatch()}\n      </svg>\n    );\n  }\n\n  renderSwatch(): VNode {\n    const { active, el, internalColor } = this;\n    const borderRadius = active ? \"100%\" : \"0\";\n    const theme = getModeName(el);\n    const borderColor = theme === \"light\" ? COLORS.borderLight : COLORS.borderDark;\n    const commonSwatchProps = {\n      height: \"100%\",\n      rx: borderRadius,\n      stroke: borderColor,\n\n      // stroke-width and clip-path are needed to hide overflowing portion of stroke\n      // see https://stackoverflow.com/a/7273346/194216\n\n      // using attribute to work around Stencil using the prop name vs the attribute when rendering\n      [\"stroke-width\"]: \"2\",\n      width: \"100%\",\n    };\n\n    const isEmpty = !internalColor;\n\n    if (isEmpty) {\n      return (\n        <Fragment>\n          <clipPath id=\"shape\">\n            <rect height=\"100%\" rx={borderRadius} width=\"100%\" />\n          </clipPath>\n          <rect\n            clip-path={`inset(0 round ${borderRadius})`}\n            rx={borderRadius}\n            {...commonSwatchProps}\n          />\n          <line clip-path=\"url(#shape)\" stroke-width=\"3\" x1=\"100%\" x2=\"0\" y1=\"0\" y2=\"100%\" />\n        </Fragment>\n      );\n    }\n\n    const alpha = internalColor.alpha();\n    const hex = hexify(internalColor);\n    const hexa = hexify(internalColor, alpha < 1);\n\n    return (\n      <Fragment>\n        <title>{hexa}</title>\n        <defs>\n          <pattern\n            height={CHECKER_DIMENSIONS.size}\n            id=\"checker\"\n            patternUnits=\"userSpaceOnUse\"\n            width={CHECKER_DIMENSIONS.size}\n            x=\"0\"\n            y=\"0\"\n          >\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x=\"0\"\n              y=\"0\"\n            />\n            <rect\n              class={CSS.checker}\n              height={CHECKER_DIMENSIONS.squareSize}\n              width={CHECKER_DIMENSIONS.squareSize}\n              x={CHECKER_DIMENSIONS.squareSize}\n              y={CHECKER_DIMENSIONS.squareSize}\n            />\n          </pattern>\n        </defs>\n        <rect fill=\"url(#checker)\" height=\"100%\" rx={borderRadius} width=\"100%\" />\n        <rect\n          fill={hex}\n          style={{\n            \"clip-path\":\n              alpha < 1 ? \"polygon(100% 0, 0 0, 0 100%)\" : `inset(0 round ${borderRadius})`,\n          }}\n          {...commonSwatchProps}\n        />\n        {alpha < 1 ? (\n          <rect\n            fill={hexa}\n            key=\"opacity-fill\"\n            style={{ \"clip-path\": \"polygon(100% 0, 100% 100%, 0 100%)\" }}\n            {...commonSwatchProps}\n          />\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n","$size-s: 20px;\n$size-m: 24px;\n$size-l: 28px;\n\n:host {\n  @apply relative inline-flex;\n}\n\n:host([scale=\"s\"]) {\n  @apply h-5 w-5;\n}\n\n:host([scale=\"m\"]) {\n  @apply h-6 w-6;\n}\n\n:host([scale=\"l\"]) {\n  @apply h-8 w-8;\n}\n\n.swatch {\n  @apply overflow-hidden;\n  block-size: inherit;\n  inline-size: inherit;\n\n  rect {\n    @apply transition-all duration-150 ease-in-out;\n  }\n}\n\n.swatch--no-color {\n  rect {\n    fill: var(--calcite-color-foreground-1);\n  }\n\n  line {\n    stroke: var(--calcite-color-status-danger);\n  }\n}\n\n.checker {\n  fill: #cacaca;\n}\n\n@include base-component();\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n","import { ColorValue, HSLA, HSVA, RGB, RGBA } from \"./interfaces\";\nimport Color from \"color\";\n\nexport const hexChar = /^[0-9A-F]$/i;\nconst shorthandHex = /^#[0-9A-F]{3}$/i;\nconst longhandHex = /^#[0-9A-F]{6}$/i;\nconst shorthandHexWithAlpha = /^#[0-9A-F]{4}$/i;\nconst longhandHexWithAlpha = /^#[0-9A-F]{8}$/i;\n\nexport const alphaToOpacity = (alpha: number): number => Number((alpha * 100).toFixed());\n\nexport const opacityToAlpha = (opacity: number): number => Number((opacity / 100).toFixed(2));\n\nexport function isValidHex(hex: string, hasAlpha = false): boolean {\n  return isShorthandHex(hex, hasAlpha) || isLonghandHex(hex, hasAlpha);\n}\n\nexport function canConvertToHexa(hex: string): boolean {\n  const validHex = isValidHex(hex, false);\n  const validHexa = isValidHex(hex, true);\n  return !validHexa && validHex;\n}\n\nfunction evaluateHex(hex: string, length: number, pattern: RegExp): boolean {\n  if (!hex) {\n    return false;\n  }\n\n  return hex.length === length && pattern.test(hex);\n}\n\nexport function isShorthandHex(hex: string, hasAlpha = false): boolean {\n  const hexLength = hasAlpha ? 5 : 4;\n  const hexPattern = hasAlpha ? shorthandHexWithAlpha : shorthandHex;\n\n  return evaluateHex(hex, hexLength, hexPattern);\n}\n\nexport function isLonghandHex(hex: string, hasAlpha = false): boolean {\n  const hexLength = hasAlpha ? 9 : 7;\n  const hexPattern = hasAlpha ? longhandHexWithAlpha : longhandHex;\n\n  return evaluateHex(hex, hexLength, hexPattern);\n}\n\nexport function normalizeHex(hex: string, hasAlpha = false, convertFromHexToHexa = false): string {\n  hex = hex.toLowerCase();\n\n  if (!hex.startsWith(\"#\")) {\n    hex = `#${hex}`;\n  }\n\n  if (isShorthandHex(hex, hasAlpha)) {\n    return rgbToHex(hexToRGB(hex, hasAlpha));\n  }\n\n  if (hasAlpha && convertFromHexToHexa && isValidHex(hex, false /* we only care about RGB hex for conversion */)) {\n    const isShorthand = isShorthandHex(hex, false);\n    return rgbToHex(hexToRGB(`${hex}${isShorthand ? \"f\" : \"ff\"}`, true));\n  }\n\n  return hex;\n}\n\nexport function hexify(color: Color, hasAlpha = false): string {\n  return hasAlpha ? color.hexa() : color.hex();\n}\n\nexport function rgbToHex(color: RGB | RGBA): string {\n  const { r, g, b } = color;\n\n  const rChars = numToHex(r);\n  const gChars = numToHex(g);\n  const bChars = numToHex(b);\n  const alphaChars = \"a\" in color ? numToHex(color.a * 255) : \"\";\n\n  return `#${rChars}${gChars}${bChars}${alphaChars}`.toLowerCase();\n}\n\nfunction numToHex(num: number): string {\n  return num.toString(16).padStart(2, \"0\");\n}\n\nexport function normalizeAlpha<T extends RGBA | HSVA | HSLA>(colorObject: ReturnType<Color[\"object\"]>): T {\n  const normalized = { ...colorObject, a: colorObject.alpha ?? 1 /* Color() will omit alpha if 1 */ };\n  delete normalized.alpha;\n\n  return normalized as T;\n}\n\nexport function normalizeColor(alphaColorObject: RGBA | HSVA | HSLA): ReturnType<Color[\"object\"]> {\n  const normalized = { ...alphaColorObject, alpha: alphaColorObject.a ?? 1 };\n  delete normalized.a;\n\n  return normalized;\n}\n\nexport function hexToRGB(hex: string, hasAlpha = false): RGB | RGBA {\n  if (!isValidHex(hex, hasAlpha)) {\n    return null;\n  }\n\n  hex = hex.replace(\"#\", \"\");\n\n  let r: number;\n  let g: number;\n  let b: number;\n  let a: number;\n  const isShorthand = hex.length === 3 || hex.length === 4;\n\n  if (isShorthand) {\n    const [first, second, third, fourth] = hex.split(\"\");\n\n    r = parseInt(`${first}${first}`, 16);\n    g = parseInt(`${second}${second}`, 16);\n    b = parseInt(`${third}${third}`, 16);\n    a = parseInt(`${fourth}${fourth}`, 16) / 255;\n  } else {\n    r = parseInt(hex.slice(0, 2), 16);\n    g = parseInt(hex.slice(2, 4), 16);\n    b = parseInt(hex.slice(4, 6), 16);\n    a = parseInt(hex.slice(6, 8), 16) / 255;\n  }\n\n  return isNaN(a) ? { r, g, b } : { r, g, b, a };\n}\n\n// these utils allow users to pass enum values as strings without having to access the enum\n// based on the approach suggested by https://github.com/microsoft/TypeScript/issues/17690#issuecomment-321365759,\nconst enumify = <T extends { [index: string]: U }, U extends string>(x: T) => x;\ntype Enumify<T> = T[keyof T];\n\nexport const CSSColorMode = enumify({\n  HEX: \"hex\",\n  HEXA: \"hexa\",\n  RGB_CSS: \"rgb-css\",\n  RGBA_CSS: \"rgba-css\",\n  HSL_CSS: \"hsl-css\",\n  HSLA_CSS: \"hsla-css\",\n});\ntype CSSColorMode = Enumify<typeof CSSColorMode>;\n\nexport const ObjectColorMode = enumify({\n  RGB: \"rgb\",\n  RGBA: \"rgba\",\n  HSL: \"hsl\",\n  HSLA: \"hsla\",\n  HSV: \"hsv\",\n  HSVA: \"hsva\",\n});\ntype ObjectColorMode = Enumify<typeof ObjectColorMode>;\n\nexport type SupportedMode = CSSColorMode | ObjectColorMode;\n\nexport type Format = \"auto\" | SupportedMode;\n\nexport function parseMode(colorValue: ColorValue): SupportedMode | null {\n  if (typeof colorValue === \"string\") {\n    if (colorValue.startsWith(\"#\")) {\n      const { length } = colorValue;\n\n      if (length === 4 || length === 7) {\n        return CSSColorMode.HEX;\n      }\n      if (length === 5 || length === 9) {\n        return CSSColorMode.HEXA;\n      }\n    }\n\n    if (colorValue.startsWith(\"rgba(\")) {\n      return CSSColorMode.RGBA_CSS;\n    }\n\n    if (colorValue.startsWith(\"rgb(\")) {\n      return CSSColorMode.RGB_CSS;\n    }\n\n    if (colorValue.startsWith(\"hsl(\")) {\n      return CSSColorMode.HSL_CSS;\n    }\n\n    if (colorValue.startsWith(\"hsla(\")) {\n      return CSSColorMode.HSLA_CSS;\n    }\n  }\n\n  if (typeof colorValue === \"object\") {\n    if (hasChannels(colorValue, \"r\", \"g\", \"b\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.RGBA : ObjectColorMode.RGB;\n    }\n\n    if (hasChannels(colorValue, \"h\", \"s\", \"l\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSLA : ObjectColorMode.HSL;\n    }\n\n    if (hasChannels(colorValue, \"h\", \"s\", \"v\")) {\n      return hasChannels(colorValue, \"a\") ? ObjectColorMode.HSVA : ObjectColorMode.HSV;\n    }\n  }\n\n  return null;\n}\n\nfunction hasChannels(colorObject: Exclude<ColorValue, string> | null, ...channels: string[]): boolean {\n  return channels.every((channel) => channel && colorObject && `${channel}` in colorObject);\n}\n\nexport function colorEqual(value1: Color | null, value2: Color | null): boolean {\n  return value1?.rgb().array().toString() === value2?.rgb().array().toString();\n}\n\nexport function alphaCompatible(mode: SupportedMode): boolean {\n  return (\n    mode === CSSColorMode.HEXA ||\n    mode === CSSColorMode.RGBA_CSS ||\n    mode === CSSColorMode.HSLA_CSS ||\n    mode === ObjectColorMode.RGBA ||\n    mode === ObjectColorMode.HSLA ||\n    mode === ObjectColorMode.HSVA\n  );\n}\n\nexport function toAlphaMode(mode: SupportedMode): SupportedMode {\n  const alphaMode =\n    mode === CSSColorMode.HEX\n      ? CSSColorMode.HEXA\n      : mode === CSSColorMode.RGB_CSS\n        ? CSSColorMode.RGBA_CSS\n        : mode === CSSColorMode.HSL_CSS\n          ? CSSColorMode.HSLA_CSS\n          : mode === ObjectColorMode.RGB\n            ? ObjectColorMode.RGBA\n            : mode === ObjectColorMode.HSL\n              ? ObjectColorMode.HSLA\n              : mode === ObjectColorMode.HSV\n                ? ObjectColorMode.HSVA\n                : mode;\n\n  return alphaMode;\n}\n\nexport function toNonAlphaMode(mode: SupportedMode): SupportedMode {\n  const nonAlphaMode =\n    mode === CSSColorMode.HEXA\n      ? CSSColorMode.HEX\n      : mode === CSSColorMode.RGBA_CSS\n        ? CSSColorMode.RGB_CSS\n        : mode === CSSColorMode.HSLA_CSS\n          ? CSSColorMode.HSL_CSS\n          : mode === ObjectColorMode.RGBA\n            ? ObjectColorMode.RGB\n            : mode === ObjectColorMode.HSLA\n              ? ObjectColorMode.HSL\n              : mode === ObjectColorMode.HSVA\n                ? ObjectColorMode.HSV\n                : mode;\n\n  return nonAlphaMode;\n}\n"],"names":["CSS","COLORS","CHECKER_DIMENSIONS","squareSize","size","checkerSquareSize","ColorPickerSwatch","proxyCustomElement","HTMLElement","handleColorChange","color$1","this","internalColor","color","componentWillLoad","render","isEmpty","classes","h","class","xmlns","renderSwatch","active","el","borderRadius","commonSwatchProps","height","rx","stroke","getModeName","width","Fragment","id","concat","x1","x2","y1","y2","alpha","hex","hexify","hexa","patternUnits","x","y","fill","style","key","colorName$1","Array","prototype","slice","swizzle","module","exports","args","obj","results","i","len","length","arg","isArray","splice","Function","Object","getOwnPropertyDescriptor","constructor","name","call","push","wrap","fn","arguments","hasOwnProperty","reverseNames","create","cs","to","get","clamp","num","min","max","Math","hexDouble","str","round","toString","toUpperCase","string","val","model","substring","toLowerCase","hsl","hwb","rgb","value","match","hexAlpha","i2","parseInt","parseFloat","isNaN","rgba","simpleSwizzle","percent","r","g","b","hsla","hwba","a","keyword","colorName","reverseKeywords","keys","convert$1","channels","labels","hsv","cmyk","xyz","lab","lch","ansi16","ansi256","hcg","apple","gray","conversions","Error","defineProperty","deriveBFS","fromModel","graph","models","distance","parent","buildGraph","queue","current","pop","adjacents","adjacent","node","unshift","link","from","wrapConversion","toModel","path","cur","conversion","delta","s","l","rdif","gdif","bdif","v","diff","diffc","c","w","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","z","t2","t3","t1","smin","lmin","hi","floor","f","p","q","t","vmin","sl","wh","bl","ratio","n","m","z2","atan2","PI","sqrt","hr","cos","sin","saturation","undefined","ansi","mult","rem","colorString","split","map","char","join","integer","chroma","grayscale","hue","pure","mg","convert","forEach","routes","route","wrappedFn","_len2","_key2","arg0","result","wrapRounded","raw","_len","_key","wrapRaw","colorConvert","skippedModels","hashedModelKeys","sort","limiters","Color","object","valpha","newArray","zeroArray","indexOf","hashedKeys","JSON","stringify","limit","freeze","toJSON","places","self","percentString","array","unitArray","unitObject","roundToPlace","red","getset","maxfn","green","blue","saturationl","lightness","saturationv","white","wblack","cyan","magenta","yellow","black","rgbArray","alphaHex","rgbNumber","luminosity","lum","element","entries","chan","contrast","color2","lum1","lum2","level","contrastRatio","isDark","isLight","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","includes","_len3","_key3","_len4","_key4","number","Number","toFixed","roundTo","channel","modifier","hexChar","shorthandHex","longhandHex","shorthandHexWithAlpha","longhandHexWithAlpha","alphaToOpacity","opacityToAlpha","opacity","isValidHex","hasAlpha","isShorthandHex","isLonghandHex","evaluateHex","pattern","test","normalizeHex","convertFromHexToHexa","startsWith","rgbToHex","hexToRGB","isShorthand","rChars","numToHex","gChars","bChars","alphaChars","padStart","normalizeAlpha","colorObject","_colorObject$alpha","normalized","normalizeColor","alphaColorObject","_alphaColorObject$a","replace","first","second","third","fourth","CSSColorMode","HEX","HEXA","RGB_CSS","RGBA_CSS","HSL_CSS","HSLA_CSS","ObjectColorMode","RGB","RGBA","HSL","HSLA","HSV","HSVA","parseMode","colorValue","hasChannels","every","colorEqual","value1","value2","alphaCompatible","mode","toAlphaMode","toNonAlphaMode"],"sourceRoot":""}