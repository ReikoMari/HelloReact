{"version":3,"file":"static/js/21415.b858b23b.chunk.js","mappings":";gOAKaA,EAA8B,IAGrCC,EAAcC,GAAkBA,EAAIC,QAAO,CAACC,EAAGC,IAAMD,EAAIC,GAAG,GAAKH,EAAII,OAE9DC,EACXC,IAEA,MAAMC,EAAoBD,EAAQE,QAAQC,GAAWA,EAAOC,OAASC,EAAAA,EAAmBC,cAClFC,EAA6B,OAAjBN,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBH,OACrC,MAAO,CACLU,YAAaD,EAAYd,EAAWQ,EAAkBQ,KAAKN,GAAWA,EAAOO,aAAe,KAAM,EAClGC,aAAcJ,EAAYd,EAAWQ,EAAkBQ,KAAKN,GAAWA,EAAOS,cAAgB,KAAM,EACrG,EAuBUC,EAAmBC,IAgB/B,IAhBgC,OAC/BC,EAAM,YACNC,EAAW,YACXR,EAAW,MACXS,EAAK,aACLN,EAAY,OACZO,EAAM,WACNC,GASDL,EACC,OAAOM,KAAKC,IAAIL,EArCQM,KAczB,IAd0B,MACzBL,EAAK,YACLT,EAAW,OACXO,EAAM,OACNG,EAAM,aACNP,EAAY,WACZQ,GAQDG,EACC,MAAMC,EAA4B,eAAXR,EAA0BE,EAAQC,EACnDM,EAAuB,eAAXT,EAA0BP,EAAcG,EAC1D,OAAOS,KAAKK,OAAOF,EAhCC,EAgCgBJ,GAA8BK,EAAU,EAoB9CE,CAAkB,CAAET,QAAOT,cAAaO,SAAQG,SAAQP,eAAcQ,eAAe,EAAE,EAG1GQ,EAAgBC,GACpBC,MAAMC,KAAKF,EAAGG,iBAAiB,mBAAmB7B,QAAQC,IAC/DA,EAAO6B,QAAQ,wBAAyB7B,EAAOC,OAAS6B,EAAAA,EAAkBC,UAIjEC,EAAkBC,IAQ9B,IAR+B,aAC9BC,EAAY,SACZC,EAAQ,cACRC,GAKDH,EACKI,EAAkBD,EACtBF,EAAaI,UAAUC,SAASC,IAC9B,IAAIC,EAA0B,EAE9B,MAAMC,EAAelB,EAAagB,GAAOF,UAEzCI,EAAaH,SAASI,IAChBA,EAAY1C,OAASC,EAAAA,EAAmBC,cAC1CwC,EAAYC,gBAAgB,QAC5BD,EAAYE,YAAcV,MAI1BE,EAAkB,GACpBK,EAAaI,MAAMH,IACQD,EAAa3C,QAAQC,IAAYA,EAAOC,OAE5CN,OAAS,GAAK+C,EAAa/C,OAAS,IAAMgD,EAAYd,QAAQ,yBACjFc,EAAYE,aAAc,EAC1BF,EAAYI,aAAa,OAAQ7C,EAAAA,EAAmBC,aACpDsC,IAEIA,EAA0B,GAC5BJ,KAIGA,EAAkB,MAI7BW,EAAAA,EAAAA,IAAYR,EAAM,GAClB,EC1FES,EACU,gBADVA,EAEW,0BAODC,EAAqBC,GAMpC,IANqC,GACpC1B,EAAE,SACFU,GAIDgB,EACC3B,EAAaC,GACV1B,QAAQ0B,GAAOA,EAAGxB,OAASC,EAAAA,EAAmBC,cAC9CoC,SAASvC,GAAYA,EAAO6C,YAAcV,IAC7CV,EAAGG,iBAAiB,6CAA6CW,SAC9Dd,GAAsEA,EAAGU,SAAWA,GAEzF,CAEA,MAsBaiB,EAAuDC,IAUnE,IAVoE,SACnElB,EAAQ,WACRmB,EAAU,aACVC,EAAY,OACZC,EAAM,GACN/B,EAAE,SACFgC,EAAQ,QACRC,EAAO,IACPC,EAAG,MACHC,GACDP,EACC,MAAMQ,EAA4B,SAAtBC,EAAAA,EAAAA,GAAcrC,GAEpBsC,EAAO5B,EAAWoB,EAAeD,EACjCU,EAAQ,CAACf,EAAoBA,GAE/BY,GACFG,EAAM1B,UAGR,MAAM2B,EAA2C,QA7DnD,SAA4BR,EAAoBhC,GAAe,IAAAyC,EAC7D,OAAOT,IAA6C,QAArCS,EAAIzC,EAAGI,QAAQ,8BAAsB,IAAAqC,OAAA,EAAjCA,EAAmCT,WAAY,OACpE,CA2DcU,CAAmBV,EAAUhC,GACnC2C,EAAaH,EAAMD,EAAM,GAAKA,EAAM,GACpCK,EAAeJ,EAAMD,EAAM,GAAKA,EAAM,GAEtCM,GACJC,EAAAA,EAAAA,GAAA,kBACEC,KAAMrC,EAAWiC,EAAaC,EAC9BI,QAASjB,EACTI,MAAOA,EACPG,KAAMA,EACNlB,YAAaV,EACbuC,MAAQvC,GAAauB,EAAiB,KAAPK,EAE/BJ,IAAMgB,GAvDgBC,KAU3B,IAV4B,QAC3BlB,EAAO,iBACPiB,EAAgB,SAChBxC,EAAQ,IACRwB,GAMDiB,EASC,OARIlB,IACFA,EAAQiB,kBAAoBxC,GAAYwC,EAAmBA,EAAmB,MAG5EhB,GACFA,EAAIgB,GAGCA,CAAgB,EAqCjBE,CAAoB,CAAEnB,UAASiB,mBAAkBxC,WAAUwB,UAKjE,OAAOW,CAAU,uLCvGNxC,EAAQ,CACnB3B,YAAa,eACb2E,YAAa,gBAGF7B,EACL,WAGK8B,EACA,YC+BAC,GAAWC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qEAqLtB,KAAAC,YAAeC,IACbC,KAAKC,WAAcF,EAAMG,OAAwCC,IAAI,EAGvE,KAAAC,4BAA+BL,IAC7BC,KAAKK,gBAAiBC,EAAAA,EAAAA,GAA6BP,EAAM,iBA9KvB,gCAiBM,8CAUS,0BASe,oGAiCvC,oDASD,EA3E1BQ,eAAAA,GACEP,KAAKC,UAAW,EAsDlBO,gBAAAA,IAcAC,qBAAAA,IACEC,EAAAA,EAAAA,GAAeV,KAAMA,KAAKW,iBAe5B,cAAMC,SACEC,EAAAA,EAAAA,GAAmBb,MACzBA,KAAK5D,GAAG0E,QAQVC,iBAAAA,IACEC,EAAAA,EAAAA,GAAiBhB,OACjBiB,EAAAA,EAAAA,GAAgBjB,OAChBkB,EAAAA,EAAAA,GAAgClB,MAGlCmB,oBAAAA,IACEC,EAAAA,EAAAA,GAAoBpB,OACpBqB,EAAAA,EAAAA,GAAmBrB,OACnBsB,EAAAA,EAAAA,GAAmCtB,MAGrC,uBAAMuB,IACJC,EAAAA,EAAAA,GAAuBxB,YACjByB,EAAAA,EAAAA,GAAczB,MAGtB0B,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB3B,MASrB4B,UAAAA,GACE,MAAM,SAAE9E,EAAQ,SAAEmD,EAAQ,MAAE1B,EAAK,OAAEhD,EAAM,SAAEsG,EAAQ,mBAAEC,EAAkB,eAAEzB,GACvEL,KAEF,OACEd,EAAAA,EAAAA,GAAA,uBACEpC,SAAUA,EACViF,eAAgB,CAAC,OAAQ,SACzBC,QAAS3B,EACT4B,MAAOJ,EAASK,KAChBC,wBAAyBnC,KAAKF,YAC9BK,KAAMF,EACN6B,mBAAoBA,EACpBM,UAAsB,eAAX7G,EAA0B,eAAiB,gBACtDgD,MAAOA,IAEPW,EAAAA,EAAAA,GAAA,kBACEC,KAAMvB,EACNW,MAAOA,EACP3D,KAAMC,EAAAA,EAAkB6B,QACxBgC,KAAMmD,EAASK,KACf1E,YAAaV,KAEfoC,EAAAA,EAAAA,GAAA,QAAMmD,KAAM5F,EAAM3B,YAAawH,aAActC,KAAKI,+BAClDlB,EAAAA,EAAAA,GAAA,QAAMmD,KAAM5F,EAAMgD,YAAa7E,KAAMC,EAAAA,EAAkBwD,WAK7DkE,MAAAA,GACE,OACErD,EAAAA,EAAAA,GAAA,oBAAiBc,KAAKiC,MAAOO,MAAO9C,EAAe+C,KAAK,UACtDvD,EAAAA,EAAAA,GAAA,aACCc,KAAK4B,qRCnNS,w3ECAhB,MAAMlC,EACK,oBADLA,EAEA,YAGAjD,EACI,iBC8CJiG,GAAS9C,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,2IAmGpB,KAAA8C,kBAAmBC,EAAAA,EAAAA,GAAe,YAAY,IAC5C5C,KAAK6C,eAAexG,MAAMC,KAAK0D,KAAK5D,GAAGG,iBAAiB,4BAiE1D,KAAAuG,sBAAyB/C,IACvB,GAAKA,EAAMG,OAAyCD,SAAU,CAC5D,MAAM8C,EAAehD,EAAMgD,eAC3B1G,MAAMC,KAAK0D,KAAK5D,GAAGG,iBAAiB,yBAAyBW,SAASC,IAC/D4F,EAAaC,SAAS7F,KACzBA,EAAM8C,UAAW,QAMzB,KAAAgD,aAAe,KACbjD,KAAKlD,UAAYkD,KAAKlD,SACtBkD,KAAKkD,uBAAuBC,MAAM,EAGpC,KAAAC,mBAAsBhH,IACpB4D,KAAKqD,eAAiBjH,CAAE,EAW1B,KAAAkH,wBAA2BvD,IACzB,MAAMwD,GAASC,EAAAA,EAAAA,GAA8BzD,GAAOrF,QACjD0B,GAAS,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIqH,QAAQ,0BAGtBzD,KAAK6C,eAAeU,EAAO,EAG7B,KAAAG,wBAA2B3D,IACzB,MAAM4D,GAAWH,EAAAA,EAAAA,GAA8BzD,GAAOrF,QACnD0B,GAAS,OAAFA,QAAE,IAAFA,OAAE,EAAFA,EAAIqH,QAAQ,qBAGtBzD,KAAK4D,cAAgBD,EAAS,EAAE,wDA7LQ,iBAKS,cAUT,4HA4CwB,0DA6BvC,+BAhF3BpD,eAAAA,CAAgBzD,IACde,EAAAA,EAAAA,GAAsB,CAAEzB,GAAI4D,KAAK5D,GAAIU,aASvC+G,aAAAA,GACE7D,KAAK8D,eA4BPtD,gBAAAA,IA4CAC,qBAAAA,IACEC,EAAAA,EAAAA,GAAeV,KAAMA,KAAKW,iBAW5BI,iBAAAA,IACEG,EAAAA,EAAAA,GAAgClB,OAChCgB,EAAAA,EAAAA,GAAiBhB,OACjBiB,EAAAA,EAAAA,GAAgBjB,MAGlBmB,oBAAAA,IACEC,EAAAA,EAAAA,GAAoBpB,OACpBqB,EAAAA,EAAAA,GAAmBrB,OACnBsB,EAAAA,EAAAA,GAAmCtB,MAGrC,uBAAMuB,IACJC,EAAAA,EAAAA,GAAuBxB,MACvB,MAAM,GAAE5D,EAAE,SAAEU,GAAakD,MACzBnC,EAAAA,EAAAA,GAAsB,CAAEzB,KAAIU,mBACtB2E,EAAAA,EAAAA,GAAczB,MAGtB0B,gBAAAA,IACEC,EAAAA,EAAAA,GAAmB3B,MAarB,cAAMY,GAAQ,IAAAmD,QACNlD,EAAAA,EAAAA,GAAmBb,MAElB,QAAP+D,EAAA/D,KAAK5D,UAAE,IAAA2H,GAAPA,EAASjD,QA6BXgD,YAAAA,GACE9D,KAAK6C,eAAexG,MAAMC,KAAK0D,KAAK5D,GAAGG,iBAAiB,0BAG1DsG,cAAAA,CAAeU,GACbA,EAAOrG,SAASC,GAAWA,EAAM5B,OAASyE,KAAKzE,SAyBjDyI,uBAAAA,GACE,MAAM,SACJlH,EAAQ,eACRmH,EAAc,SACdpC,EAAQ,GACRzF,EAAE,SACFgC,EAAQ,aACR6E,EAAY,MACZ1E,EAAK,OACLhD,EAAM,qBACN2I,EAAoB,mBACpBpC,GACE9B,KAEEmE,EAAoBF,EAatB,MAZF/E,EAAAA,EAAAA,GAACnB,EAAAA,EAAY,CACXG,aAAc2D,EAASuC,SACvBhI,GAAIA,EACJ6B,WAAY4D,EAASwC,OACrBvH,SAAUA,EACVsB,SAAUA,EACVG,MAAOA,EACPJ,OAAQ8E,EACR5E,QAAS2B,KAAK4D,cAEdtF,IAAK0B,KAAKoD,qBAId,OAAOe,GACLjF,EAAAA,EAAAA,GAAA,wBACEsD,MAAO9C,EACPuC,MAAOiC,EACP3I,OAAQA,EACRuG,mBAAoBA,EACpBvD,MAAOA,IAEPW,EAAAA,EAAAA,GAAA,QAAMmD,KAAM5F,EAAqB6F,aAActC,KAAK0D,0BACnDS,GAED,KAGN5B,MAAAA,GACE,OACErD,EAAAA,EAAAA,GAACoF,EAAAA,GAAI,CAACnC,wBAAyBnC,KAAK8C,wBAClC5D,EAAAA,EAAAA,GAAA,OAAKsD,MAAO9C,IACVR,EAAAA,EAAAA,GAAA,QAAMoD,aAActC,KAAKsD,0BACxBtD,KAAKgE,4TC3TK,2uFCGrB,MAAMO,EAAW,IAAIC,IAkBrB,IAAI7B,EACJ,MAAM8B,EAAiF,CAAEC,WAAW,YAYpFxD,EAAgCyD,GACzChC,IACHA,GAAmBC,EAAAA,EAAAA,GAAe,WAAYgC,IAGhDjC,EAAiBkC,QAAQF,EAAUvI,GAAIqI,EACzC,UAYgBnD,EAAmCqD,GACjDJ,EAASO,OAAOH,EAAUvI,IAK1BwI,EAAiBjC,EAAiBoC,eAClCpC,EAAiBqC,aACjB,IAAK,MAAOC,KAAYV,EAASW,UAC/BvC,EAAiBkC,QAAQI,EAASR,EAEtC,CAEA,SAASG,EAAiBO,GACxBA,EAAUjI,SAAQpB,IAAW,IAAV,OAAEoE,GAAQpE,GAC3B6B,EAAAA,EAAAA,IAAYuC,EAAO,GAEvB","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/action-bar/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/functional/ExpandToggle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/action-group.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-group/action-group.scss?tag=calcite-action-group&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/action-pad/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-pad/action-pad.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-pad/action-pad.scss?tag=calcite-action-pad&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts"],"sourcesContent":["import { forceUpdate } from \"@stencil/core\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Layout } from \"../interfaces\";\n\nexport const overflowActionsDebounceInMs = 150;\nconst groupBufferPx = 2;\n\nconst getAverage = (arr: number[]) => arr.reduce((p, c) => p + c, 0) / arr.length;\n\nexport const geActionDimensions = (\n  actions: HTMLCalciteActionElement[],\n): { actionWidth: number; actionHeight: number } => {\n  const actionsNotSlotted = actions.filter((action) => action.slot !== ACTION_GROUP_SLOTS.menuActions);\n  const actionLen = actionsNotSlotted?.length;\n  return {\n    actionWidth: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientWidth || 0)) : 0,\n    actionHeight: actionLen ? getAverage(actionsNotSlotted.map((action) => action.clientHeight || 0)) : 0,\n  };\n};\n\nconst getMaxActionCount = ({\n  width,\n  actionWidth,\n  layout,\n  height,\n  actionHeight,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  height: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  groupCount: number;\n}): number => {\n  const maxContainerPx = layout === \"horizontal\" ? width : height;\n  const avgItemPx = layout === \"horizontal\" ? actionWidth : actionHeight;\n  return Math.floor((maxContainerPx - groupCount * groupBufferPx) / avgItemPx);\n};\n\nexport const getOverflowCount = ({\n  layout,\n  actionCount,\n  actionWidth,\n  width,\n  actionHeight,\n  height,\n  groupCount,\n}: {\n  layout: Extract<\"horizontal\" | \"vertical\", Layout>;\n  actionCount: number;\n  actionWidth: number;\n  width: number;\n  actionHeight: number;\n  height: number;\n  groupCount: number;\n}): number => {\n  return Math.max(actionCount - getMaxActionCount({ width, actionWidth, layout, height, actionHeight, groupCount }), 0);\n};\n\nexport const queryActions = (el: HTMLElement): HTMLCalciteActionElement[] => {\n  return Array.from(el.querySelectorAll(\"calcite-action\")).filter((action) =>\n    action.closest(\"calcite-action-menu\") ? action.slot === ACTION_MENU_SLOTS.trigger : true,\n  );\n};\n\nexport const overflowActions = ({\n  actionGroups,\n  expanded,\n  overflowCount,\n}: {\n  actionGroups: HTMLCalciteActionGroupElement[];\n  expanded: boolean;\n  overflowCount: number;\n}): void => {\n  let needToSlotCount = overflowCount;\n  actionGroups.reverse().forEach((group) => {\n    let slottedWithinGroupCount = 0;\n\n    const groupActions = queryActions(group).reverse();\n\n    groupActions.forEach((groupAction) => {\n      if (groupAction.slot === ACTION_GROUP_SLOTS.menuActions) {\n        groupAction.removeAttribute(\"slot\");\n        groupAction.textEnabled = expanded;\n      }\n    });\n\n    if (needToSlotCount > 0) {\n      groupActions.some((groupAction) => {\n        const unslottedActions = groupActions.filter((action) => !action.slot);\n\n        if (unslottedActions.length > 1 && groupActions.length > 2 && !groupAction.closest(\"calcite-action-menu\")) {\n          groupAction.textEnabled = true;\n          groupAction.setAttribute(\"slot\", ACTION_GROUP_SLOTS.menuActions);\n          slottedWithinGroupCount++;\n\n          if (slottedWithinGroupCount > 1) {\n            needToSlotCount--;\n          }\n        }\n\n        return needToSlotCount < 1;\n      });\n    }\n\n    forceUpdate(group);\n  });\n};\n","import { FunctionalComponent, h } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { queryActions } from \"../action-bar/utils\";\nimport { SLOTS as ACTION_GROUP_SLOTS } from \"../action-group/resources\";\nimport { Position, Scale } from \"../interfaces\";\n\ninterface ExpandToggleProps {\n  expanded: boolean;\n  expandText: string;\n  collapseText: string;\n  el: HTMLElement;\n  position: Position;\n  tooltip?: HTMLCalciteTooltipElement;\n  toggle: () => void;\n  ref?: (el: HTMLElement) => void;\n  scale?: Scale;\n}\n\nconst ICONS = {\n  chevronsLeft: \"chevrons-left\",\n  chevronsRight: \"chevrons-right\",\n};\n\nfunction getCalcitePosition(position: Position, el: HTMLElement): Position {\n  return position || el.closest(\"calcite-shell-panel\")?.position || \"start\";\n}\n\nexport function toggleChildActionText({\n  el,\n  expanded,\n}: {\n  el: HTMLElement;\n  expanded: boolean;\n}): void {\n  queryActions(el)\n    .filter((el) => el.slot !== ACTION_GROUP_SLOTS.menuActions)\n    .forEach((action) => (action.textEnabled = expanded));\n  el.querySelectorAll(\"calcite-action-group, calcite-action-menu\").forEach(\n    (el: HTMLCalciteActionMenuElement | HTMLCalciteActionGroupElement) => (el.expanded = expanded),\n  );\n}\n\nconst setTooltipReference = ({\n  tooltip,\n  referenceElement,\n  expanded,\n  ref,\n}: {\n  tooltip: HTMLCalciteTooltipElement;\n  referenceElement: HTMLCalciteActionElement;\n  expanded: boolean;\n  ref?: (el: HTMLElement) => void;\n}): HTMLCalciteActionElement => {\n  if (tooltip) {\n    tooltip.referenceElement = !expanded && referenceElement ? referenceElement : null;\n  }\n\n  if (ref) {\n    ref(referenceElement);\n  }\n\n  return referenceElement;\n};\n\nexport const ExpandToggle: FunctionalComponent<ExpandToggleProps> = ({\n  expanded,\n  expandText,\n  collapseText,\n  toggle,\n  el,\n  position,\n  tooltip,\n  ref,\n  scale,\n}) => {\n  const rtl = getElementDir(el) === \"rtl\";\n\n  const text = expanded ? collapseText : expandText;\n  const icons = [ICONS.chevronsLeft, ICONS.chevronsRight];\n\n  if (rtl) {\n    icons.reverse();\n  }\n\n  const end = getCalcitePosition(position, el) === \"end\";\n  const expandIcon = end ? icons[1] : icons[0];\n  const collapseIcon = end ? icons[0] : icons[1];\n\n  const actionNode = (\n    <calcite-action\n      icon={expanded ? expandIcon : collapseIcon}\n      onClick={toggle}\n      scale={scale}\n      text={text}\n      textEnabled={expanded}\n      title={!expanded && !tooltip ? text : null}\n      // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n      ref={(referenceElement): HTMLCalciteActionElement =>\n        setTooltipReference({ tooltip, referenceElement, expanded, ref })\n      }\n    />\n  );\n\n  return actionNode;\n};\n","export const SLOTS = {\n  menuActions: \"menu-actions\",\n  menuTooltip: \"menu-tooltip\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n};\n\nexport const CSS = {\n  container: \"container\",\n};\n","import { Component, Element, h, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { CalciteActionMenuCustomEvent } from \"../../components\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { SLOTS as ACTION_MENU_SLOTS } from \"../action-menu/resources\";\nimport { Columns, Layout, Scale } from \"../interfaces\";\nimport { ActionGroupMessages } from \"./assets/action-group/t9n\";\nimport { ICONS, SLOTS, CSS } from \"./resources\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { slotChangeHasAssignedElement } from \"../../utils/dom\";\n\n/**\n * @slot - A slot for adding a group of `calcite-action`s.\n * @slot menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a `calcite-dropdown`.\n * @slot menu-tooltip - A slot for adding a `calcite-tooltip` for the menu.\n */\n@Component({\n  tag: \"calcite-action-group\",\n  styleUrl: \"action-group.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ActionGroup\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.menuOpen = false;\n  }\n\n  /**\n   *  Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * Indicates the layout of the component.\n   *\n   * @deprecated Use the `layout` property on the component's parent instead.\n   */\n  @Prop({ reflect: true }) layout: Layout = \"vertical\";\n\n  /**\n   * Indicates number of columns.\n   */\n  @Prop({ reflect: true }) columns: Columns;\n\n  /**\n   * When `true`, the `calcite-action-menu` is open.\n   */\n  @Prop({ reflect: true, mutable: true }) menuOpen = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Specifies the size of the `calcite-action-menu`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionGroupMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionGroupMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n  @Element() el: HTMLCalciteActionGroupElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionGroupMessages;\n\n  @State() hasMenuActions = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderMenu(): VNode {\n    const { expanded, menuOpen, scale, layout, messages, overlayPositioning, hasMenuActions } =\n      this;\n\n    return (\n      <calcite-action-menu\n        expanded={expanded}\n        flipPlacements={[\"left\", \"right\"]}\n        hidden={!hasMenuActions}\n        label={messages.more}\n        onCalciteActionMenuOpen={this.setMenuOpen}\n        open={menuOpen}\n        overlayPositioning={overlayPositioning}\n        placement={layout === \"horizontal\" ? \"bottom-start\" : \"leading-start\"}\n        scale={scale}\n      >\n        <calcite-action\n          icon={ICONS.menu}\n          scale={scale}\n          slot={ACTION_MENU_SLOTS.trigger}\n          text={messages.more}\n          textEnabled={expanded}\n        />\n        <slot name={SLOTS.menuActions} onSlotchange={this.handleMenuActionsSlotChange} />\n        <slot name={SLOTS.menuTooltip} slot={ACTION_MENU_SLOTS.tooltip} />\n      </calcite-action-menu>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <div aria-label={this.label} class={CSS.container} role=\"group\">\n        <slot />\n        {this.renderMenu()}\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  setMenuOpen = (event: CalciteActionMenuCustomEvent<void>): void => {\n    this.menuOpen = !!(event.target as HTMLCalciteActionMenuElement).open;\n  };\n\n  handleMenuActionsSlotChange = (event: Event): void => {\n    this.hasMenuActions = slotChangeHasAssignedElement(event);\n  };\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-group-columns: Sets number of grid-template-columns when the `layout` property is `\"grid\"`.\n * @prop --calcite-action-group-gap: Sets the gap (gutters) between rows and columns when the `layout` property is `\"grid\"`.\n * @prop --calcite-action-group-padding: Sets the padding when the `layout` property is `\"grid\"`.\n */\n\n:host {\n  @extend %component-host;\n\n  @apply flex\n  flex-col\n  p-0;\n\n  --calcite-action-group-columns: 3;\n  --calcite-action-group-gap: theme(\"gap.px\");\n  --calcite-action-group-padding: theme(\"padding.px\");\n}\n\n.container {\n  @apply flex flex-col flex-grow;\n}\n\n:host([columns=\"1\"]) {\n  --calcite-action-group-columns: 1;\n}\n:host([columns=\"2\"]) {\n  --calcite-action-group-columns: 2;\n}\n:host([columns=\"3\"]) {\n  --calcite-action-group-columns: 3;\n}\n:host([columns=\"4\"]) {\n  --calcite-action-group-columns: 4;\n}\n:host([columns=\"5\"]) {\n  --calcite-action-group-columns: 5;\n}\n:host([columns=\"6\"]) {\n  --calcite-action-group-columns: 6;\n}\n\n:host(:first-child) {\n  @apply pt-0;\n}\n\n:host([layout=\"horizontal\"]),\n:host([layout=\"horizontal\"]) .container {\n  @apply flex-row;\n}\n\n:host([layout=\"grid\"]) {\n  @apply grid;\n}\n\n:host([layout=\"grid\"]) .container {\n  @apply bg-background\n  grid\n  place-content-stretch;\n  gap: var(--calcite-action-group-gap);\n  padding: var(--calcite-action-group-gap);\n  grid-template-columns: repeat(var(--calcite-action-group-columns), auto);\n}\n\n@include base-component();\n","export const CSS = {\n  actionGroupEnd: \"action-group--end\",\n  container: \"container\",\n};\n\nexport const SLOTS = {\n  expandTooltip: \"expand-tooltip\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport { slotChangeGetAssignedElements } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ExpandToggle, toggleChildActionText } from \"../functional/ExpandToggle\";\nimport { Layout, Position, Scale } from \"../interfaces\";\nimport { ActionPadMessages } from \"./assets/action-pad/t9n\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { createObserver } from \"../../utils/observers\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\n\n/**\n * @slot - A slot for adding `calcite-action`s to the component.\n * @slot expand-tooltip - A slot to set the `calcite-tooltip` for the expand toggle.\n */\n@Component({\n  tag: \"calcite-action-pad\",\n  styleUrl: \"action-pad.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class ActionPad\n  implements ConditionalSlotComponent, LoadableComponent, LocalizedComponent, T9nComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Specifies the accessible label for the last `calcite-action-group`.\n   */\n  @Prop() actionsEndGroupLabel: string;\n\n  /**\n   * When `true`, the expand-toggling behavior is disabled.\n   */\n  @Prop({ reflect: true }) expandDisabled = false;\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(expanded: boolean): void {\n    toggleChildActionText({ el: this.el, expanded });\n  }\n\n  /**\n   * Indicates the layout of the component.\n   */\n  @Prop({ reflect: true }) layout: Layout = \"vertical\";\n\n  @Watch(\"layout\")\n  layoutHandler(): void {\n    this.updateGroups();\n  }\n\n  /**\n   * Arranges the component depending on the element's `dir` property.\n   */\n  @Prop({ reflect: true }) position: Position;\n\n  /**\n   * Specifies the size of the expand `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ActionPadMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ActionPadMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `expanded` property is toggled.\n   */\n  @Event({ cancelable: false }) calciteActionPadToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionPadElement;\n\n  @State() expandTooltip: HTMLCalciteTooltipElement;\n\n  mutationObserver = createObserver(\"mutation\", () =>\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\"))),\n  );\n\n  expandToggleEl: HTMLCalciteActionElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ActionPadMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    const { el, expanded } = this;\n    toggleChildActionText({ el, expanded });\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.el?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  actionMenuOpenHandler = (event: CustomEvent<void>): void => {\n    if ((event.target as HTMLCalciteActionGroupElement).menuOpen) {\n      const composedPath = event.composedPath();\n      Array.from(this.el.querySelectorAll(\"calcite-action-group\")).forEach((group) => {\n        if (!composedPath.includes(group)) {\n          group.menuOpen = false;\n        }\n      });\n    }\n  };\n\n  toggleExpand = (): void => {\n    this.expanded = !this.expanded;\n    this.calciteActionPadToggle.emit();\n  };\n\n  setExpandToggleRef = (el: HTMLCalciteActionElement): void => {\n    this.expandToggleEl = el;\n  };\n\n  updateGroups(): void {\n    this.setGroupLayout(Array.from(this.el.querySelectorAll(\"calcite-action-group\")));\n  }\n\n  setGroupLayout(groups: HTMLCalciteActionGroupElement[]): void {\n    groups.forEach((group) => (group.layout = this.layout));\n  }\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const groups = slotChangeGetAssignedElements(event).filter(\n      (el) => el?.matches(\"calcite-action-group\"),\n    ) as HTMLCalciteActionGroupElement[];\n\n    this.setGroupLayout(groups);\n  };\n\n  handleTooltipSlotChange = (event: Event): void => {\n    const tooltips = slotChangeGetAssignedElements(event).filter(\n      (el) => el?.matches(\"calcite-tooltip\"),\n    ) as HTMLCalciteTooltipElement[];\n\n    this.expandTooltip = tooltips[0];\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderBottomActionGroup(): VNode {\n    const {\n      expanded,\n      expandDisabled,\n      messages,\n      el,\n      position,\n      toggleExpand,\n      scale,\n      layout,\n      actionsEndGroupLabel,\n      overlayPositioning,\n    } = this;\n\n    const expandToggleNode = !expandDisabled ? (\n      <ExpandToggle\n        collapseText={messages.collapse}\n        el={el}\n        expandText={messages.expand}\n        expanded={expanded}\n        position={position}\n        scale={scale}\n        toggle={toggleExpand}\n        tooltip={this.expandTooltip}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={this.setExpandToggleRef}\n      />\n    ) : null;\n\n    return expandToggleNode ? (\n      <calcite-action-group\n        class={CSS.actionGroupEnd}\n        label={actionsEndGroupLabel}\n        layout={layout}\n        overlayPositioning={overlayPositioning}\n        scale={scale}\n      >\n        <slot name={SLOTS.expandTooltip} onSlotchange={this.handleTooltipSlotChange} />\n        {expandToggleNode}\n      </calcite-action-group>\n    ) : null;\n  }\n\n  render(): VNode {\n    return (\n      <Host onCalciteActionMenuOpen={this.actionMenuOpenHandler}>\n        <div class={CSS.container}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n          {this.renderBottomActionGroup()}\n        </div>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-action-pad-expanded-max-width: When `layout` is `\"vertical\"`, specifies the expanded max width of the component.\n */\n\n:host {\n  @extend %component-host;\n  @apply animate-in block rounded-sm;\n  --calcite-action-pad-expanded-max-width: auto;\n  background: transparent;\n}\n\n:host([expanded][layout=\"vertical\"]) .container {\n  max-inline-size: var(--calcite-action-pad-expanded-max-width);\n}\n\n::slotted(calcite-action-group) {\n  @apply border-color-3\n  border-0\n  border-b\n  border-solid\n  pb-0 pt-0;\n}\n\n.container {\n  @apply bg-background\n  shadow-2\n  inline-flex\n  flex-col\n  overflow-y-auto\n  rounded;\n}\n\n.action-group--bottom {\n  @apply flex-grow justify-end pb-0;\n}\n\n:host([layout=\"horizontal\"]) {\n  .container {\n    @apply flex-row;\n    .action-group--bottom {\n      @apply p-0;\n    }\n    ::slotted(calcite-action-group) {\n      @apply border-0\n      p-0;\n      border-inline-end-width: theme(\"borderWidth.DEFAULT\");\n    }\n  }\n}\n\n::slotted(calcite-action-group:last-child) {\n  @apply border-b-0;\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver } from \"./observers\";\n\nconst observed = new Set<HTMLElement>();\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: MutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  observed.delete(component.el);\n\n  // we explicitly process queued mutations and disconnect and reconnect\n  // the observer until MutationObserver gets an `unobserve` method\n  // see https://github.com/whatwg/dom/issues/126\n  processMutations(mutationObserver.takeRecords());\n  mutationObserver.disconnect();\n  for (const [element] of observed.entries()) {\n    mutationObserver.observe(element, observerOptions);\n  }\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n"],"names":["overflowActionsDebounceInMs","getAverage","arr","reduce","p","c","length","geActionDimensions","actions","actionsNotSlotted","filter","action","slot","SLOTS$1","menuActions","actionLen","actionWidth","map","clientWidth","actionHeight","clientHeight","getOverflowCount","_ref2","layout","actionCount","width","height","groupCount","Math","max","_ref","maxContainerPx","avgItemPx","floor","getMaxActionCount","queryActions","el","Array","from","querySelectorAll","closest","SLOTS","trigger","overflowActions","_ref3","actionGroups","expanded","overflowCount","needToSlotCount","reverse","forEach","group","slottedWithinGroupCount","groupActions","groupAction","removeAttribute","textEnabled","some","setAttribute","forceUpdate","ICONS","toggleChildActionText","_ref4","ExpandToggle","_ref6","expandText","collapseText","toggle","position","tooltip","ref","scale","rtl","getElementDir","text","icons","end","_el$closest","getCalcitePosition","expandIcon","collapseIcon","actionNode","h","icon","onClick","title","referenceElement","_ref5","setTooltipReference","menuTooltip","CSS","ActionGroup","proxyCustomElement","HTMLElement","setMenuOpen","event","this","menuOpen","target","open","handleMenuActionsSlotChange","hasMenuActions","slotChangeHasAssignedElement","expandedHandler","onMessagesChange","effectiveLocaleChange","updateMessages","effectiveLocale","setFocus","componentFocusable","focus","connectedCallback","connectLocalized","connectMessages","connectConditionalSlotComponent","disconnectedCallback","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","renderMenu","messages","overlayPositioning","flipPlacements","hidden","label","more","onCalciteActionMenuOpen","placement","name","onSlotchange","render","class","role","ActionPad","mutationObserver","createObserver","setGroupLayout","actionMenuOpenHandler","composedPath","includes","toggleExpand","calciteActionPadToggle","emit","setExpandToggleRef","expandToggleEl","handleDefaultSlotChange","groups","slotChangeGetAssignedElements","matches","handleTooltipSlotChange","tooltips","expandTooltip","layoutHandler","updateGroups","_this$el","renderBottomActionGroup","expandDisabled","actionsEndGroupLabel","expandToggleNode","collapse","expand","Host","observed","Set","observerOptions","childList","component","processMutations","observe","delete","takeRecords","disconnect","element","entries","mutations"],"sourceRoot":""}