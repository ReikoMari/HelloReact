{"version":3,"file":"static/js/53666.5a8eca88.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/browser.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/table-cell.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/table-cell/table-cell.scss?tag=calcite-table-cell&encapsulation=shadow"],"sourcesContent":["import { Build } from \"@stencil/core\";\n\ninterface NavigatorUAData {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n}\n\nfunction getUserAgentData(): NavigatorUAData | undefined {\n  return (navigator as any).userAgentData;\n}\n\nexport function getUserAgentString(): string {\n  if (!Build.isBrowser) {\n    return \"\";\n  }\n\n  const uaData = getUserAgentData();\n\n  return uaData?.brands\n    ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n    : navigator.userAgent;\n}\n","import { getUserAgentString } from \"./browser\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    removeInteractionListeners(disabledElementToParent.get(component.el));\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerOptions extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport function InteractiveContainer(\n  { disabled }: InteractiveContainerOptions,\n  children: VNode[],\n): FunctionalComponent {\n  return (\n    <div class={CSS.container} inert={disabled}>\n      {...children}\n    </div>\n  );\n}\n","import { Build, forceUpdate } from \"@stencil/core\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!Build.isBrowser) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { Build, getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!Build.isBrowser) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  component.onMessagesChange = undefined;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange(): void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n","export const CSS = {\n  contentCell: \"content-cell\",\n  numberCell: \"number-cell\",\n  footerCell: \"footer-cell\",\n  selectionCell: \"selection-cell\",\n  selectedCell: \"selected-cell\",\n  assistiveText: \"assistive-text\",\n  lastCell: \"last-cell\",\n  staticCell: \"static-cell\",\n};\n","import { Component, Element, h, Host, Method, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\n\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport { TableCellMessages } from \"./assets/table-cell/t9n\";\nimport { CSS } from \"./resources\";\nimport { RowType, TableInteractionMode } from \"../table/interfaces\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n\n/**\n * @slot - A slot for adding content, usually text content.\n */\n@Component({\n  tag: \"calcite-table-cell\",\n  styleUrl: \"table-cell.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TableCell\n  implements InteractiveComponent, LocalizedComponent, LoadableComponent, T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the number of columns the component should span. */\n  @Prop({ reflect: true }) colSpan: number;\n\n  /** Specifies the number of rows the component should span. */\n  @Prop({ reflect: true }) rowSpan: number;\n\n  /** @internal */\n  @Prop() disabled: boolean;\n\n  /** @internal */\n  @Prop() interactionMode: TableInteractionMode = \"interactive\";\n\n  /** @internal */\n  @Prop() lastCell: boolean;\n\n  /** @internal */\n  @Prop() numberCell: boolean;\n\n  /** @internal */\n  @Prop() parentRowIsSelected: boolean;\n\n  @Watch(\"parentRowIsSelected\")\n  onSelectedChange(): void {\n    this.updateScreenReaderSelectionText();\n  }\n\n  /** @internal */\n  @Prop() parentRowAlignment: Alignment = \"start\";\n\n  /** @internal */\n  @Prop() parentRowPositionLocalized: string;\n\n  /** @internal */\n  @Prop() parentRowType: RowType;\n\n  /** @internal */\n  @Prop() positionInRow: number;\n\n  /** @internal */\n  @Prop() readCellContentsToAT: boolean;\n\n  /** @internal */\n  @Prop() scale: Scale = \"m\";\n\n  /** @internal */\n  @Prop() selectionCell: boolean;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TableCellMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TableCellMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTableCellElement;\n\n  @State() contentsText = \"\";\n\n  @State() defaultMessages: TableCellMessages;\n\n  @State() focused = false;\n\n  @State() selectionText = \"\";\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private containerEl: HTMLTableCellElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n    this.updateScreenReaderContentsText();\n    this.updateScreenReaderSelectionText();\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.containerEl.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private updateScreenReaderSelectionText(): void {\n    const selectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.selected} ${this.messages?.keyboardDeselect}`;\n    const unselectedText = `${this.messages?.row} ${this.parentRowPositionLocalized} ${this.messages?.unselected} ${this.messages?.keyboardSelect}`;\n    this.selectionText = this.parentRowIsSelected ? selectedText : unselectedText;\n  }\n\n  private updateScreenReaderContentsText = (): void => {\n    this.contentsText = this.el.textContent;\n  };\n\n  private onContainerBlur = (): void => {\n    this.focused = false;\n  };\n\n  private onContainerFocus = (): void => {\n    this.focused = true;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const staticCell =\n      this.disabled ||\n      (this.interactionMode === \"static\" &&\n        (!this.selectionCell || (this.selectionCell && this.parentRowType === \"foot\")));\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <td\n            aria-disabled={this.disabled}\n            class={{\n              [CSS.footerCell]: this.parentRowType === \"foot\",\n              [CSS.contentCell]: !this.numberCell && !this.selectionCell,\n              [CSS.numberCell]: this.numberCell,\n              [CSS.selectionCell]: this.selectionCell,\n              [CSS.selectedCell]: this.parentRowIsSelected,\n              [CSS.lastCell]: this.lastCell && (!this.rowSpan || (this.colSpan && !!this.rowSpan)),\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              [CSS.staticCell]: staticCell,\n              [this.parentRowAlignment]:\n                this.parentRowAlignment === \"start\" || this.parentRowAlignment === \"end\",\n            }}\n            colSpan={this.colSpan}\n            onBlur={this.onContainerBlur}\n            onFocus={this.onContainerFocus}\n            role={this.interactionMode === \"interactive\" ? \"gridcell\" : \"cell\"}\n            rowSpan={this.rowSpan}\n            tabIndex={staticCell ? -1 : 0}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.containerEl = el)}\n          >\n            {(this.selectionCell || this.readCellContentsToAT) && (\n              <span\n                aria-hidden={true}\n                aria-live={this.focused ? \"polite\" : \"off\"}\n                class={CSS.assistiveText}\n              >\n                {this.selectionCell && this.selectionText}\n                {this.readCellContentsToAT && !this.selectionCell && this.contentsText}\n              </span>\n            )}\n            <slot onSlotchange={this.updateScreenReaderContentsText} />\n          </td>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-table-cell-background: Specifies the background color of the component.\n */\n\n:host {\n  --calcite-internal-table-cell-background: var(--calcite-table-cell-background, transparent);\n  @apply contents;\n}\n\n:host([alignment=\"center\"]) td:not(.selection-cell):not(.number-cell) {\n  @apply text-center;\n}\n\n:host([alignment=\"end\"]) td:not(.selection-cell):not(.number-cell) {\n  @apply text-end;\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\ntd {\n  @apply text-start align-middle text-color-1 whitespace-normal;\n  background: var(--calcite-internal-table-cell-background);\n  font-size: var(--calcite-internal-table-cell-font-size);\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n  padding: var(--calcite-internal-table-cell-padding);\n\n  &:not(.static-cell) {\n    @apply focus-base;\n    &:focus {\n      @apply focus-inset;\n    }\n  }\n}\n\ntd.start.content-cell {\n  @apply align-top;\n}\n\ntd.end.content-cell {\n  @apply align-bottom;\n}\n\ntd.last-cell {\n  border-inline-end: 0;\n}\n\n.number-cell {\n  @apply bg-foreground-2;\n}\n\n.footer-cell {\n  @apply bg-background font-medium text-color-1;\n  border-block-start: 1px solid var(--calcite-color-border-3);\n}\n\n.number-cell,\n.selection-cell {\n  @apply text-center;\n  border-inline-end: 1px solid var(--calcite-color-border-3);\n  inline-size: 2rem;\n  min-inline-size: 2rem;\n}\n\n.selection-cell {\n  @apply text-color-3;\n  inset-inline-start: 2rem;\n  &:not(.footer-cell) {\n    @apply cursor-pointer;\n  }\n}\n\n.selected-cell:not(.number-cell):not(.footer-cell) {\n  --calcite-internal-table-cell-background: var(--calcite-color-foreground-current);\n}\n\n.selection-cell.selected-cell {\n  box-shadow: inset 0.25rem 0 0 0 var(--calcite-color-brand);\n  color: var(--calcite-color-brand);\n  & calcite-icon {\n    color: var(--calcite-color-brand);\n  }\n}\n\n.calcite--rtl.selection-cell.selected-cell {\n  box-shadow: inset -0.25rem 0 0 0 var(--calcite-color-brand);\n}\n\n.selection-cell {\n  @apply align-middle;\n  & ::slotted(calcite-icon) {\n    @apply pointer-events-none mt-1;\n  }\n}\n\n@include disabled();\n"],"names":["getUserAgentString","Build","isBrowser","uaData","navigator","userAgentData","brands","map","_ref","brand","version","concat","join","userAgent","isFirefox","test","disabledElementToParent","WeakMap","interceptedClick","disabled","this","HTMLElement","prototype","click","call","onPointerDown","event","interactiveElement","target","get","preventDefault","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","component","el","setAttribute","contains","document","activeElement","blur","blockInteraction","restoreInteraction","removeAttribute","currentParent","parentElement","getParentElement","trackedParent","removeInteractionListeners","set","addInteractionListeners","element","addEventListener","forEach","delete","removeEventListener","connectInteractive","disconnectInteractive","CSS","container","InteractiveContainer","_ref2","children","h","class","inert","resolveMap","promiseMap","setUpLoadableComponent","Promise","resolve","setComponentLoaded","componentLoaded","async","componentFocusable","forceUpdate","requestAnimationFrame","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","messages","defaultMessages","messageOverrides","setUpMessages","fetchMessages","effectiveLocale","lang","componentName","tagName","toLowerCase","replace","key","fetch","getAssetPath","then","resp","ok","json","catch","getMessageBundle","getSupportedLocale","updateMessages","connectMessages","onMessagesChange","defaultOnMessagesChange","disconnectMessages","undefined","TableCell","proxyCustomElement","updateScreenReaderContentsText","contentsText","textContent","onContainerBlur","focused","onContainerFocus","onSelectedChange","updateScreenReaderSelectionText","effectiveLocaleChange","componentWillLoad","componentDidLoad","connectedCallback","connectLocalized","componentDidRender","disconnectedCallback","disconnectLocalized","setFocus","containerEl","focus","_this$messages","_this$messages2","_this$messages3","_this$messages4","_this$messages5","_this$messages6","selectedText","row","parentRowPositionLocalized","selected","keyboardDeselect","unselectedText","unselected","keyboardSelect","selectionText","parentRowIsSelected","render","dir","getElementDir","staticCell","interactionMode","selectionCell","parentRowType","Host","numberCell","lastCell","rowSpan","colSpan","CSS_UTILITY","rtl","parentRowAlignment","onBlur","onFocus","role","tabIndex","ref","readCellContentsToAT","onSlotchange"],"sourceRoot":""}