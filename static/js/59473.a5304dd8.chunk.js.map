{"version":3,"file":"static/js/59473.a5304dd8.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/observers.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/tabs/tabs.scss?tag=calcite-tabs&encapsulation=shadow"],"sourcesContent":["import { Build } from \"@stencil/core\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve(target: Node): void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!Build.isBrowser) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n","export const SLOTS = {\n  titleGroup: \"title-group\",\n};\n","import { Component, Element, Fragment, h, Listen, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { TabLayout, TabPosition } from \"./interfaces\";\nimport { SLOTS } from \"./resources\";\nimport { createObserver } from \"../../utils/observers\";\n\n/**\n * @slot - A slot for adding `calcite-tab`s.\n * @slot title-group - A slot for adding a `calcite-tab-nav`.\n */\n@Component({\n  tag: \"calcite-tabs\",\n  styleUrl: \"tabs.scss\",\n  shadow: true,\n})\nexport class Tabs {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the layout of the `calcite-tab-nav`, justifying the `calcite-tab-title`s to the start (`\"inline\"`), or across and centered (`\"center\"`).\n   */\n  @Prop({ reflect: true }) layout: TabLayout = \"inline\";\n\n  /**\n   * Specifies the position of `calcite-tab-nav` and `calcite-tab-title` components in relation to the `calcite-tabs`.\n   */\n  @Prop({ reflect: true }) position: TabPosition = \"top\";\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  @Watch(\"position\")\n  @Watch(\"scale\")\n  handleInheritableProps(): void {\n    this.updateItems();\n  }\n\n  /**\n   * When `true`, the component will display with a folder style menu.\n   */\n  @Prop() bordered = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver.observe(this.el, { childList: true });\n    this.updateItems();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.updateItems();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        <slot name={SLOTS.titleGroup} />\n        <section>\n          <slot />\n        </section>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteInternalTabTitleRegister\")\n  calciteInternalTabTitleRegister(event: CustomEvent): void {\n    this.titles = [...this.titles, event.target as HTMLCalciteTabTitleElement];\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteTabTitleUnregister\", { target: \"body\" })\n  calciteTabTitleUnregister(event: CustomEvent): void {\n    this.titles = this.titles.filter((el) => el !== event.detail);\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteInternalTabRegister\")\n  calciteInternalTabRegister(event: CustomEvent): void {\n    this.tabs = [...this.tabs, event.target as HTMLCalciteTabElement];\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  /**\n   * @param event\n   * @internal\n   */\n  @Listen(\"calciteTabUnregister\", { target: \"body\" })\n  calciteTabUnregister(event: CustomEvent): void {\n    this.tabs = this.tabs.filter((el) => el !== event.detail);\n    this.registryHandler();\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTabsElement;\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab-titles>`s to match up ARIA\n   * attributes.\n   */\n  @State() titles: HTMLCalciteTabTitleElement[] = [];\n\n  /**\n   *\n   * Stores an array of ids of `<calcite-tab>`s to match up ARIA attributes.\n   */\n  @State() tabs: HTMLCalciteTabElement[] = [];\n\n  mutationObserver = createObserver(\"mutation\", (mutationsList: MutationRecord[]) => {\n    for (const mutation of mutationsList) {\n      const target = mutation.target as HTMLElement;\n      if (\n        target.nodeName === \"CALCITE-TAB-NAV\" ||\n        target.nodeName === \"CALCITE-TAB-TITLE\" ||\n        target.nodeName === \"CALCITE-TAB\"\n      ) {\n        this.updateItems();\n      }\n    }\n  });\n\n  private updateItems(): void {\n    const { position, scale } = this;\n\n    const nav = this.el.querySelector(\"calcite-tab-nav\");\n    if (nav) {\n      nav.position = position;\n      nav.scale = scale;\n    }\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab\")).forEach((tab: HTMLCalciteTabElement) => {\n      if (tab.parentElement === this.el) {\n        tab.scale = scale;\n      }\n    });\n\n    Array.from(this.el.querySelectorAll(\"calcite-tab-nav > calcite-tab-title\")).forEach(\n      (title: HTMLCalciteTabTitleElement) => {\n        title.position = position;\n        title.scale = scale;\n      },\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   *\n   * Matches up elements from the internal `tabs` and `titles` to automatically\n   * update the ARIA attributes and link `<calcite-tab>` and\n   * `<calcite-tab-title>` components.\n   */\n  async registryHandler(): Promise<void> {\n    let tabIds;\n    let titleIds;\n\n    // determine if we are using `tab` based or `index` based tab identifiers.\n    if (this.tabs.some((el) => el.tab) || this.titles.some((el) => el.tab)) {\n      // if we are using `tab` based identifiers sort by `tab` to account for\n      // possible out of order tabs and get the id of each tab\n      tabIds = this.tabs.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n      titleIds = this.titles.sort((a, b) => a.tab.localeCompare(b.tab)).map((el) => el.id);\n    } else {\n      // if we are using index based tabs then the `<calcite-tab>` and\n      // `<calcite-tab-title>` might have been rendered out of order so the\n      // order of `this.tabs` and `this.titles` might not reflect the DOM state,\n      // and might not match each other so we need to get the index of all the\n      // tabs and titles in the DOM order to match them up as a source of truth\n      const tabDomIndexes = await Promise.all(this.tabs.map((el) => el.getTabIndex()));\n\n      const titleDomIndexes = await Promise.all(this.titles.map((el) => el.getTabIndex()));\n\n      // once we have the DOM order as a source of truth we can build the\n      // matching tabIds and titleIds arrays\n      tabIds = tabDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.tabs[registryIndex].id;\n        return ids;\n      }, []);\n\n      titleIds = titleDomIndexes.reduce((ids, indexInDOM, registryIndex) => {\n        ids[indexInDOM] = this.titles[registryIndex].id;\n        return ids;\n      }, []);\n    }\n\n    // pass all our new aria information to each `<calcite-tab>` and\n    // `<calcite-tab-title>` which will check if they can update their internal\n    // `controlled` or `labeledBy` states and re-render if necessary\n    this.tabs.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n    this.titles.forEach((el) => el.updateAriaInfo(tabIds, titleIds));\n  }\n}\n",":host {\n  @apply flex flex-col;\n}\n\n:host([bordered]) {\n  box-shadow: inset 0 1px 0 var(--calcite-color-border-1);\n  background-color: var(--calcite-color-foreground-1);\n\n  section {\n    @apply border-color-1 border border-solid;\n  }\n}\n\n:host([bordered][position=\"bottom\"]) {\n  box-shadow:\n    inset 0 1px 0 var(--calcite-color-border-1),\n    inset 0 -1px 0 var(--calcite-color-border-1);\n}\n\n:host([bordered]:not([position=\"bottom\"])) ::slotted(calcite-tab-nav) {\n  margin-block-end: -1px;\n}\n\n:host([bordered][scale=\"s\"]) section {\n  @apply p-3;\n}\n\n:host([bordered][scale=\"m\"]) section {\n  @apply p-2;\n}\n\n:host([bordered][scale=\"l\"]) section {\n  @apply p-4;\n}\n\n:host([position=\"bottom\"]) {\n  @apply flex-col-reverse;\n}\n\nsection {\n  @apply border-t-color-1\n    flex\n    flex-grow\n    overflow-hidden\n    border-t;\n  border-block-start-style: solid;\n}\n\n:host([position=\"bottom\"]) section {\n  @apply border-b-color-1\n    flex-col-reverse\n    border-t-0\n    border-b;\n}\n\n:host([position=\"bottom\"]:not([bordered])) section {\n  border-block-end-style: solid;\n}\n\n@media (forced-colors: active) {\n  :host([bordered]) section {\n    @apply border-t-0\n      border-b;\n  }\n  :host([position=\"bottom\"][bordered]) section {\n    @apply border-t\n      border-b-0;\n  }\n}\n\n@include base-component();\n"],"names":["createObserver","type","callback","options","Build","isBrowser","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","this","observe","target","push","unobserve","newObservedEntries","filter","observed","takeRecords","disconnect","forEach","IntersectionObserver","ResizeObserver","getObserver","SLOTS","Tabs","proxyCustomElement","HTMLElement","mutationObserver","mutationsList","mutation","nodeName","updateItems","handleInheritableProps","connectedCallback","el","childList","componentWillLoad","disconnectedCallback","_this$mutationObserve","render","h","Fragment","name","calciteInternalTabTitleRegister","event","titles","registryHandler","stopPropagation","calciteTabTitleUnregister","detail","calciteInternalTabRegister","tabs","calciteTabUnregister","position","scale","nav","querySelector","Array","from","querySelectorAll","tab","parentElement","title","tabIds","titleIds","some","sort","a","b","localeCompare","map","id","tabDomIndexes","Promise","all","getTabIndex","titleDomIndexes","reduce","ids","indexInDOM","registryIndex","updateAriaInfo"],"sourceRoot":""}