{"version":3,"file":"static/js/10792.fd07937f.chunk.js","mappings":";+LAUA,MAEMA,EAAiB,MACnBC,WAAAA,CAAYC,IACRC,EAAAA,EAAAA,GAAiBC,KAAMF,GACvBE,KAAKC,qBAAsBC,EAAAA,EAAAA,GAAYF,KAAM,sBAAuB,GACpEA,KAAKG,cAAgB,GACrBH,KAAKI,sBAAmBC,EACxBL,KAAKM,mBAAgBD,EACrBL,KAAKO,YAAa,EAClBP,KAAKQ,aAAc,EACnBR,KAAKS,aAAe,OACpBT,KAAKU,UAAOL,EACZL,KAAKW,oBAAsB,EAC3BX,KAAKY,gBAAkB,EACvBZ,KAAKa,uBAAwB,EAC7Bb,KAAKc,4BAA6B,EAClCd,KAAKe,2BAA4B,EACjCf,KAAKgB,yBAA0B,EAC/BhB,KAAKiB,kCAAmC,EACxCjB,KAAKkB,8BAA+B,EACpClB,KAAKmB,SAAW,cAChBnB,KAAKoB,UAAOf,EACZL,KAAKqB,YAAShB,CAClB,CACAiB,uBAAAA,CAAwBC,IACfC,EAAAA,EAAAA,GAAuBxB,KAAMuB,EACtC,CACAE,oBAAAA,CAAqBF,GACbvB,KAAKqB,SACLrB,KAAKqB,OAAOK,UAAUpB,cAAgBiB,EAE9C,CACAI,iBAAAA,CAAkBJ,GACVvB,KAAKqB,SACLrB,KAAKqB,OAAOK,UAAUnB,WAAagB,EAE3C,CACAK,kBAAAA,CAAmBL,GACXvB,KAAKqB,SACLrB,KAAKqB,OAAOK,UAAUlB,YAAce,EAE5C,CACAM,mBAAAA,CAAoBN,QACFlB,IAAVkB,GAAuBvB,KAAKqB,SAC5BrB,KAAKqB,OAAOZ,aAAec,EAEnC,CACAO,WAAAA,CAAYP,GACJvB,KAAKqB,SACLrB,KAAKqB,OAAOX,KAAOa,EACnBvB,KAAKqB,OAAOU,UAAYR,EAEhC,CACAS,0BAAAA,CAA2BT,QACTlB,IAAVkB,GAAuBvB,KAAKqB,SAC5BrB,KAAKqB,OAAOV,oBAAsBY,EAE1C,CACAU,sBAAAA,CAAuBV,QACLlB,IAAVkB,GAAuBvB,KAAKqB,SAC5BrB,KAAKqB,OAAOT,gBAAkBW,EAEtC,CACAW,4BAAAA,CAA6BX,GACrBvB,KAAKqB,SACLrB,KAAKqB,OAAOc,gBAAgBC,OAASb,EAE7C,CACAc,iCAAAA,CAAkCd,GAC1BvB,KAAKqB,SACLrB,KAAKqB,OAAOc,gBAAkB,IACvBnC,KAAKqB,OAAOc,gBACfG,YAAaf,GAGzB,CACAgB,gCAAAA,CAAiChB,GACzBvB,KAAKqB,SACLrB,KAAKqB,OAAOc,gBAAkB,IACvBnC,KAAKqB,OAAOc,gBACfK,WAAYjB,GAGxB,CACAkB,8BAAAA,CAA+BlB,GACvBvB,KAAKqB,SACLrB,KAAKqB,OAAOc,gBAAkB,IACvBnC,KAAKqB,OAAOc,gBACfO,SAAUnB,GAGtB,CACAoB,uCAAAA,CAAwCpB,GAChCvB,KAAKqB,SACLrB,KAAKqB,OAAOc,gBAAkB,IACvBnC,KAAKqB,OAAOc,gBACfS,kBAAmBrB,GAG/B,CACAsB,mCAAAA,CAAoCtB,GAC5BvB,KAAKqB,SACLrB,KAAKqB,OAAOc,gBAAkB,IACvBnC,KAAKqB,OAAOc,gBACfW,cAAevB,GAG3B,CACAwB,eAAAA,CAAgBxB,QACElB,IAAVkB,GAAuBvB,KAAKqB,QAC5BrB,KAAKoB,KAAK4B,GAAGC,KAAKjD,KAAKkD,UAAW3B,EAE1C,CACA4B,WAAAA,CAAY5B,QACMlB,IAAVkB,GAAuBvB,KAAKqB,SAC5BrB,KAAKqB,OAAOD,KAAOG,EAE3B,CAMA,sBAAM6B,GACF,MAAMC,EAASrD,KAAKsD,gBACdjC,QAAekC,EAAAA,EAAAA,GAAmBF,GACxCrD,KAAKqB,OAASA,EACdrB,KAAKwD,gBACLxD,KAAKyD,sBACLzD,KAAKC,oBAAoByD,QACzBC,EAAAA,EAAAA,GAAa3D,KACjB,CACA4D,oBAAAA,IACIC,EAAAA,EAAAA,GAAqB7D,KACzB,CACA8D,MAAAA,GACI,OAAOC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,IAAMC,GAAQjE,KAAKkD,UAAYe,GACrD,CAMAT,aAAAA,GACIxD,KAAKqB,OAAO6C,UAAYlE,KAAKkD,SACjC,CACAI,aAAAA,GACI,MAAMD,EAAS,CAAC,EAyBhB,OAxBAA,EAAOlB,gBAAkB,CACrBC,OAAQpC,KAAKa,sBACbyB,YAAatC,KAAKc,2BAClB0B,WAAYxC,KAAKe,0BACjB2B,SAAU1C,KAAKgB,wBACf4B,kBAAmB5C,KAAKiB,iCACxB6B,cAAe9C,KAAKkB,8BAEpBlB,KAAKU,OACL2C,EAAO3C,KAAOV,KAAKU,KACnB2C,EAAOtB,UAAY/B,KAAKU,MAExBV,KAAKoB,OACLiC,EAAOjC,KAAOpB,KAAKoB,MAEnBpB,KAAKS,eACL4C,EAAO5C,aAAeT,KAAKS,cAE3BT,KAAKW,sBACL0C,EAAO1C,oBAAsBX,KAAKW,qBAElCX,KAAKY,kBACLyC,EAAOzC,gBAAkBZ,KAAKY,iBAE3ByC,CACX,CACAI,mBAAAA,GACI,MAAMJ,EAAS,CACX9C,WAAYP,KAAKO,WACjBC,YAAaR,KAAKQ,aAElBR,KAAKM,gBACL+C,EAAO/C,cAAgBN,KAAKM,eAEhCN,KAAKqB,OAAOK,UAAUyC,IAAId,EAC9B,CACA,MAAIY,GAAO,OAAOG,EAAAA,EAAAA,GAAWpE,KAAO,CACpC,mBAAWqE,GAAa,MAAO,CAC3B,iBAAoB,CAAC,2BACrB,cAAiB,CAAC,wBAClB,WAAc,CAAC,qBACf,YAAe,CAAC,sBAChB,aAAgB,CAAC,uBACjB,KAAQ,CAAC,eACT,oBAAuB,CAAC,8BACxB,gBAAmB,CAAC,0BACpB,sBAAyB,CAAC,gCAC1B,2BAA8B,CAAC,qCAC/B,0BAA6B,CAAC,oCAC9B,wBAA2B,CAAC,kCAC5B,iCAAoC,CAAC,2CACrC,6BAAgC,CAAC,uCACjC,SAAY,CAAC,mBACb,KAAQ,CAAC,eACV,GAEPzE,EAAe0E,MA7MK,oBCLpB,SAASC,EAAeC,GACpB,MAAMC,EAAYD,EAAQP,GAAGS,QAAQ,kBAAoBF,EAAQG,WACjE,GAAa,OAATF,QAAS,IAATA,GAAAA,EAAWpD,OAQX,OAPAmD,EAAQpD,KAAOqD,EAAUrD,KACzBqD,EAAUpD,OAAOuD,QAAUJ,EAAQtB,UAE9BuB,EAAUI,aACXJ,EAAUpD,OAAOwD,WAAaL,EAAQnD,OAAOX,KAC7C+D,EAAUpD,OAAOyD,gBAAkBN,EAAQnD,OAAOU,YAE/C,EAEX,GAAI0C,EAAW,CACX,MAAMM,EAAgBA,KAClBN,EAAUO,oBAAoB,oBAAqBD,GAAe,GAClEP,EAAQpD,KAAOqD,EAAUrD,KACzBqD,EAAUpD,OAAOuD,QAAUJ,EAAQtB,UAC9BuB,EAAUI,aACXJ,EAAUpD,OAAOwD,WAAaL,EAAQnD,OAAOX,KAC7C+D,EAAUpD,OAAOyD,gBAAkBN,EAAQnD,OAAOU,UACtD,EAGJ,OADA0C,EAAUQ,iBAAiB,oBAAqBF,GAAe,IACxD,CACX,CACA,OAAO,CACX,CAOA,SAASG,EAAWV,EAASW,GACrBC,MAAMC,QAAQF,GACdX,EAAQrE,cAAgB,IAAIqE,EAAQrE,iBAAkBgF,GAGtDX,EAAQrE,cAAcmF,KAAKH,EAEnC,CACA,SAASxB,EAAaa,GAClB,IAAIe,GAAyB,EAC7B,GAAKhB,EAAeC,GAiBf,KAAAgB,EACD,MAAMC,EAA0C,QAAnCD,EAAGhB,EAAQP,GAAGS,QAAQ,qBAAa,IAAAc,EAAAA,EAAIhB,EAAQP,GAAGS,QAAQ,gBACvE,GAAW,OAAPe,QAAO,IAAPA,GAAAA,EAASrE,KACToD,EAAQpD,KAAOqE,EAAQrE,UAEtB,GAAIqE,EAAS,CACd,MAAMC,EAAUA,KACZD,EAAQT,oBAAoB,wBAAyBU,GAAS,GAC9DlB,EAAQpD,KAAOqE,EAAQrE,IAAI,EAE/BqE,EAAQR,iBAAiB,wBAAyBS,GAAS,EAC/D,CACJ,KA7B8B,KAAAC,EAAAC,EAC1B,IAAIH,EAA0C,QAAnCE,EAAGnB,EAAQP,GAAGS,QAAQ,qBAAa,IAAAiB,EAAAA,EAAInB,EAAQP,GAAGS,QAAQ,gBAKrE,GAJKe,GAA+C,kBAA7BjB,EAAQpE,mBAC3BqF,EAAUI,SAASC,cAActB,EAAQpE,kBACzCmF,GAAyB,GAElB,QAAXK,EAAIH,SAAO,IAAAG,GAAPA,EAASxE,KAAM,KAAA2E,EACfvB,EAAQpD,KAAOqE,EAAQrE,KACvB,MAAM6C,EAAsB,QAApB8B,EAAGvB,EAAQtB,iBAAS,IAAA6C,EAAAA,EAAIvB,EAAQP,GACnCsB,GACDf,EAAQpD,KAAK4B,GAAGgD,IAAI/B,EAAIO,EAAQrD,SAExC,MACSsE,GA4EjB,SAA4BA,EAASjB,EAASe,GAC1C,MAAMG,EAAUA,KACZD,EAAQT,oBAAoB,wBAAyBU,GAAS,GAC9DlB,EAAQpD,KAAOqE,EAAQrE,KAClBmE,IACGf,EAAQtB,UACRsB,EAAQpD,KAAK4B,GAAGgD,IAAIxB,EAAQtB,UAAWsB,EAAQrD,UAG/CqD,EAAQpD,KAAK4B,GAAGgD,IAAIxB,EAAQP,GAAIO,EAAQrD,UAEhD,EAEJsE,EAAQR,iBAAiB,wBAAyBS,GAAS,EAC/D,CAzFYO,CAAmBR,EAASjB,EAASe,EAE7C,CAcJ,CACA,SAASW,EAAoB3E,GACzB,YAAiBlB,IAAVkB,GAAiC,OAAVA,GAA4B,KAAVA,CACpD,CACA,SAAS4E,EAAe5E,GACpB,OAAgB,MAATA,GAAiBA,EAAQ,IAAM,CAC1C,CACA,SAAS6E,EAAgBC,EAAQC,GAC7B,YAAoBjG,IAAZiG,GACJD,EAAOlF,WAAamF,EAAQnF,UAC5BkF,EAAOE,UAAYD,EAAQC,SAC3BF,EAAOG,OAASF,EAAQE,IAChC,CACA,SAASC,EAAqBC,EAAaC,GACvC,YAAyBtG,IAAjBsG,GACJA,EAAaC,oBAAsBF,EAAYE,mBAC/CD,EAAaE,SAASC,OAASJ,EAAYG,SAASC,MACpDH,EAAaE,SAASE,uBAClBL,EAAYG,SAASE,sBACzBJ,EAAaE,SAASG,wBAClBN,EAAYG,SAASG,uBACzBL,EAAaE,SAASC,OAASJ,EAAYG,SAASC,MACpDH,EAAaE,SAASI,mBAClBP,EAAYG,SAASI,gBACjC,CACA,SAASC,EAAmBC,EAAWC,GACnC,YAAuB/G,IAAf+G,GACJD,EAAUE,iBAAmBD,EAAWC,gBACxCF,EAAUG,WAAaF,EAAWE,UAClCH,EAAUI,QAAUH,EAAWG,KACvC,CAgBAC,eAAehG,EAAuBgD,EAASiD,GACjB,kBAAfA,EACPjD,EAAQpD,WAjBhBoG,eAA6BE,GACzB,MAAMjC,EAAUI,SAASC,cAAc4B,GACvC,aAAa,IAAIC,SAASC,IACtB,QAAsBvH,KAAX,OAAPoF,QAAO,IAAPA,OAAO,EAAPA,EAASrE,MACTwG,EAAQnC,EAAQrE,WAEf,GAAIqE,EAAS,CACd,MAAMC,EAAUA,KACZD,EAAQT,oBAAoB,wBAAyBU,GAAS,GAC9DkC,EAAQnC,EAAQrE,KAAK,EAEzBqE,EAAQR,iBAAiB,wBAAyBS,GAAS,EAC/D,IAER,CAG6BmC,CAAcJ,GAE9BjD,EAAQnD,SACbmD,EAAQpD,KAAOqG,EAAWrG,KAElC,kGC9HA,SAASyC,EAAqBW,GAEO,IAAAsD,EAAAC,EAD7BvD,EAAQtB,UACHsB,EAAQP,GAAG+D,cACRxD,EAAQpD,KACRoD,EAAQpD,KAAK4B,GAAGiF,OAAOzD,EAAQtB,WAEZ,QAAlB4E,EAAItD,EAAQnD,cAAM,IAAAyG,GAAdA,EAAgB1G,MACrBoD,EAAQnD,OAAOD,KAAK4B,GAAGiF,OAAOzD,EAAQtB,WAEtCsB,EAAQrE,eACRqE,EAAQrE,cAAc+H,SAAS/C,IAC3BA,EAAO8C,QAAQ,IAGvBzD,EAAQrE,cAAgB,GACV,QAAd4H,EAAAvD,EAAQnD,cAAM,IAAA0G,GAAdA,EAAgBI,WAIpBC,YAAW,KACsB,IAAAC,EAAAC,EAAxB9D,EAAQP,GAAG+D,cACRxD,EAAQpD,KACRoD,EAAQpD,KAAK4B,GAAGiF,OAAOzD,EAAQP,IAEZ,QAAlBoE,EAAI7D,EAAQnD,cAAM,IAAAgH,GAAdA,EAAgBjH,MACrBoD,EAAQnD,OAAOD,KAAK4B,GAAGiF,OAAOzD,EAAQP,IAEtCO,EAAQrE,eACRqE,EAAQrE,cAAc+H,SAAS/C,IAC3BA,EAAO8C,QAAQ,IAGvBzD,EAAQrE,cAAgB,GACV,QAAdmI,EAAA9D,EAAQnD,cAAM,IAAAiH,GAAdA,EAAgBH,UACpB,GACD,IAEX","sources":["../node_modules/@arcgis/map-components/dist/esm/arcgis-daylight.entry.js","../node_modules/@arcgis/map-components/dist/esm/component-utils-858627d8.js","../node_modules/@arcgis/map-components/dist/esm/disconnected-e221dd46.js"],"sourcesContent":["/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.29/esri/copyright.txt for details.\n * v4.29.10\n */\nimport { r as registerInstance, c as createEvent, h, g as getElement } from './index-8642bf82.js';\nimport { m as newWidgetsDaylight } from './index-f6afcedb.js';\nimport { r as referenceElementHelper, c as checkForView } from './component-utils-858627d8.js';\nimport { o as onDisconnectedHelper } from './disconnected-e221dd46.js';\n\nconst daylightCss = \"\";\n\nconst ArcgisDaylight = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.arcgisDaylightReady = createEvent(this, \"arcgisDaylightReady\", 7);\n        this._watchHandles = [];\n        this.referenceElement = undefined;\n        this.currentSeason = undefined;\n        this.dayPlaying = false;\n        this.yearPlaying = false;\n        this.dateOrSeason = \"date\";\n        this.icon = undefined;\n        this.playSpeedMultiplier = 1.0;\n        this.timeSliderSteps = 5;\n        this.visibleElementsHeader = true;\n        this.visibleElementsPlayButtons = true;\n        this.visibleElementsDatePicker = true;\n        this.visibleElementsTimezone = true;\n        this.visibleElementsSunLightingToggle = true;\n        this.visibleElementsShadowsToggle = true;\n        this.position = \"bottom-left\";\n        this.view = undefined;\n        this.widget = undefined;\n    }\n    referenceElementWatcher(value) {\n        void referenceElementHelper(this, value);\n    }\n    currentSeasonWatcher(value) {\n        if (this.widget) {\n            this.widget.viewModel.currentSeason = value;\n        }\n    }\n    dayPlayingWatcher(value) {\n        if (this.widget) {\n            this.widget.viewModel.dayPlaying = value;\n        }\n    }\n    yearPlayingWatcher(value) {\n        if (this.widget) {\n            this.widget.viewModel.yearPlaying = value;\n        }\n    }\n    dateOrSeasonWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.dateOrSeason = value;\n        }\n    }\n    iconWatcher(value) {\n        if (this.widget) {\n            this.widget.icon = value;\n            this.widget.iconClass = value;\n        }\n    }\n    playSpeedMultiplierWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.playSpeedMultiplier = value;\n        }\n    }\n    timeSliderStepsWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.timeSliderSteps = value;\n        }\n    }\n    visibleElementsHeaderWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements.header = value;\n        }\n    }\n    visibleElementsPlayButtonsWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                playButtons: value\n            };\n        }\n    }\n    visibleElementsDatePickerWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                datePicker: value\n            };\n        }\n    }\n    visibleElementsTimezoneWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                timezone: value\n            };\n        }\n    }\n    visibleElementsSunLightingToggleWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                sunLightingToggle: value\n            };\n        }\n    }\n    visibleElementsShadowsToggleWatcher(value) {\n        if (this.widget) {\n            this.widget.visibleElements = {\n                ...this.widget.visibleElements,\n                shadowsToggle: value\n            };\n        }\n    }\n    positionWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.view.ui.move(this.childElem, value);\n        }\n    }\n    viewWatcher(value) {\n        if (value !== undefined && this.widget) {\n            this.widget.view = value;\n        }\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Lifecycle\n    //\n    //--------------------------------------------------------------------------\n    async componentDidLoad() {\n        const params = this._createParams();\n        const widget = await newWidgetsDaylight(params);\n        this.widget = widget;\n        this._addContainer();\n        this._setViewModelParams();\n        this.arcgisDaylightReady.emit();\n        checkForView(this);\n    }\n    disconnectedCallback() {\n        onDisconnectedHelper(this);\n    }\n    render() {\n        return h(\"div\", { ref: (el) => (this.childElem = el) });\n    }\n    //--------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    //--------------------------------------------------------------------------\n    _addContainer() {\n        this.widget.container = this.childElem;\n    }\n    _createParams() {\n        const params = {};\n        params.visibleElements = {\n            header: this.visibleElementsHeader,\n            playButtons: this.visibleElementsPlayButtons,\n            datePicker: this.visibleElementsDatePicker,\n            timezone: this.visibleElementsTimezone,\n            sunLightingToggle: this.visibleElementsSunLightingToggle,\n            shadowsToggle: this.visibleElementsShadowsToggle\n        };\n        if (this.icon) {\n            params.icon = this.icon;\n            params.iconClass = this.icon;\n        }\n        if (this.view) {\n            params.view = this.view;\n        }\n        if (this.dateOrSeason) {\n            params.dateOrSeason = this.dateOrSeason;\n        }\n        if (this.playSpeedMultiplier) {\n            params.playSpeedMultiplier = this.playSpeedMultiplier;\n        }\n        if (this.timeSliderSteps) {\n            params.timeSliderSteps = this.timeSliderSteps;\n        }\n        return params;\n    }\n    _setViewModelParams() {\n        const params = {\n            dayPlaying: this.dayPlaying,\n            yearPlaying: this.yearPlaying\n        };\n        if (this.currentSeason) {\n            params.currentSeason = this.currentSeason;\n        }\n        this.widget.viewModel.set(params);\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"referenceElement\": [\"referenceElementWatcher\"],\n        \"currentSeason\": [\"currentSeasonWatcher\"],\n        \"dayPlaying\": [\"dayPlayingWatcher\"],\n        \"yearPlaying\": [\"yearPlayingWatcher\"],\n        \"dateOrSeason\": [\"dateOrSeasonWatcher\"],\n        \"icon\": [\"iconWatcher\"],\n        \"playSpeedMultiplier\": [\"playSpeedMultiplierWatcher\"],\n        \"timeSliderSteps\": [\"timeSliderStepsWatcher\"],\n        \"visibleElementsHeader\": [\"visibleElementsHeaderWatcher\"],\n        \"visibleElementsPlayButtons\": [\"visibleElementsPlayButtonsWatcher\"],\n        \"visibleElementsDatePicker\": [\"visibleElementsDatePickerWatcher\"],\n        \"visibleElementsTimezone\": [\"visibleElementsTimezoneWatcher\"],\n        \"visibleElementsSunLightingToggle\": [\"visibleElementsSunLightingToggleWatcher\"],\n        \"visibleElementsShadowsToggle\": [\"visibleElementsShadowsToggleWatcher\"],\n        \"position\": [\"positionWatcher\"],\n        \"view\": [\"viewWatcher\"]\n    }; }\n};\nArcgisDaylight.style = daylightCss;\n\nexport { ArcgisDaylight as arcgis_daylight };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.29/esri/copyright.txt for details.\n * v4.29.10\n */\nfunction checkForExpand(element) {\n    const expandRef = element.el.closest(\"arcgis-expand\") || element.expandElem;\n    if (expandRef?.widget) {\n        element.view = expandRef.view;\n        expandRef.widget.content = element.childElem;\n        // TODO: Update to be expandIcon = widget.icon, not ready yet in 4.27next\n        if (!expandRef.expandIcon) {\n            expandRef.widget.expandIcon = element.widget.icon;\n            expandRef.widget.expandIconClass = element.widget.iconClass;\n        }\n        return true;\n    }\n    if (expandRef) {\n        const widgetHandler = () => {\n            expandRef.removeEventListener(\"arcgisExpandReady\", widgetHandler, false);\n            element.view = expandRef.view;\n            expandRef.widget.content = element.childElem;\n            if (!expandRef.expandIcon) {\n                expandRef.widget.expandIcon = element.widget.icon;\n                expandRef.widget.expandIconClass = element.widget.iconClass;\n            }\n        };\n        expandRef.addEventListener(\"arcgisExpandReady\", widgetHandler, false);\n        return true;\n    }\n    return false;\n}\n\n//--------------------------------------------------------------------------\n//\n//  Public Methods\n//\n//--------------------------------------------------------------------------\nfunction addHandles(element, handle) {\n    if (Array.isArray(handle)) {\n        element._watchHandles = [...element._watchHandles, ...handle];\n    }\n    else {\n        element._watchHandles.push(handle);\n    }\n}\nfunction checkForView(element) {\n    let isUsingRefernceElement = false;\n    if (!checkForExpand(element)) {\n        let viewRef = element.el.closest(\"arcgis-map\") ?? element.el.closest(\"arcgis-scene\");\n        if (!viewRef && typeof element.referenceElement === \"string\") {\n            viewRef = document.querySelector(element.referenceElement);\n            isUsingRefernceElement = true;\n        }\n        if (viewRef?.view) {\n            element.view = viewRef.view;\n            const el = element.childElem ?? element.el;\n            if (!isUsingRefernceElement) {\n                element.view.ui.add(el, element.position);\n            }\n        }\n        else if (viewRef) {\n            waitForViewHandler(viewRef, element, isUsingRefernceElement);\n        }\n    }\n    else {\n        const viewRef = element.el.closest(\"arcgis-map\") ?? element.el.closest(\"arcgis-scene\");\n        if (viewRef?.view) {\n            element.view = viewRef.view;\n        }\n        else if (viewRef) {\n            const handler = () => {\n                viewRef.removeEventListener(\"arcgisViewReadyChange\", handler, false);\n                element.view = viewRef.view;\n            };\n            viewRef.addEventListener(\"arcgisViewReadyChange\", handler, false);\n        }\n    }\n}\nfunction isNullOrEmptyString(value) {\n    return value === undefined || value === null || value === \"\";\n}\nfunction isValidInteger(value) {\n    return value != null && value % 1 === 0;\n}\nfunction isNotSameCamera(camera, camera2) {\n    return (camera2 === undefined ||\n        camera.position !== camera2.position ||\n        camera.heading !== camera2.heading ||\n        camera.tilt !== camera2.tilt);\n}\nfunction isNotSameEnvironment(environment, environment2) {\n    return (environment2 === undefined ||\n        environment2.atmosphereEnabled !== environment.atmosphereEnabled ||\n        environment2.lighting.date !== environment.lighting.date ||\n        environment2.lighting.directShadowsEnabled !==\n            environment.lighting.directShadowsEnabled ||\n        environment2.lighting.cameraTrackingEnabled !==\n            environment.lighting.cameraTrackingEnabled ||\n        environment2.lighting.date !== environment.lighting.date ||\n        environment2.lighting.displayUTCOffset !==\n            environment.lighting.displayUTCOffset);\n}\nfunction isNotSameViewpoint(viewpoint, viewpoint2) {\n    return (viewpoint2 === undefined ||\n        viewpoint.targetGeometry !== viewpoint2.targetGeometry ||\n        viewpoint.rotation !== viewpoint2.rotation ||\n        viewpoint.scale !== viewpoint2.scale);\n}\nasync function updateForView(viewStr) {\n    const viewRef = document.querySelector(viewStr);\n    return await new Promise((resolve) => {\n        if (viewRef?.view !== undefined) {\n            resolve(viewRef.view);\n        }\n        else if (viewRef) {\n            const handler = () => {\n                viewRef.removeEventListener(\"arcgisViewReadyChange\", handler, false);\n                resolve(viewRef.view);\n            };\n            viewRef.addEventListener(\"arcgisViewReadyChange\", handler, false);\n        }\n    });\n}\nasync function referenceElementHelper(element, refElement) {\n    if (typeof refElement === \"string\") {\n        element.view = await updateForView(refElement);\n    }\n    else if (element.widget) {\n        element.view = refElement.view;\n    }\n}\n//--------------------------------------------------------------------------\n//\n//  Private Methods\n//\n//--------------------------------------------------------------------------\nfunction waitForViewHandler(viewRef, element, isUsingRefernceElement) {\n    const handler = () => {\n        viewRef.removeEventListener(\"arcgisViewReadyChange\", handler, false);\n        element.view = viewRef.view;\n        if (!isUsingRefernceElement) {\n            if (element.childElem) {\n                element.view.ui.add(element.childElem, element.position);\n            }\n            else {\n                element.view.ui.add(element.el, element.position);\n            }\n        }\n    };\n    viewRef.addEventListener(\"arcgisViewReadyChange\", handler, false);\n}\n\nexport { addHandles as a, isNotSameViewpoint as b, checkForView as c, checkForExpand as d, isNotSameCamera as e, isNotSameEnvironment as f, isValidInteger as g, isNullOrEmptyString as i, referenceElementHelper as r };\n","/*!\n * All material copyright Esri, All Rights Reserved, unless otherwise specified.\n * See https://js.arcgis.com/4.29/esri/copyright.txt for details.\n * v4.29.10\n */\nfunction onDisconnectedHelper(element) {\n    if (element.childElem) {\n        if (!element.el.isConnected) {\n            if (element.view) {\n                element.view.ui.remove(element.childElem);\n            }\n            else if (element.widget?.view) {\n                element.widget.view.ui.remove(element.childElem);\n            }\n            if (element._watchHandles) {\n                element._watchHandles.forEach((handle) => {\n                    handle.remove();\n                });\n            }\n            element._watchHandles = [];\n            element.widget?.destroy();\n        }\n    }\n    else {\n        setTimeout(() => {\n            if (!element.el.isConnected) {\n                if (element.view) {\n                    element.view.ui.remove(element.el);\n                }\n                else if (element.widget?.view) {\n                    element.widget.view.ui.remove(element.el);\n                }\n                if (element._watchHandles) {\n                    element._watchHandles.forEach((handle) => {\n                        handle.remove();\n                    });\n                }\n                element._watchHandles = [];\n                element.widget?.destroy();\n            }\n        }, 1000);\n    }\n}\n\nexport { onDisconnectedHelper as o };\n"],"names":["ArcgisDaylight","constructor","hostRef","registerInstance","this","arcgisDaylightReady","createEvent","_watchHandles","referenceElement","undefined","currentSeason","dayPlaying","yearPlaying","dateOrSeason","icon","playSpeedMultiplier","timeSliderSteps","visibleElementsHeader","visibleElementsPlayButtons","visibleElementsDatePicker","visibleElementsTimezone","visibleElementsSunLightingToggle","visibleElementsShadowsToggle","position","view","widget","referenceElementWatcher","value","referenceElementHelper","currentSeasonWatcher","viewModel","dayPlayingWatcher","yearPlayingWatcher","dateOrSeasonWatcher","iconWatcher","iconClass","playSpeedMultiplierWatcher","timeSliderStepsWatcher","visibleElementsHeaderWatcher","visibleElements","header","visibleElementsPlayButtonsWatcher","playButtons","visibleElementsDatePickerWatcher","datePicker","visibleElementsTimezoneWatcher","timezone","visibleElementsSunLightingToggleWatcher","sunLightingToggle","visibleElementsShadowsToggleWatcher","shadowsToggle","positionWatcher","ui","move","childElem","viewWatcher","componentDidLoad","params","_createParams","newWidgetsDaylight","_addContainer","_setViewModelParams","emit","checkForView","disconnectedCallback","onDisconnectedHelper","render","h","ref","el","container","set","getElement","watchers","style","checkForExpand","element","expandRef","closest","expandElem","content","expandIcon","expandIconClass","widgetHandler","removeEventListener","addEventListener","addHandles","handle","Array","isArray","push","isUsingRefernceElement","_element$el$closest2","viewRef","handler","_element$el$closest","_viewRef","document","querySelector","_element$childElem","add","waitForViewHandler","isNullOrEmptyString","isValidInteger","isNotSameCamera","camera","camera2","heading","tilt","isNotSameEnvironment","environment","environment2","atmosphereEnabled","lighting","date","directShadowsEnabled","cameraTrackingEnabled","displayUTCOffset","isNotSameViewpoint","viewpoint","viewpoint2","targetGeometry","rotation","scale","async","refElement","viewStr","Promise","resolve","updateForView","_element$widget","_element$widget2","isConnected","remove","forEach","destroy","setTimeout","_element$widget3","_element$widget4"],"sourceRoot":""}