{"version":3,"file":"static/js/81381.b1d38725.chunk.js","mappings":";0IAWO,MAAMA,EACU,uBAGVC,EAAmDC,IAAA,IAAC,MAC/DC,EAAK,OACLC,EAAM,KACNC,EAAI,QACJC,GACDJ,EAAA,OACCK,EAAAA,EAAAA,GAAA,OAAKC,MAAOR,IACVO,EAAAA,EAAAA,GAAA,yBAAuBF,KAAMA,EAAMF,MAAOA,EAAOC,OAAQA,GACtDE,GAEC,6MCzBD,MAAMN,EACL,OADKA,EAEI,iBAFJA,EAGH,SAHGA,EAIF,UCwCX,SAASS,EAASC,GAChB,MAAiC,mBAA1BA,EAAcC,OACvB,OAgBaC,GAAMC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,qIA2FT,KAAAC,oBAAsB,IAAIC,IAE1B,KAAAC,kBAAmBC,EAAAA,EAAAA,GAAe,YAAY,IAAMC,KAAKC,2BAoEzD,KAAAC,2BAA6B,KACnC,MAAMC,EAAWH,KAAKI,SAASC,gBAAgB,GAC/CL,KAAKM,uBAAuBH,GAC5BI,uBAAsB,IAAMP,KAAKQ,mBAAkB,EAmD7C,KAAAP,uBAAyB,KAC/B,MAAMQ,EAAmBC,MAAMC,KAC7BX,KAAKY,GAAGC,UACRC,QACCC,GAA4B,mBAAlBA,EAAMvB,SAAkD,yBAAlBuB,EAAMvB,UAGzDQ,KAAKgB,sBAELP,EAAiBQ,SACd1B,IAAa,IAAA2B,EAAA,OAAkB,QAAlBA,EAAKlB,KAAKI,gBAAQ,IAAAc,OAAA,EAAbA,EAAeC,OAAOnB,KAAKoB,gBAAgB7B,GAAe,GAC9E,EAQK,KAAA8B,eAAkBC,IACxBtB,KAAKI,SAAWkB,EAChBtB,KAAKC,yBAEL,MAAME,EAAWH,KAAKI,SAASC,gBAAgB,GAC/CL,KAAKM,uBAAuBH,EAAS,EAgE/B,KAAAK,gBAAkB,KACxBR,KAAKuB,oBAAoBC,MAAM,iBApSG,8HA6BA,aAKI,gBAGE,kBAGD,2CAuBD,OApBxCC,YAAAA,CAAaC,GACG1B,KAAKY,GAAGe,iBAAiB,kBACjCV,SAASW,GAAUA,EAAKzB,SAAWyB,EAAKF,QAAUA,IAW1DG,qBAAAA,CAAsBC,GACpB9B,KAAK0B,MAAsB,OAAdI,QAAc,IAAdA,OAAc,EAAdA,EAAgBJ,MAkC/BK,iBAAAA,GAAiB,IAAAC,EACf,MAAM,GAAEpB,GAAOZ,KAEM,QAArBgC,EAAAhC,KAAKF,wBAAgB,IAAAkC,GAArBA,EAAuBC,QAAQrB,EAAI,CACjCsB,SAAS,EACTC,WAAW,KAGbC,EAAAA,EAAAA,GAAmBpC,OACnBqC,EAAAA,EAAAA,GAAarC,OACbsC,EAAAA,EAAAA,GAAYtC,MAGduC,oBAAAA,GAAoB,IAAAC,EACG,QAArBA,EAAAxC,KAAKF,wBAAgB,IAAA0C,GAArBA,EAAuBC,cACvBC,EAAAA,EAAAA,GAAsB1C,OACtB2C,EAAAA,EAAAA,GAAgB3C,OAChB4C,EAAAA,EAAAA,GAAe5C,MAGjB6C,iBAAAA,IACEC,EAAAA,EAAAA,GAAuB9C,MAGzB+C,gBAAAA,GAAgB,IAAAC,EAAAC,GACdC,EAAAA,EAAAA,GAAmBlD,OACnBmD,EAAAA,EAAAA,GAA4BnD,KAAgC,QAA5BgD,EAAqB,QAArBC,EAAEjD,KAAK8B,sBAAc,IAAAmB,OAAA,EAAnBA,EAAqBvB,aAAK,IAAAsB,EAAAA,EAAI,IAGlEI,kBAAAA,IACEC,EAAAA,EAAAA,GAAsBrD,MAWxB,cAAMsD,SACEC,EAAAA,EAAAA,GAAmBvD,OAEzBwD,EAAAA,EAAAA,GAAaxD,KAAKI,UAsBVqD,yBAAAA,CAA0BC,GAClCA,EAAMC,kBAEN,MAAMpE,EAAgBmE,EAAME,OACtBC,EAAW7D,KAAKJ,oBAAoBkE,IAAIvE,GAEzCsE,IAIL7D,KAAK+D,oBAAoBxE,EAAesE,GAEpCvE,EAASC,IAAkBA,EAAcY,WAC3CH,KAAKgE,kBAAkBzE,GACvBS,KAAK8B,eAAiBvC,IAU1B0E,YAAAA,GACEjE,KAAKsD,WAGCS,mBAAAA,CACNxE,EACA2E,GAKA,GAHAA,EAAoBC,SAAW5E,EAAc4E,SAC7CD,EAAoBE,MAAQ7E,EAAc6E,MAEtC9E,EAASC,GAAgB,CAC3B,MAAM8E,EAASH,EACfG,EAAOlE,SAAWZ,EAAcY,SAChCkE,EAAO3C,MAAQnC,EAAcmC,MAI7B2C,EAAOC,UAAY/E,EAAc6E,OAkB7BpD,mBAAAA,GACNhB,KAAKJ,oBAAoBqB,SAASS,GAAUA,EAAM6C,WAClDvE,KAAKJ,oBAAoB4E,QAWnBlE,sBAAAA,CAAuBmE,GAC7B,IAAKA,EACH,OAGF,IAAIC,EAEJ1E,KAAKJ,oBAAoBqB,SAAQ,CAACiD,EAAqB3E,KACjDD,EAASC,IAAkB2E,IAAwBO,IACrDlF,EAAcY,UAAW,EACzBuE,EAAiBnF,EACjBS,KAAKgE,kBAAkBzE,OAIvBmF,IACF1E,KAAK8B,eAAiB4C,GAIlBtD,eAAAA,CACN7B,GAEA,GAAID,EAASC,GAAgB,CAC3B,MAAM8E,EAASM,SAASC,cAAc,UAItC,OAHA5E,KAAK+D,oBAAoBxE,EAAe8E,GACxCrE,KAAKJ,oBAAoBiF,IAAItF,EAAe8E,GAErCA,EAGT,GA/RJ,SACE9E,GAEA,MAAiC,yBAA1BA,EAAcC,OACvB,CA2RQsF,CAAcvF,GAAgB,CAChC,MAAMwF,EAAQJ,SAASC,cAAc,YAarC,OAZA5E,KAAK+D,oBAAoBxE,EAAewF,GAExCrE,MAAMC,KAAKpB,EAAcsB,UAAwDI,SAC9EoD,IACC,MAAMI,EAAezE,KAAKoB,gBAAgBiD,GAC1CU,EAAM5D,OAAOsD,GACbzE,KAAKJ,oBAAoBiF,IAAItF,EAAekF,EAAa,IAI7DzE,KAAKJ,oBAAoBiF,IAAItF,EAAewF,GAErCA,EAGT,MAAM,IAAIC,MAAM,sCAGVhB,iBAAAA,CAAkBiB,GACxBjF,KAAKY,GAAGe,iBAA2C,kBAAkBV,SAASoD,IACxEA,IAAWY,IAIfZ,EAAOlE,UAAW,EAAK,IAc3B+E,aAAAA,GACE,OACE9F,EAAAA,EAAAA,GAAA,OAAKC,MAAOR,IACVO,EAAAA,EAAAA,GAAA,gBAAcC,MAAOR,EAAUK,KAAK,eAAeF,OAAOmG,EAAAA,EAAAA,GAAanF,KAAKhB,UAKlFoG,MAAAA,GACE,MAAM,SAAEjB,GAAanE,KAErB,OACEZ,EAAAA,EAAAA,GAACiG,EAAAA,GAAI,MACHjG,EAAAA,EAAAA,GAACkG,EAAAA,EAAoB,CAACnB,SAAUA,IAC9B/E,EAAAA,EAAAA,GAAA,OAAKC,MAAOR,IACVO,EAAAA,EAAAA,GAAA,wBACcmG,EAAAA,EAAAA,GAAavF,MACzBX,MAAOR,EACPsF,SAAUA,EACVqB,SAAUxF,KAAKE,2BAEfuF,IAAKzF,KAAKqB,iBAEVjC,EAAAA,EAAAA,GAAA,cAEDY,KAAKkF,iBACN9F,EAAAA,EAAAA,GAACsG,EAAAA,EAAmB,CAACC,UAAW3F,QAEjCA,KAAK4F,mBAAqC,YAAhB5F,KAAKf,QAC9BG,EAAAA,EAAAA,GAACN,EAAAA,EAAU,CACTI,KAAMc,KAAK6F,eACX1G,QAASa,KAAK4F,kBACd5G,MAAOgB,KAAKhB,MACZC,OAAQe,KAAKf,SAEb,mJC1ZI,w1JCAX,MAAMJ,EAEF,WCaEiH,EAA6C,CAAC,EAQ9CC,EAAyD,CAAC,EAE1DC,EAAmC,CAC9CC,EAAG,GACHC,EAAG,GACHC,EAAG,IAGEC,eAAeC,EAAStH,GAAgC,IAA/B,KAAEG,EAAI,MAAEF,GAAuBD,EAC7D,MAAMuH,EAAON,EAAUhH,GACjBuH,WA8B0BA,GAChC,MAAMC,GAAqBC,MAAMC,OAAOH,EAAKI,OAAO,KAC9CC,EAAQL,EAAKM,MAAM,KAGzB,GAFmBD,EAAME,OAAS,EAElB,CACd,MAAMC,EAA6B,SAEnCR,EAAOK,EACJI,KAAI,CAACC,EAAMC,IACHD,EAAKE,QAAQJ,GAA4B,SAAkBK,EAAOC,GAGvE,OAFwC,IAAdH,GAA8B,IAAXG,EAGpCD,EAGFA,EAAME,mBAGhBC,KAAK,IAGV,OAAOf,EAAoB,IAAHgB,OAAOjB,GAASA,CAC1C,CAtDekB,CAAkBvI,GACzBwI,EAA0C,MAAjCnB,EAAKI,OAAOJ,EAAKO,OAAS,GACnCa,EAAWD,EAASnB,EAAKqB,UAAU,EAAGrB,EAAKO,OAAS,GAAKP,EACzDsB,EAAK,GAAHL,OAAMG,GAAQH,OAAGlB,GAAIkB,OAAGE,EAAS,IAAM,IAE/C,GAAI5B,EAAU+B,GACZ,OAAO/B,EAAU+B,GAEd9B,EAAa8B,KAChB9B,EAAa8B,GAAMC,OAAMC,EAAAA,EAAAA,IAAa,iBAADP,OAAkBK,EAAE,WACtDG,MAAMC,GAASA,EAAKC,SACpBC,OAAM,KACLC,QAAQC,MAAM,IAADb,OAAKK,EAAE,0CACb,OAIb,MAAMS,QAAavC,EAAa8B,GAGhC,OAFA/B,EAAU+B,GAAMS,EAETA,CACT,CCtDA,MCcaC,GAAI7I,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,+EAeA,mBAQL,aAQK,6DAkFG,EAlElBoC,iBAAAA,GACE/B,KAAKwI,kBAAiB,KACpBxI,KAAKyI,SAAU,EACfzI,KAAK0I,kBAAkB,IAI3BnG,oBAAAA,GAAoB,IAAAoG,EACO,QAAzBA,EAAA3I,KAAK4I,4BAAoB,IAAAD,GAAzBA,EAA2BlG,aAC3BzC,KAAK4I,qBAAuB,KAG9B,uBAAM/F,GACJ7C,KAAK0I,mBAGPtD,MAAAA,GACE,MAAM,GAAExE,EAAE,QAAEiI,EAAO,SAAEC,EAAQ,MAAE9J,EAAK,UAAE+J,GAAc/I,KAC9CgJ,GAAMC,EAAAA,EAAAA,GAAcrI,GACpB0F,EAAON,EAAUhH,GACjBkK,IAAaH,EACbI,EAAQ,GAAG3B,OAAOsB,GAAY,IACpC,OACE1J,EAAAA,EAAAA,GAACiG,EAAAA,GAAI,gBACU+D,EAAAA,EAAAA,IAAeF,GAAS,aACzBA,EAAWH,EAAY,KACnCM,KAAMH,EAAW,MAAQ,OAEzB9J,EAAAA,EAAAA,GAAA,qBACc,OACZC,MAAO,CACL,CAACR,GAAsB,QAARmK,GAAiBH,EAChCS,KAAK,GAEPC,KAAK,eACLC,OAAO,OACPC,QAAO,OAAAjC,OAASlB,EAAI,KAAAkB,OAAIlB,GACxBoD,MAAM,OACNC,MAAM,8BAELR,EAAMnC,KAAKsB,GACM,kBAATA,GACLlJ,EAAAA,EAAAA,GAAA,QAAMwK,EAAGtB,KAETlJ,EAAAA,EAAAA,GAAA,QAAMwK,EAAGtB,EAAKsB,EAAGC,QAAS,YAAavB,EAAOA,EAAKuB,QAAU,QAgCjE,sBAAMnB,GACZ,MAAM,KAAExJ,EAAI,MAAEF,EAAK,QAAEyJ,GAAYzI,KAEjC,IAAK8J,EAAAA,GAAMC,YAAc7K,IAASuJ,EAChC,OAGF,MAAMK,QAAiBzC,EAAU,CAAEnH,OAAMF,UAGrCE,IAASc,KAAKd,OAIlBc,KAAK8I,SAAWA,GAGVN,gBAAAA,CAAiBwB,GACvBhK,KAAK4I,sBAAuB7I,EAAAA,EAAAA,GAC1B,gBACCkK,IACCA,EAAQhJ,SAASiJ,IACXA,EAAMC,iBACRnK,KAAK4I,qBAAqBnG,aAC1BzC,KAAK4I,qBAAuB,KAC5BoB,OAEF,GAEJ,CAAEI,WAAY,SAGXpK,KAAK4I,qBAKV5I,KAAK4I,qBAAqB3G,QAAQjC,KAAKY,IAJrCoJ,8KD1KU,w0BEAJK,oCAAZ,SAAYA,GACVA,EAAA,qBACAA,EAAA,oCACAA,EAAA,kBACD,CAJD,CAAYA,IAAAA,EAAkB,KCA9B,MCaaC,GAAY5K,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,wGAWgB,aAGC,gBAGE,OAI1C4K,YAAAA,GACEvK,KAAKwK,eAAgBC,EAAAA,EAAAA,GAAiBJ,EAAoBrK,KAAKd,KAAMc,KAAKf,QAS5E8C,iBAAAA,GACE/B,KAAKwK,eAAgBC,EAAAA,EAAAA,GAAiBJ,EAAoBrK,KAAKd,KAAMc,KAAKf,QAG5EmG,MAAAA,GACE,MAAMsF,EAAS1K,KAAKY,GAAG8J,OACvB,OACEtL,EAAAA,EAAAA,GAACiG,EAAAA,GAAI,2BAA0BqF,GAC5B1K,KAAK2K,WAAW3K,KAAKwK,gBACtBpL,EAAAA,EAAAA,GAAA,cAsBEuL,UAAAA,CAAWhD,GACjB,GAAIA,EACF,OACEvI,EAAAA,EAAAA,GAAA,gBACEC,MAAM,6BACNwJ,QAAS7I,KAAK4K,YACd1L,KAAMyI,EACN3I,MAAM,gIDlFQ,wgEE+CRe,EACd8K,EACAb,EACAc,GAEA,IAAKhB,EAAAA,GAAMC,UACT,OAGF,MAAMgB,EAIR,SAA6CF,GAE3C,MAAMG,UAAiCC,OAAOC,iBAQ5CC,WAAAA,CAAYnB,GACVoB,MAAMpB,GARA,KAAAqB,cAGH,GAMHrL,KAAKgK,SAAWA,EAGlB/H,OAAAA,CAAQ2B,EAAckH,GAGpB,OAFA9K,KAAKqL,cAAcC,KAAK,CAAE1H,SAAQkH,YAE3BM,MAAMnJ,QAAQ2B,EAAQkH,GAG/BS,SAAAA,CAAU3H,GACR,MAAM4H,EAAqBxL,KAAKqL,cAAcvK,QAAQ2K,GAAaA,EAAS7H,SAAWA,IACvF5D,KAAKqL,cAAgB,GACrBrL,KAAKgK,SAASoB,MAAMM,cAAe1L,MACnCA,KAAKyC,aACL+I,EAAmBvK,SAASwK,GAAazL,KAAKiC,QAAQwJ,EAAS7H,OAAQ6H,EAASX,YAIpF,MAEa,iBAATD,EACII,OAAOU,qBACE,aAATd,EACEG,EACAC,OAAOW,cAGnB,CA3CmBC,CAAehB,GAChC,OAAO,IAAIE,EAASf,EAAiBc,EACvC","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/select/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/select/select.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/select/select.scss?tag=calcite-select&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/interfaces.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/observers.ts"],"sourcesContent":["import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: string | boolean;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  icon,\n  message,\n}) => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message icon={icon} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export const CSS = {\n  icon: \"icon\",\n  iconContainer: \"icon-container\",\n  select: \"select\",\n  wrapper: \"wrapper\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { focusElement } from \"../../utils/dom\";\nimport {\n  afterConnectDefaultValueSet,\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, LabelableComponent, getLabelText } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale, Status, Width } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\n\ntype OptionOrGroup = HTMLCalciteOptionElement | HTMLCalciteOptionGroupElement;\ntype NativeOptionOrGroup = HTMLOptionElement | HTMLOptGroupElement;\n\nfunction isOption(optionOrGroup: OptionOrGroup): optionOrGroup is HTMLCalciteOptionElement {\n  return optionOrGroup.tagName === \"CALCITE-OPTION\";\n}\n\nfunction isOptionGroup(\n  optionOrGroup: OptionOrGroup,\n): optionOrGroup is HTMLCalciteOptionGroupElement {\n  return optionOrGroup.tagName === \"CALCITE-OPTION-GROUP\";\n}\n\n/**\n * @slot - A slot for adding `calcite-option`s.\n */\n@Component({\n  tag: \"calcite-select\",\n  styleUrl: \"select.scss\",\n  shadow: true,\n})\nexport class Select\n  implements LabelableComponent, FormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * Accessible name for the component.\n   *\n   */\n  @Prop() label!: string;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /** The component's `selectedOption` value. */\n  @Prop({ mutable: true }) value: string = null;\n\n  @Watch(\"value\")\n  valueHandler(value: string): void {\n    const items = this.el.querySelectorAll(\"calcite-option\");\n    items.forEach((item) => (item.selected = item.value === value));\n  }\n\n  /**\n   * The component's selected option `HTMLElement`.\n   *\n   * @readonly\n   */\n  @Prop({ mutable: true }) selectedOption: HTMLCalciteOptionElement;\n\n  @Watch(\"selectedOption\")\n  selectedOptionHandler(selectedOption: HTMLCalciteOptionElement): void {\n    this.value = selectedOption?.value;\n  }\n\n  /**\n   * Specifies the width of the component.\n   */\n  @Prop({ reflect: true }) width: Width = \"auto\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSelectElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Select[\"value\"];\n\n  private componentToNativeEl = new Map<OptionOrGroup, NativeOptionOrGroup>();\n\n  private mutationObserver = createObserver(\"mutation\", () => this.populateInternalSelect());\n\n  private selectEl: HTMLSelectElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    const { el } = this;\n\n    this.mutationObserver?.observe(el, {\n      subtree: true,\n      childList: true,\n    });\n\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    afterConnectDefaultValueSet(this, this.selectedOption?.value ?? \"\");\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.selectEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the `selectedOption` changes.\n   */\n  @Event({ cancelable: false }) calciteSelectChange: EventEmitter<void>;\n\n  private handleInternalSelectChange = (): void => {\n    const selected = this.selectEl.selectedOptions[0];\n    this.selectFromNativeOption(selected);\n    requestAnimationFrame(() => this.emitChangeEvent());\n  };\n\n  @Listen(\"calciteInternalOptionChange\")\n  @Listen(\"calciteInternalOptionGroupChange\")\n  protected handleOptionOrGroupChange(event: CustomEvent): void {\n    event.stopPropagation();\n\n    const optionOrGroup = event.target as OptionOrGroup;\n    const nativeEl = this.componentToNativeEl.get(optionOrGroup);\n\n    if (!nativeEl) {\n      return;\n    }\n\n    this.updateNativeElement(optionOrGroup, nativeEl);\n\n    if (isOption(optionOrGroup) && optionOrGroup.selected) {\n      this.deselectAllExcept(optionOrGroup);\n      this.selectedOption = optionOrGroup;\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  private updateNativeElement(\n    optionOrGroup: OptionOrGroup,\n    nativeOptionOrGroup: NativeOptionOrGroup,\n  ): void {\n    nativeOptionOrGroup.disabled = optionOrGroup.disabled;\n    nativeOptionOrGroup.label = optionOrGroup.label;\n\n    if (isOption(optionOrGroup)) {\n      const option = nativeOptionOrGroup as HTMLOptionElement;\n      option.selected = optionOrGroup.selected;\n      option.value = optionOrGroup.value;\n\n      // need to set innerText for mobile\n      // see https://stackoverflow.com/questions/35021620/ios-safari-not-showing-all-options-for-select-menu/41749701\n      option.innerText = optionOrGroup.label;\n    }\n  }\n\n  private populateInternalSelect = (): void => {\n    const optionsAndGroups = Array.from(\n      this.el.children as HTMLCollectionOf<OptionOrGroup | HTMLSlotElement>,\n    ).filter(\n      (child) => child.tagName === \"CALCITE-OPTION\" || child.tagName === \"CALCITE-OPTION-GROUP\",\n    ) as OptionOrGroup[];\n\n    this.clearInternalSelect();\n\n    optionsAndGroups.forEach(\n      (optionOrGroup) => this.selectEl?.append(this.toNativeElement(optionOrGroup)),\n    );\n  };\n\n  private clearInternalSelect(): void {\n    this.componentToNativeEl.forEach((value) => value.remove());\n    this.componentToNativeEl.clear();\n  }\n\n  private storeSelectRef = (node: HTMLSelectElement): void => {\n    this.selectEl = node;\n    this.populateInternalSelect();\n\n    const selected = this.selectEl.selectedOptions[0];\n    this.selectFromNativeOption(selected);\n  };\n\n  private selectFromNativeOption(nativeOption: HTMLOptionElement): void {\n    if (!nativeOption) {\n      return;\n    }\n\n    let futureSelected: HTMLCalciteOptionElement;\n\n    this.componentToNativeEl.forEach((nativeOptionOrGroup, optionOrGroup) => {\n      if (isOption(optionOrGroup) && nativeOptionOrGroup === nativeOption) {\n        optionOrGroup.selected = true;\n        futureSelected = optionOrGroup;\n        this.deselectAllExcept(optionOrGroup as HTMLCalciteOptionElement);\n      }\n    });\n\n    if (futureSelected) {\n      this.selectedOption = futureSelected;\n    }\n  }\n\n  private toNativeElement(\n    optionOrGroup: HTMLCalciteOptionElement | HTMLCalciteOptionGroupElement,\n  ): NativeOptionOrGroup {\n    if (isOption(optionOrGroup)) {\n      const option = document.createElement(\"option\");\n      this.updateNativeElement(optionOrGroup, option);\n      this.componentToNativeEl.set(optionOrGroup, option);\n\n      return option;\n    }\n\n    if (isOptionGroup(optionOrGroup)) {\n      const group = document.createElement(\"optgroup\");\n      this.updateNativeElement(optionOrGroup, group);\n\n      Array.from(optionOrGroup.children as HTMLCollectionOf<HTMLCalciteOptionElement>).forEach(\n        (option) => {\n          const nativeOption = this.toNativeElement(option);\n          group.append(nativeOption);\n          this.componentToNativeEl.set(optionOrGroup, nativeOption);\n        },\n      );\n\n      this.componentToNativeEl.set(optionOrGroup, group);\n\n      return group;\n    }\n\n    throw new Error(\"unsupported element child provided\");\n  }\n\n  private deselectAllExcept(except: HTMLCalciteOptionElement): void {\n    this.el.querySelectorAll<HTMLCalciteOptionElement>(\"calcite-option\").forEach((option) => {\n      if (option === except) {\n        return;\n      }\n\n      option.selected = false;\n    });\n  }\n\n  private emitChangeEvent = (): void => {\n    this.calciteSelectChange.emit();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n\n  renderChevron(): VNode {\n    return (\n      <div class={CSS.iconContainer}>\n        <calcite-icon class={CSS.icon} icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </div>\n    );\n  }\n\n  render(): VNode {\n    const { disabled } = this;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={disabled}>\n          <div class={CSS.wrapper}>\n            <select\n              aria-label={getLabelText(this)}\n              class={CSS.select}\n              disabled={disabled}\n              onChange={this.handleInternalSelectChange}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.storeSelectRef}\n            >\n              <slot />\n            </select>\n            {this.renderChevron()}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-select-font-size: The font size of `calcite-option`s in the component.\n * @prop --calcite-select-spacing: The padding around the selected option text.\n */\n\n:host {\n  @extend %component-spacing;\n  @apply flex flex-col;\n}\n\n.wrapper {\n  @apply relative flex items-stretch;\n  inline-size: var(--select-width);\n}\n\n@include disabled();\n\n:host([scale=\"s\"]) {\n  --calcite-select-font-size: theme(\"fontSize.n2h\");\n  --calcite-select-spacing-inline: theme(\"spacing.2\") theme(\"spacing.8\");\n\n  .wrapper {\n    @apply h-6;\n  }\n\n  .icon-container {\n    @apply px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-select-font-size: theme(\"fontSize.n1h\");\n  --calcite-select-spacing-inline: theme(\"spacing.3\") theme(\"spacing.10\");\n\n  .wrapper {\n    @apply h-8;\n  }\n\n  .icon-container {\n    @apply px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-select-font-size: theme(\"fontSize.0h\");\n  --calcite-select-spacing-inline: theme(\"spacing.4\") theme(\"spacing.12\");\n\n  .wrapper {\n    block-size: 44px;\n  }\n\n  .icon-container {\n    @apply px-4;\n  }\n}\n\n:host([width=\"auto\"]) {\n  @apply w-auto;\n}\n\n:host([width=\"half\"]) {\n  @apply w-1/2;\n}\n\n:host([width=\"full\"]) {\n  @apply w-full;\n}\n\n.select {\n  @apply bg-foreground-1 border-color-input text-color-2 font-inherit focus-base m-0 box-border w-full cursor-pointer appearance-none truncate rounded-none border border-solid;\n  font-size: var(--calcite-select-font-size);\n  padding-inline: var(--calcite-select-spacing-inline);\n  border-inline-end-width: theme(\"borderWidth.0\");\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:hover {\n    @apply bg-foreground-2;\n  }\n}\n\n// override user agent stylesheet disabled styling\nselect:disabled {\n  @apply border-color-input bg-opacity-100;\n}\n\n.icon-container {\n  @apply border-color-input text-color-2 pointer-events-none absolute inset-y-0 flex items-center border-0 border-solid bg-transparent;\n  inset-inline-end: theme(\"inset.0\");\n  border-inline-width: theme(\"borderWidth.0\") theme(\"borderWidth.DEFAULT\");\n}\n\n:host([status=\"invalid\"]) {\n  select,\n  .icon-container {\n    @apply border-color-danger;\n  }\n\n  select:focus,\n  .icon-container:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n.select:focus ~ .icon-container {\n  @apply border-color-transparent;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\n\nexport interface FetchIconProps {\n  icon: string;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nexport async function fetchIcon({ icon, scale }: FetchIconProps): Promise<CalciteIconPath> {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  const id = `${iconName}${size}${filled ? \"F\" : \"\"}`;\n\n  if (iconCache[id]) {\n    return iconCache[id];\n  }\n  if (!requestCache[id]) {\n    requestCache[id] = fetch(getAssetPath(`./assets/icon/${id}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${id}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[id];\n  iconCache[id] = path;\n\n  return path;\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Build, Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, scaleToPx } from \"./utils\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: string = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.waitUntilVisible(() => {\n      this.visible = true;\n      this.loadIconPathData();\n    });\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.loadIconPathData();\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!Build.isBrowser || !icon || !visible) {\n      return;\n    }\n\n    const pathData = await fetchIcon({ icon, scale });\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export enum StatusIconDefaults {\n  valid = \"check-circle\",\n  invalid = \"exclamation-mark-triangle\",\n  idle = \"information\",\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: boolean | string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: string): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","import { Build } from \"@stencil/core\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve(target: Node): void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!Build.isBrowser) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n"],"names":["CSS","Validation","_ref","scale","status","icon","message","h","class","isOption","optionOrGroup","tagName","Select","proxyCustomElement","HTMLElement","componentToNativeEl","Map","mutationObserver","createObserver","this","populateInternalSelect","handleInternalSelectChange","selected","selectEl","selectedOptions","selectFromNativeOption","requestAnimationFrame","emitChangeEvent","optionsAndGroups","Array","from","el","children","filter","child","clearInternalSelect","forEach","_this$selectEl","append","toNativeElement","storeSelectRef","node","calciteSelectChange","emit","valueHandler","value","querySelectorAll","item","selectedOptionHandler","selectedOption","connectedCallback","_this$mutationObserve","observe","subtree","childList","connectInteractive","connectLabel","connectForm","disconnectedCallback","_this$mutationObserve2","disconnect","disconnectInteractive","disconnectLabel","disconnectForm","componentWillLoad","setUpLoadableComponent","componentDidLoad","_this$selectedOption$","_this$selectedOption","setComponentLoaded","afterConnectDefaultValueSet","componentDidRender","updateHostInteraction","setFocus","componentFocusable","focusElement","handleOptionOrGroupChange","event","stopPropagation","target","nativeEl","get","updateNativeElement","deselectAllExcept","onLabelClick","nativeOptionOrGroup","disabled","label","option","innerText","remove","clear","nativeOption","futureSelected","document","createElement","set","isOptionGroup","group","Error","except","renderChevron","getIconScale","render","Host","InteractiveContainer","getLabelText","onChange","ref","HiddenFormInputSlot","component","validationMessage","validationIcon","iconCache","requestCache","scaleToPx","s","m","l","async","fetchIcon","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","concat","normalizeIconName","filled","iconName","substring","id","fetch","getAssetPath","then","resp","json","catch","console","error","path","Icon","waitUntilVisible","visible","loadIconPathData","_this$intersectionObs","intersectionObserver","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","toAriaBoolean","role","svg","fill","height","viewBox","width","xmlns","d","opacity","Build","isBrowser","callback","entries","entry","isIntersecting","rootMargin","StatusIconDefaults","InputMessage","handleIconEl","requestedIcon","setRequestedIcon","hidden","renderIcon","iconFlipRtl","type","options","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","push","unobserve","newObservedEntries","observed","takeRecords","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}