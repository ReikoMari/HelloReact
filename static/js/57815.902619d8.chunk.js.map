{"version":3,"file":"static/js/57815.902619d8.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/accordion-item/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/accordion-item/accordion-item.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/accordion-item/accordion-item.scss?tag=calcite-accordion-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/observers.ts"],"sourcesContent":["export const SLOTS = {\n  actionsStart: \"actions-start\",\n  actionsEnd: \"actions-end\",\n};\n\nexport const CSS = {\n  icon: \"icon\",\n  header: \"header\",\n  headerContent: \"header-content\",\n  actionsStart: \"actions-start\",\n  actionsEnd: \"actions-end\",\n  headerText: \"header-text\",\n  heading: \"heading\",\n  description: \"description\",\n  expandIcon: \"expand-icon\",\n  content: \"content\",\n  iconStart: \"icon--start\",\n  iconEnd: \"icon--end\",\n  headerContainer: \"header-container\",\n};\n\nexport const IDS = {\n  section: \"section\",\n  sectionToggle: \"section-toggle\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  closestElementCrossShadowBoundary,\n  getElementDir,\n  getSlotted,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { SLOTS, CSS, IDS } from \"./resources\";\nimport { FlipContext, Position, Scale, SelectionMode } from \"../interfaces\";\nimport { RequestedItem } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding custom content, including nested `calcite-accordion-item`s.\n * @slot actions-end - A slot for adding `calcite-action`s or content to the end side of the component's header.\n * @slot actions-start - A slot for adding `calcite-action`s or content to the start side of the component's header.\n */\n@Component({\n  tag: \"calcite-accordion-item\",\n  styleUrl: \"accordion-item.scss\",\n  shadow: true,\n})\nexport class AccordionItem implements ConditionalSlotComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is expanded. */\n  @Prop({ reflect: true, mutable: true }) expanded = false;\n\n  /** Specifies heading text for the component. */\n  @Prop() heading: string;\n\n  /** Specifies a description for the component. */\n  @Prop() description: string;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: string;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: string;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /**\n   * Specifies the placement of the icon in the header inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() iconPosition: Position;\n\n  /** Specifies the type of the icon in the header inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() iconType: \"chevron\" | \"caret\" | \"plus-minus\";\n\n  /**\n   * The containing `accordion` element.\n   *\n   * @internal\n   */\n  @Prop() accordionParent: HTMLCalciteAccordionElement;\n\n  /**\n   * Specifies the size of the component inherited from the `calcite-accordion`.\n   *\n   * @internal\n   */\n  @Prop() scale: Scale;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAccordionItemSelect: EventEmitter<RequestedItem>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAccordionItemClose: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectConditionalSlotComponent(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderActionsStart(): VNode {\n    const { el } = this;\n    return getSlotted(el, SLOTS.actionsStart) ? (\n      <div class={CSS.actionsStart}>\n        <slot name={SLOTS.actionsStart} />\n      </div>\n    ) : null;\n  }\n\n  renderActionsEnd(): VNode {\n    const { el } = this;\n    return getSlotted(el, SLOTS.actionsEnd) ? (\n      <div class={CSS.actionsEnd}>\n        <slot name={SLOTS.actionsEnd} />\n      </div>\n    ) : null;\n  }\n\n  render(): VNode {\n    const { iconFlipRtl } = this;\n    const dir = getElementDir(this.el);\n    const iconStartEl = this.iconStart ? (\n      <calcite-icon\n        class={CSS.iconStart}\n        flipRtl={iconFlipRtl === \"both\" || iconFlipRtl === \"start\"}\n        icon={this.iconStart}\n        key=\"icon-start\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const iconEndEl = this.iconEnd ? (\n      <calcite-icon\n        class={CSS.iconEnd}\n        flipRtl={iconFlipRtl === \"both\" || iconFlipRtl === \"end\"}\n        icon={this.iconEnd}\n        key=\"icon-end\"\n        scale={getIconScale(this.scale)}\n      />\n    ) : null;\n    const { description } = this;\n    return (\n      <Host>\n        <div\n          class={{\n            [`icon-position--${this.iconPosition}`]: true,\n            [`icon-type--${this.iconType}`]: true,\n          }}\n        >\n          <div class={{ [CSS.header]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.renderActionsStart()}\n            <div\n              aria-controls={IDS.section}\n              aria-expanded={toAriaBoolean(this.expanded)}\n              class={CSS.headerContent}\n              id={IDS.sectionToggle}\n              onClick={this.itemHeaderClickHandler}\n              role=\"button\"\n              tabindex=\"0\"\n            >\n              <div class={CSS.headerContainer}>\n                {iconStartEl}\n                <div class={CSS.headerText}>\n                  <span class={CSS.heading}>{this.heading}</span>\n                  {description ? <span class={CSS.description}>{description}</span> : null}\n                </div>\n                {iconEndEl}\n              </div>\n              <calcite-icon\n                class={CSS.expandIcon}\n                icon={\n                  this.iconType === \"chevron\"\n                    ? \"chevronDown\"\n                    : this.iconType === \"caret\"\n                      ? \"caretDown\"\n                      : this.expanded\n                        ? \"minus\"\n                        : \"plus\"\n                }\n                scale={getIconScale(this.scale)}\n              />\n            </div>\n            {this.renderActionsEnd()}\n          </div>\n          <section aria-labelledby={IDS.sectionToggle} class={CSS.content} id={IDS.section}>\n            <slot />\n          </section>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"keydown\")\n  keyDownHandler(event: KeyboardEvent): void {\n    if (event.target === this.el) {\n      switch (event.key) {\n        case \" \":\n        case \"Enter\":\n          this.emitRequestedItem();\n          event.preventDefault();\n          break;\n      }\n    }\n  }\n\n  @Listen(\"calciteInternalAccordionChange\", { target: \"body\" })\n  updateActiveItemOnChange(event: CustomEvent): void {\n    const [accordion] = event.composedPath();\n    const parent = closestElementCrossShadowBoundary<HTMLCalciteAccordionElement>(\n      this.el,\n      \"calcite-accordion\",\n    );\n\n    if (accordion !== parent) {\n      return;\n    }\n\n    this.determineActiveItem(parent.selectionMode, event.detail.requestedAccordionItem);\n    event.stopPropagation();\n  }\n\n  @Listen(\"calciteInternalAccordionItemsSync\", { target: \"document\" })\n  accordionItemSyncHandler(event: CustomEvent): void {\n    const [accordion] = event.composedPath();\n    const accordionItem = this.el;\n\n    // we sync with our accordion parent via event only if the item is wrapped within another component's shadow DOM,\n    // otherwise, the accordion parent will sync the item directly\n\n    const willBeSyncedByDirectParent = accordionItem.parentElement === accordion;\n    if (willBeSyncedByDirectParent) {\n      return;\n    }\n\n    const closestAccordionParent = closestElementCrossShadowBoundary<HTMLCalciteAccordionElement>(\n      accordionItem,\n      \"calcite-accordion\",\n    );\n\n    if (accordion !== closestAccordionParent) {\n      return;\n    }\n\n    accordionItem.iconPosition = closestAccordionParent.iconPosition;\n    accordionItem.iconType = closestAccordionParent.iconType;\n    accordionItem.scale = closestAccordionParent.scale;\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteAccordionItemElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** handle clicks on item header */\n  private itemHeaderClickHandler = (): void => this.emitRequestedItem();\n\n  private determineActiveItem(\n    selectionMode: SelectionMode,\n    requestedItem: HTMLCalciteAccordionItemElement,\n  ): void {\n    switch (selectionMode) {\n      case \"multiple\":\n        if (this.el === requestedItem) {\n          this.expanded = !this.expanded;\n        }\n        break;\n\n      case \"single\":\n        this.expanded = this.el === requestedItem ? !this.expanded : false;\n        break;\n\n      case \"single-persist\":\n        this.expanded = this.el === requestedItem;\n        break;\n    }\n  }\n\n  private emitRequestedItem(): void {\n    this.calciteInternalAccordionItemSelect.emit({\n      requestedAccordionItem: this.el as HTMLCalciteAccordionItemElement,\n    });\n  }\n}\n","%icon-position {\n  /* icon rotation variables */\n  --calcite-accordion-item-icon-rotation: calc(theme(\"rotate.90\") * -1);\n  --calcite-accordion-item-active-icon-rotation: theme(\"rotate.0\");\n  --calcite-accordion-item-icon-rotation-rtl: theme(\"rotate.90\");\n  --calcite-accordion-item-active-icon-rotation-rtl: theme(\"rotate.0\");\n}\n\n// icon position variants for child\n.icon-position--start {\n  @extend %icon-position;\n  --calcite-accordion-item-flex-direction: row-reverse;\n  --calcite-accordion-item-icon-spacing-start: 0;\n  --calcite-accordion-item-icon-spacing-end: var(--calcite-accordion-icon-margin);\n}\n\n.icon-position--end {\n  @extend %icon-position;\n  --calcite-accordion-item-flex-direction: row;\n  --calcite-accordion-item-icon-spacing-start: var(--calcite-accordion-icon-margin);\n  --calcite-accordion-item-icon-spacing-end: 0;\n}\n\n.icon-position--end:not(.icon-type--plus-minus) {\n  --calcite-accordion-item-icon-rotation: theme(\"rotate.0\");\n  --calcite-accordion-item-active-icon-rotation: theme(\"rotate.180\");\n  --calcite-accordion-item-icon-rotation-rtl: theme(\"rotate.0\");\n  --calcite-accordion-item-active-icon-rotation-rtl: calc(theme(\"rotate.180\") * -1);\n}\n\n:host {\n  @apply text-color-3\n    relative\n    flex\n    flex-col\n    no-underline;\n  background-color: var(--calcite-accordion-item-background, theme(\"backgroundColor.foreground.1\"));\n}\n\n// focus styles\n:host .header-content {\n  @apply focus-base;\n}\n\n:host(:focus) .header-content {\n  @apply focus-inset\n  outline-none;\n}\n\n:host([expanded]) {\n  @apply text-color-1;\n  & .content {\n    @apply text-color-1 block;\n  }\n  & .header {\n    border-block-end-color: transparent;\n  }\n}\n\n// .header / content\n:host .header {\n  @apply flex items-stretch;\n}\n\n:host .icon {\n  @apply text-color-3\n    relative\n    m-0\n    inline-flex\n    duration-150\n    ease-in-out;\n  margin-inline-end: var(--calcite-accordion-item-icon-spacing-start);\n  margin-inline-start: var(--calcite-accordion-item-icon-spacing-end);\n}\n\n.icon--start {\n  @apply flex items-center;\n  margin-inline-end: var(--calcite-accordion-icon-margin);\n}\n\n.icon--end {\n  @apply flex items-center;\n  margin-inline-end: var(--calcite-accordion-icon-margin);\n  margin-inline-start: var(--calcite-accordion-icon-margin);\n}\n\n.header-container {\n  inline-size: 100%;\n}\n\n.content {\n  padding: var(--calcite-accordion-item-padding);\n}\n\n:host .content,\n:host .header {\n  border-block-end: 1px solid var(--calcite-accordion-item-border, theme(\"borderColor.color.2\"));\n}\n\n:host .header * {\n  @apply inline-flex\n    items-center\n    duration-150\n    ease-in-out;\n  @include word-break();\n}\n\n:host .content {\n  @apply text-color-3 hidden pt-0;\n  text-align: initial;\n}\n\n// accordion item icon\n:host .expand-icon {\n  @apply text-color-3;\n  margin-inline-start: var(--calcite-accordion-item-icon-spacing-start);\n  margin-inline-end: var(--calcite-accordion-item-icon-spacing-end);\n  transform: rotate(var(--calcite-accordion-item-icon-rotation));\n}\n\n.calcite--rtl .expand-icon {\n  transform: rotate(var(--calcite-accordion-item-icon-rotation-rtl));\n}\n\n:host([expanded]) .expand-icon {\n  @apply text-color-3;\n  transform: rotate(var(--calcite-accordion-item-active-icon-rotation));\n}\n\n:host([expanded]) .calcite--rtl .expand-icon {\n  transform: rotate(var(--calcite-accordion-item-active-icon-rotation-rtl));\n}\n\n// accordion item title\n:host .header-text {\n  @apply my-0 flex-grow flex-col py-0;\n  text-align: initial;\n  margin-inline-end: theme(\"margin.auto\");\n}\n\n:host .heading,\n:host .description {\n  @apply flex w-full;\n}\n\n:host .heading {\n  @apply text-color-2 font-medium;\n}\n:host .description {\n  @apply text-color-3 mt-1;\n}\n\n:host(:focus),\n:host(:hover) {\n  & .heading {\n    @apply text-color-1;\n  }\n  & .icon {\n    @apply text-color-1;\n  }\n\n  & .expand-icon {\n    @apply text-color-1;\n  }\n  & .description {\n    @apply text-color-2;\n  }\n}\n\n:host(:focus),\n:host(:active),\n:host([expanded]) {\n  & .heading {\n    @apply text-color-1;\n  }\n  & .icon {\n    @apply text-color-1;\n  }\n  & .description {\n    @apply text-color-2;\n  }\n}\n\n.header-content {\n  @apply flex-grow cursor-pointer;\n  padding: var(--calcite-accordion-item-padding);\n  flex-direction: var(--calcite-accordion-item-flex-direction);\n}\n\n.actions-start,\n.actions-end {\n  @apply flex items-center;\n}\n\n@media (forced-colors: active) {\n  :host([expanded]) {\n    & .header {\n      border-block-end: none;\n    }\n    & .heading {\n      /** give visual indicator of expanded state since subtle color changes can't be done **/\n      font-weight: bolder;\n    }\n  }\n  :host(:hover),\n  :host(:focus) {\n    & .heading {\n      /** give visual indicator of expandability/click-ability since subtle color changes can't be done **/\n      text-decoration: underline;\n    }\n  }\n}\n\n@include base-component();\n","import { Scale } from \"../components/interfaces\";\nimport { HTMLStencilElement } from \"@stencil/core/internal\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver } from \"./observers\";\n\nconst observed = new Set<HTMLElement>();\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: MutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  observed.delete(component.el);\n\n  // we explicitly process queued mutations and disconnect and reconnect\n  // the observer until MutationObserver gets an `unobserve` method\n  // see https://github.com/whatwg/dom/issues/126\n  processMutations(mutationObserver.takeRecords());\n  mutationObserver.disconnect();\n  for (const [element] of observed.entries()) {\n    mutationObserver.observe(element, observerOptions);\n  }\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\n\nexport interface FetchIconProps {\n  icon: string;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nexport async function fetchIcon({ icon, scale }: FetchIconProps): Promise<CalciteIconPath> {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  const id = `${iconName}${size}${filled ? \"F\" : \"\"}`;\n\n  if (iconCache[id]) {\n    return iconCache[id];\n  }\n  if (!requestCache[id]) {\n    requestCache[id] = fetch(getAssetPath(`./assets/icon/${id}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${id}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[id];\n  iconCache[id] = path;\n\n  return path;\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Build, Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, scaleToPx } from \"./utils\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: string = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.waitUntilVisible(() => {\n      this.visible = true;\n      this.loadIconPathData();\n    });\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.loadIconPathData();\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!Build.isBrowser || !icon || !visible) {\n      return;\n    }\n\n    const pathData = await fetchIcon({ icon, scale });\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","import { Build } from \"@stencil/core\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve(target: Node): void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!Build.isBrowser) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n"],"names":["SLOTS","CSS","IDS","AccordionItem","proxyCustomElement","HTMLElement","itemHeaderClickHandler","this","emitRequestedItem","connectedCallback","connectConditionalSlotComponent","disconnectedCallback","disconnectConditionalSlotComponent","renderActionsStart","el","getSlotted","h","class","name","renderActionsEnd","render","iconFlipRtl","dir","getElementDir","iconStartEl","iconStart","flipRtl","icon","key","scale","getIconScale","iconEndEl","iconEnd","description","Host","concat","iconPosition","iconType","CSS_UTILITY","rtl","toAriaBoolean","expanded","id","onClick","role","tabindex","heading","keyDownHandler","event","target","preventDefault","updateActiveItemOnChange","accordion","composedPath","parent","closestElementCrossShadowBoundary","determineActiveItem","selectionMode","detail","requestedAccordionItem","stopPropagation","accordionItemSyncHandler","accordionItem","parentElement","closestAccordionParent","requestedItem","calciteInternalAccordionItemSelect","emit","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","observed","Set","mutationObserver","observerOptions","childList","component","createObserver","processMutations","observe","delete","takeRecords","disconnect","element","entries","mutations","forEach","_ref","forceUpdate","iconCache","requestCache","scaleToPx","s","m","l","fetchIcon","size","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","fetch","getAssetPath","then","resp","json","catch","console","error","path","Icon","waitUntilVisible","visible","loadIconPathData","_this$intersectionObs","intersectionObserver","componentWillLoad","pathData","textLabel","semantic","paths","svg","fill","height","viewBox","width","xmlns","d","opacity","Build","isBrowser","callback","entry","isIntersecting","rootMargin","type","options","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","push","unobserve","newObservedEntries","filter","IntersectionObserver","ResizeObserver","getObserver"],"sourceRoot":""}