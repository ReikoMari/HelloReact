{"version":3,"file":"static/js/50402.e78126bf.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/block-section/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/block-section/block-section.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/block-section/block-section.scss?tag=calcite-block-section&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/label/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/label/label.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/label/label.scss?tag=calcite-label&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/switch/switch.scss?tag=calcite-switch&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/switch/switch.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts"],"sourcesContent":["export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n};\n\nexport const CSS = {\n  content: \"content\",\n  focusGuard: \"focus-guard\",\n  invalid: \"invalid\",\n  sectionHeader: \"section-header\",\n  sectionHeaderText: \"section-header__text\",\n  statusIcon: \"status-icon\",\n  toggle: \"toggle\",\n  toggleSwitch: \"toggle--switch\",\n  toggleSwitchContainer: \"toggle--switch-container\",\n  toggleSwitchContent: \"toggle--switch__content\",\n  toggleSwitchText: \"toggle--switch__text\",\n  valid: \"valid\",\n};\n\nexport const ICONS = {\n  menuOpen: \"chevron-down\",\n  menuClosedLeft: \"chevron-left\",\n  menuClosedRight: \"chevron-right\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\n\nimport { focusFirstTabbable, getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Status } from \"../interfaces\";\nimport { BlockSectionMessages } from \"./assets/block-section/t9n\";\nimport { BlockSectionToggleDisplay } from \"./interfaces\";\nimport { CSS, ICONS, IDS } from \"./resources\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n/**\n * @slot - A slot for adding custom content.\n */\n@Component({\n  tag: \"calcite-block-section\",\n  styleUrl: \"block-section.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class BlockSection implements LocalizedComponent, T9nComponent, LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  /**\n   * Displays a status-related indicator icon.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * The component header text.\n   */\n  @Prop() text: string;\n\n  /**\n   * Specifies how the component's toggle is displayed, where:\n   *\n   * `\"button\"` sets the toggle to a selectable header, and\n   *\n   * `\"switch\"` sets the toggle to a switch.\n   */\n  @Prop({ reflect: true }) toggleDisplay: BlockSectionToggleDisplay = \"button\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockSectionMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockSectionMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockSectionElement;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: BlockSectionMessages;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the header has been clicked.\n   */\n  @Event({ cancelable: false }) calciteBlockSectionToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleHeaderKeyDown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.toggleSection();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  toggleSection = (): void => {\n    this.open = !this.open;\n    this.calciteBlockSectionToggle.emit();\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderStatusIcon(): VNode[] {\n    const { status } = this;\n    const statusIcon = ICONS[status] ?? false;\n    const statusIconClasses = {\n      [CSS.statusIcon]: true,\n      [CSS.valid]: status == \"valid\",\n      [CSS.invalid]: status == \"invalid\",\n    };\n\n    return !!statusIcon ? (\n      <calcite-icon class={statusIconClasses} icon={statusIcon} scale=\"s\" />\n    ) : null;\n  }\n\n  render(): VNode {\n    const { el, messages, open, text, toggleDisplay } = this;\n    const dir = getElementDir(el);\n    const arrowIcon = open\n      ? ICONS.menuOpen\n      : dir === \"rtl\"\n        ? ICONS.menuClosedLeft\n        : ICONS.menuClosedRight;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerNode =\n      toggleDisplay === \"switch\" ? (\n        <div\n          class={{\n            [CSS.toggleSwitchContainer]: true,\n          }}\n        >\n          <div\n            aria-controls={IDS.content}\n            aria-expanded={toAriaBoolean(open)}\n            class={{\n              [CSS.toggle]: true,\n              [CSS.toggleSwitch]: true,\n            }}\n            id={IDS.toggle}\n            onClick={this.toggleSection}\n            onKeyDown={this.handleHeaderKeyDown}\n            role=\"button\"\n            tabIndex={0}\n            title={toggleLabel}\n          >\n            <div class={CSS.toggleSwitchContent}>\n              <span class={CSS.toggleSwitchText}>{text}</span>\n            </div>\n            {this.renderStatusIcon()}\n          </div>\n          {/* we use calcite-label to use a simple component that will allow us to prevent keyboard focus by setting tabindex=\"-1\" on the host */}\n          <calcite-label class={CSS.focusGuard} layout=\"inline\" tabIndex={-1}>\n            <calcite-switch checked={open} label={toggleLabel} scale=\"s\" />\n          </calcite-label>\n        </div>\n      ) : (\n        <button\n          aria-controls={IDS.content}\n          aria-expanded={toAriaBoolean(open)}\n          class={{\n            [CSS.sectionHeader]: true,\n            [CSS.toggle]: true,\n          }}\n          id={IDS.toggle}\n          onClick={this.toggleSection}\n        >\n          <calcite-icon icon={arrowIcon} scale=\"s\" />\n          <span class={CSS.sectionHeaderText}>{text}</span>\n          {this.renderStatusIcon()}\n        </button>\n      );\n\n    return (\n      <Host>\n        {headerNode}\n        <section aria-labelledby={IDS.toggle} class={CSS.content} hidden={!open} id={IDS.content}>\n          <slot />\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply bg-foreground-1\n    text-color-2\n    text-n1\n    box-border\n    block;\n}\n\n:host([open]) {\n  @apply border-b-color-3\n    border-0\n    border-b\n    border-solid;\n}\n\n:host(:last-child) {\n  @apply border-b-0;\n}\n\n.toggle {\n  @apply text-color-2\n    w-full\n    border-0\n    bg-transparent\n    font-sans\n    font-medium;\n}\n\n.toggle--switch,\n.section-header {\n  @apply text-n1\n    focus-base\n    mx-0\n    my-1\n    flex\n    cursor-pointer\n    select-none\n    items-center\n    px-0\n    py-2;\n\n  &:focus {\n    @apply focus-outset;\n  }\n  &:hover {\n    @apply text-color-1;\n  }\n}\n\n.section-header .status-icon {\n  @apply self-end;\n}\n\n.section-header__text {\n  @apply mx-3\n    my-0\n    flex-auto;\n\n  text-align: initial;\n  word-wrap: anywhere;\n}\n\n.toggle--switch-container {\n  @apply flex items-center relative bg-transparent w-full;\n  word-break: break-word;\n\n  .focus-guard {\n    --calcite-label-margin-bottom: 0;\n    @apply absolute pointer-events-none;\n    inset-inline-end: 0;\n    margin-inline-start: theme(\"margin.1\");\n  }\n}\n\n.toggle--switch {\n  .status-icon {\n    margin-inline-start: theme(\"margin.2\");\n  }\n}\n\n.toggle--switch__content {\n  @apply flex flex-auto items-center;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n:host([toggle-display=\"switch\"]) .toggle {\n  .toggle--switch__content {\n    @apply me-7;\n  }\n}\n\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\n\nexport interface FetchIconProps {\n  icon: string;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nexport async function fetchIcon({ icon, scale }: FetchIconProps): Promise<CalciteIconPath> {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  const id = `${iconName}${size}${filled ? \"F\" : \"\"}`;\n\n  if (iconCache[id]) {\n    return iconCache[id];\n  }\n  if (!requestCache[id]) {\n    requestCache[id] = fetch(getAssetPath(`./assets/icon/${id}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${id}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[id];\n  iconCache[id] = path;\n\n  return path;\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Build, Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, scaleToPx } from \"./utils\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: string = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.waitUntilVisible(() => {\n      this.visible = true;\n      this.loadIconPathData();\n    });\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.loadIconPathData();\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!Build.isBrowser || !icon || !visible) {\n      return;\n    }\n\n    const pathData = await fetchIcon({ icon, scale });\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const CSS = {\n  container: \"container\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  associateExplicitLabelToUnlabeledComponent,\n  labelConnectedEvent,\n  labelDisconnectedEvent,\n} from \"../../utils/label\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text and a component that can be labeled.\n */\n@Component({\n  tag: \"calcite-label\",\n  styleUrl: \"label.scss\",\n  shadow: true,\n})\nexport class Label {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the `id` of the component the label is bound to. Use when the component the label is bound to does not reside within the component. */\n  @Prop({ reflect: true }) for: string;\n\n  @Watch(\"for\")\n  handleForChange(): void {\n    associateExplicitLabelToUnlabeledComponent(this.el);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Defines the layout of the label in relation to the component. Use `\"inline\"` positions to wrap the label and component on the same line. */\n  @Prop({ reflect: true }) layout: \"inline\" | \"inline-space-between\" | \"default\" = \"default\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ bubbles: false, cancelable: false }) calciteInternalLabelClick: EventEmitter<{\n    sourceEvent: MouseEvent;\n  }>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteLabelElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  labelClickHandler = (event: MouseEvent): void => {\n    this.calciteInternalLabelClick.emit({\n      sourceEvent: event,\n    });\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    document.dispatchEvent(new CustomEvent(labelConnectedEvent));\n  }\n\n  disconnectedCallback(): void {\n    document.dispatchEvent(new CustomEvent(labelDisconnectedEvent));\n  }\n\n  render(): VNode {\n    return (\n      <Host onClick={this.labelClickHandler}>\n        <div class={CSS.container}>\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-label-margin-bottom: The spacing below the component.\n */\n\n:host {\n  @apply flex;\n}\n\n:host([alignment=\"start\"]) {\n  text-align: start;\n}\n\n:host([alignment=\"end\"]) {\n  text-align: end;\n}\n\n:host([alignment=\"center\"]) {\n  @apply text-center;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply text-n2h gap-1;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.2\"));\n  }\n}\n:host([scale=\"m\"]) {\n  .container {\n    @apply text-n1h gap-2;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.3\"));\n  }\n}\n:host([scale=\"l\"]) {\n  .container {\n    @apply text-0h gap-2;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.4\"));\n  }\n}\n\n:host .container {\n  @apply text-color-1\n    mt-0\n    mx-0\n    w-full\n    leading-snug;\n}\n\n:host([layout=\"default\"]) {\n  .container {\n    @apply flex flex-col;\n  }\n}\n\n:host([layout=\"inline\"]),\n:host([layout=\"inline-space-between\"]) {\n  .container {\n    @apply flex flex-row items-center gap-2;\n  }\n}\n:host([layout=\"inline\"][scale=\"l\"]) {\n  .container {\n    @apply gap-3;\n  }\n}\n\n:host([layout=\"inline-space-between\"]) {\n  .container {\n    @apply justify-between;\n  }\n}\n\n@include disabled() {\n  & > .container {\n    @apply opacity-disabled;\n  }\n\n  // prevent opacity stacking with already disabled child elements\n  ::slotted(*[disabled]),\n  ::slotted(*[disabled] *) {\n    @apply bg-opacity-100;\n  }\n  ::slotted(calcite-input-message:not([active])) {\n    @apply bg-opacity-0;\n  }\n}\n\n@include base-component();\n","// sizes\n:host([scale=\"s\"]) {\n  .container {\n    @apply h-3;\n  }\n  .track {\n    @apply h-3 w-6;\n  }\n  .handle {\n    @apply h-2 w-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .container {\n    @apply h-4;\n  }\n  .track {\n    @apply h-4 w-8;\n  }\n  .handle {\n    @apply h-3 w-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .container {\n    @apply h-6;\n  }\n  .track {\n    @apply h-6 w-12;\n  }\n  .handle {\n    @apply h-5 w-5;\n  }\n}\n\n:host {\n  @apply relative\n    inline-block\n    w-auto\n    cursor-pointer\n    select-none\n    align-middle;\n  tap-highlight-color: transparent;\n}\n\n@include disabled();\n\n.container {\n  @apply outline-0;\n}\n\n.track {\n  @apply bg-foreground-2\n    border-color-2\n    pointer-events-none\n    relative\n    box-border\n    inline-block\n    rounded-full\n    border\n    border-solid\n    align-top\n    focus-base;\n}\n\n:host(:focus) .track {\n  @apply focus-outset;\n}\n\n.handle {\n  @apply bg-foreground-1\n    border-color-input\n    pointer-events-none\n    absolute\n    block\n    rounded-full\n    border-2\n    border-solid\n    transition-all\n    duration-150\n    ease-in-out;\n  inset-block-start: -1px;\n  inset-inline: -1px theme(\"inset.auto\");\n}\n\n:host(:hover),\n:host(:focus) {\n  .handle {\n    @apply border-color-brand;\n    box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n  }\n}\n\n:host([checked]) {\n  .track {\n    @apply bg-brand border-color-brand-hover;\n  }\n  .handle {\n    @apply border-color-brand;\n    inset-inline: theme(\"inset.auto\") -1px;\n  }\n}\n\n:host([checked]:hover) {\n  .track {\n    @apply bg-brand border-color-brand-hover;\n  }\n  .handle {\n    @apply border-color-brand-hover;\n    box-shadow: inset 0 0 0 1px var(--calcite-color-brand-hover);\n  }\n}\n\n@media (forced-colors: active) {\n  :host([checked]) {\n    .track {\n      background-color: canvasText;\n    }\n  }\n}\n\n@include hidden-form-input();\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  CheckableFormComponent,\n  connectForm,\n  disconnectForm,\n  HiddenFormInputSlot,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Scale } from \"../interfaces\";\n\n@Component({\n  tag: \"calcite-switch\",\n  styleUrl: \"switch.scss\",\n  shadow: true,\n})\nexport class Switch\n  implements LabelableComponent, CheckableFormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** When `true`, the component is checked. */\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  /** The component's value. */\n  @Prop() value: any;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteSwitchElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  switchEl: HTMLDivElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Switch[\"checked\"];\n\n  defaultChecked: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    focusElement(this.switchEl);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    input.type = \"checkbox\";\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (!this.disabled && isActivationKey(event.key)) {\n      this.toggle();\n      event.preventDefault();\n    }\n  };\n\n  onLabelClick(): void {\n    if (!this.disabled) {\n      this.toggle();\n      this.setFocus();\n    }\n  }\n\n  private toggle(): void {\n    this.checked = !this.checked;\n    this.calciteSwitchChange.emit();\n  }\n\n  private clickHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.toggle();\n  };\n\n  private setSwitchEl = (el: HTMLDivElement): void => {\n    this.switchEl = el;\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the `checked` value has changed.\n   */\n  @Event({ cancelable: false }) calciteSwitchChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-checked={toAriaBoolean(this.checked)}\n            aria-label={getLabelText(this)}\n            class=\"container\"\n            role=\"switch\"\n            tabIndex={0}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={this.setSwitchEl}\n          >\n            <div class=\"track\">\n              <div class=\"handle\" />\n            </div>\n            <HiddenFormInputSlot component={this} />\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","import { Build, getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!Build.isBrowser) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  component.onMessagesChange = undefined;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange(): void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n"],"names":["IDS","CSS","ICONS","menuOpen","menuClosedLeft","menuClosedRight","valid","invalid","BlockSection","proxyCustomElement","HTMLElement","handleHeaderKeyDown","event","isActivationKey","key","this","toggleSection","preventDefault","stopPropagation","open","calciteBlockSectionToggle","emit","onMessagesChange","setFocus","componentFocusable","focusFirstTabbable","el","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectLocalized","connectMessages","componentWillLoad","setUpMessages","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","disconnectLocalized","disconnectMessages","renderStatusIcon","_ICONS$status","status","statusIcon","statusIconClasses","h","class","icon","scale","render","messages","text","toggleDisplay","dir","getElementDir","arrowIcon","toggleLabel","collapse","expand","headerNode","toAriaBoolean","id","onClick","onKeyDown","role","tabIndex","title","layout","checked","label","Host","hidden","iconCache","requestCache","scaleToPx","s","m","l","async","fetchIcon","_ref","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","concat","normalizeIconName","filled","iconName","substring","fetch","getAssetPath","then","resp","json","catch","console","error","path","Icon","waitUntilVisible","visible","loadIconPathData","_this$intersectionObs","intersectionObserver","disconnect","flipRtl","pathData","textLabel","semantic","paths","svg","fill","height","viewBox","width","xmlns","d","opacity","Build","isBrowser","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","Label","labelClickHandler","calciteInternalLabelClick","sourceEvent","handleForChange","associateExplicitLabelToUnlabeledComponent","document","dispatchEvent","CustomEvent","labelConnectedEvent","labelDisconnectedEvent","Switch","keyDownHandler","disabled","toggle","clickHandler","setSwitchEl","switchEl","focusElement","syncHiddenFormInput","input","type","onLabelClick","calciteSwitchChange","connectInteractive","connectLabel","connectForm","disconnectInteractive","disconnectLabel","disconnectForm","componentDidRender","updateHostInteraction","InteractiveContainer","getLabelText","ref","HiddenFormInputSlot","component","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","fetchMessages","lang","componentName","tagName","toLowerCase","ok","getMessageBundle","getSupportedLocale","defaultOnMessagesChange","undefined"],"sourceRoot":""}