{"version":3,"file":"static/js/95203.e7860386.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/form.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/browser.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/label.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts"],"sourcesContent":["import { Scale } from \"../components/interfaces\";\nimport { HTMLStencilElement } from \"@stencil/core/internal\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","import { closestElementCrossShadowBoundary, queryElementRoots } from \"./dom\";\nimport { FunctionalComponent, h } from \"@stencil/core\";\n\n/**\n * Any form <Component> with a `calcite<Component>Input` event needs to be included in this array.\n */\nexport const componentsWithInputEvent = [\n  \"calcite-input\",\n  \"calcite-input-number\",\n  \"calcite-input-text\",\n  \"calcite-text-area\",\n];\n\n/**\n * Get the event name to listen for that, when emitted, will clear the\n * validation message that displays after form submission. Only validation\n * messages that are set by the browser will be cleared. If a user sets\n * validationMessage to a custom value, they are responsible for clearing it.\n *\n * Exported for testing purposes.\n *\n * @param componentTag the tag of the component, e.g. \"calcite-input\"\n * @returns the event name\n */\nexport function getClearValidationEventName(componentTag: string): string {\n  const componentTagCamelCase = componentTag\n    .split(\"-\")\n    .map((part: string, index: number) =>\n      index === 0 ? part : `${part[0].toUpperCase()}${part.slice(1)}`,\n    )\n    .join(\"\");\n\n  const clearValidationEvent = `${componentTagCamelCase}${\n    componentsWithInputEvent.includes(componentTag) ? \"Input\" : \"Change\"\n  }`;\n\n  return clearValidationEvent;\n}\n\n/**\n * Exported for testing purposes.\n */\nexport const hiddenFormInputSlotName = \"hidden-form-input\";\n\n/**\n * Defines interface for form owning components.\n *\n * Allows calling submit/reset methods on the form.\n */\nexport interface FormOwner {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * The ID of the form to associate with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  form: string;\n\n  /**\n   * The form this component is associated with.\n   *\n   * @internal\n   */\n  formEl: HTMLFormElement;\n}\n\n/**\n * Defines interface for form-associated components.\n *\n * Along with the interface, use the matching form utils to help set up the component behavior.\n */\nexport interface FormComponent<T = any> extends FormOwner {\n  /**\n   * When true, this component's value will not be submitted in the form.\n   */\n  disabled: boolean;\n\n  /**\n   * When true, form submit requests will enforce field requirement.\n   *\n   * @todo remove optional in follow-up PR\n   */\n  required?: boolean;\n\n  /**\n   * The name used to submit the value to the associated form.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  name: string;\n\n  /**\n   * This form component's value.\n   *\n   * Note that this prop should use the @Prop decorator.\n   */\n  value: T;\n\n  /**\n   * The initial value for this form component.\n   *\n   * When the form is reset, the value will be set to this property.\n   */\n  defaultValue: T;\n\n  /**\n   * Hook for components to provide custom form reset behavior.\n   */\n  onFormReset?(): void;\n\n  /**\n   * Hook for components to sync _extra_ props on the hidden input form element used for form-submitting.\n   *\n   * Note: The following props are set by default: disabled, hidden, name, required, value.\n   */\n  syncHiddenFormInput?(input: HTMLInputElement): void;\n}\n\n/**\n * Defines interface for checkable form-associated components.\n *\n * Along with the interface, use the matching form utils to help set up the component behavior.\n */\nexport interface CheckableFormComponent<T = any> extends FormComponent<T> {\n  /**\n   * For boolean-valued components, this property defines whether the associated value is submitted to the form or not.\n   */\n  checked: boolean;\n\n  /**\n   * The initial checked value for this form component.\n   *\n   * When the form is reset, the checked property will be set to this value.\n   */\n  defaultChecked: boolean;\n}\n\nfunction isCheckable(component: FormComponent): component is CheckableFormComponent {\n  return \"checked\" in component;\n}\n\nconst onFormResetMap = new WeakMap<HTMLElement, FormComponent[\"onFormReset\"]>();\nconst formComponentSet = new WeakSet<HTMLElement>();\n\n/**\n * This helps determine if our form component is part of a composite form-associated component.\n *\n * @param form\n * @param formComponentEl\n */\nfunction hasRegisteredFormComponentParent(\n  form: HTMLFormElement,\n  formComponentEl: HTMLElement,\n): boolean {\n  // if we have a parent component using the form ID attribute, we assume it is form-associated\n  const hasParentComponentWithFormIdSet = closestElementCrossShadowBoundary(\n    formComponentEl.parentElement,\n    \"[form]\",\n  );\n\n  if (hasParentComponentWithFormIdSet) {\n    return true;\n  }\n\n  // we use events as a way to test for nested form-associated components across shadow bounds\n  const formComponentRegisterEventName = \"calciteInternalFormComponentRegister\";\n\n  let hasRegisteredFormComponentParent = false;\n\n  form.addEventListener(\n    formComponentRegisterEventName,\n    (event) => {\n      hasRegisteredFormComponentParent = event\n        .composedPath()\n        .some((element) => formComponentSet.has(element as HTMLElement));\n      event.stopPropagation();\n    },\n    { once: true },\n  );\n\n  formComponentEl.dispatchEvent(\n    new CustomEvent(formComponentRegisterEventName, {\n      bubbles: true,\n      composed: true,\n    }),\n  );\n\n  return hasRegisteredFormComponentParent;\n}\n\nfunction clearFormValidation(component: HTMLCalciteInputElement | FormComponent): void {\n  \"status\" in component && (component.status = \"idle\");\n  \"validationIcon\" in component && (component.validationIcon = false);\n  \"validationMessage\" in component && (component.validationMessage = \"\");\n}\n\nfunction setInvalidFormValidation(\n  component: HTMLCalciteInputElement | FormComponent,\n  message: string,\n): void {\n  \"status\" in component && (component.status = \"invalid\");\n\n  \"validationIcon\" in component && !component.validationIcon && (component.validationIcon = true);\n\n  \"validationMessage\" in component &&\n    !component.validationMessage &&\n    (component.validationMessage = message);\n}\n\nfunction displayValidationMessage(event: Event) {\n  // target is the hidden input, which is slotted in the actual form component\n  const hiddenInput = event?.target as HTMLInputElement;\n\n  // not necessarily a calcite-input, but we don't have an HTMLCalciteFormElement type\n  const formComponent = hiddenInput?.parentElement as HTMLCalciteInputElement;\n\n  const componentTag = formComponent?.nodeName?.toLowerCase();\n  const componentTagParts = componentTag?.split(\"-\");\n\n  if (componentTagParts.length < 2 || componentTagParts[0] !== \"calcite\") {\n    return;\n  }\n\n  // prevent the browser from showing the native validation popover\n  event?.preventDefault();\n\n  setInvalidFormValidation(formComponent, hiddenInput?.validationMessage);\n\n  if (formComponent?.validationMessage !== hiddenInput?.validationMessage) {\n    return;\n  }\n\n  const clearValidationEvent = getClearValidationEventName(componentTag);\n  formComponent.addEventListener(clearValidationEvent, () => clearFormValidation(formComponent), {\n    once: true,\n  });\n}\n\n/**\n * Helper to submit a form.\n *\n * @param component\n * @returns true if its associated form was submitted, false otherwise.\n */\nexport function submitForm(component: FormOwner): boolean {\n  const { formEl } = component;\n\n  if (!formEl) {\n    return false;\n  }\n\n  formEl.addEventListener(\"invalid\", displayValidationMessage, true);\n  formEl.requestSubmit();\n  formEl.removeEventListener(\"invalid\", displayValidationMessage, true);\n\n  requestAnimationFrame(() => {\n    const invalidEls = formEl.querySelectorAll(\"[status=invalid]\");\n\n    // focus the first invalid element that has a validation message\n    for (const el of invalidEls) {\n      if ((el as HTMLCalciteInputElement)?.validationMessage) {\n        (el as HTMLCalciteInputElement)?.setFocus();\n        break;\n      }\n    }\n  });\n\n  return true;\n}\n\n/**\n * Helper to reset a form.\n *\n * @param component\n */\nexport function resetForm(component: FormOwner): void {\n  component.formEl?.reset();\n}\n\n/**\n * Helper to set up form interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectForm<T>(component: FormComponent<T>): void {\n  const { el, value } = component;\n  const associatedForm = findAssociatedForm(component);\n\n  if (!associatedForm || hasRegisteredFormComponentParent(associatedForm, el)) {\n    return;\n  }\n\n  component.formEl = associatedForm;\n  component.defaultValue = value;\n\n  if (isCheckable(component)) {\n    component.defaultChecked = component.checked;\n  }\n\n  const boundOnFormReset = (component.onFormReset || onFormReset).bind(component);\n  associatedForm.addEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.set(component.el, boundOnFormReset);\n  formComponentSet.add(el);\n}\n\n/**\n * Utility method to find a form-component's associated form element.\n *\n * @param component\n */\nexport function findAssociatedForm(component: FormOwner): HTMLFormElement | null {\n  const { el, form } = component;\n\n  return form\n    ? queryElementRoots<HTMLFormElement>(el, { id: form })\n    : closestElementCrossShadowBoundary<HTMLFormElement>(el, \"form\");\n}\n\nfunction onFormReset<T>(this: FormComponent<T>): void {\n  clearFormValidation(this);\n  if (isCheckable(this)) {\n    this.checked = this.defaultChecked;\n    return;\n  }\n\n  this.value = this.defaultValue;\n}\n\n/**\n * Helper to tear down form interactions on disconnectedCallback.\n *\n * @param component\n */\nexport function disconnectForm<T>(component: FormComponent<T>): void {\n  const { el, formEl } = component;\n\n  if (!formEl) {\n    return;\n  }\n\n  const boundOnFormReset = onFormResetMap.get(el);\n  formEl.removeEventListener(\"reset\", boundOnFormReset);\n  onFormResetMap.delete(el);\n  component.formEl = null;\n  formComponentSet.delete(el);\n}\n\n/**\n * Helper for setting the default value on initialization after connectedCallback.\n *\n * Note that this is only needed if the default value cannot be determined on connectedCallback.\n *\n * @param component\n * @param value\n */\nexport function afterConnectDefaultValueSet<T>(component: FormComponent<T>, value: any): void {\n  component.defaultValue = value;\n}\n\nexport const internalHiddenInputInputEvent = \"calciteInternalHiddenInputInput\";\n\nconst hiddenInputInputHandler = (event: Event) => {\n  event.target.dispatchEvent(new CustomEvent(internalHiddenInputInputEvent, { bubbles: true }));\n};\n\nconst removeHiddenInputChangeEventListener = (input: HTMLInputElement) =>\n  input.removeEventListener(\"input\", hiddenInputInputHandler);\n\n/**\n * Helper for maintaining a form-associated's hidden input in sync with the component.\n *\n * Based on Ionic's approach: https://github.com/ionic-team/ionic-framework/blob/e4bf052794af9aac07f887013b9250d2a045eba3/core/src/utils/helpers.ts#L198\n *\n * @param component\n */\nfunction syncHiddenFormInput(component: FormComponent): void {\n  const { el, formEl, name, value } = component;\n  const { ownerDocument } = el;\n\n  const inputs = el.querySelectorAll<HTMLInputElement>(`input[slot=\"${hiddenFormInputSlotName}\"]`);\n\n  if (!formEl || !name) {\n    inputs.forEach((input) => {\n      removeHiddenInputChangeEventListener(input);\n      input.remove();\n    });\n    return;\n  }\n\n  const values = Array.isArray(value) ? value : [value];\n  const extra: any[] = [];\n  const seen = new Set<any>();\n\n  inputs.forEach((input) => {\n    const valueMatch = values.find(\n      (val) =>\n        /* intentional non-strict equality check */\n        val == input.value,\n    );\n\n    if (valueMatch != null) {\n      seen.add(valueMatch);\n      defaultSyncHiddenFormInput(component, input, valueMatch);\n    } else {\n      extra.push(input);\n    }\n  });\n\n  let docFrag: DocumentFragment;\n\n  values.forEach((value) => {\n    if (seen.has(value)) {\n      return;\n    }\n\n    let input = extra.pop();\n\n    if (!input) {\n      input = ownerDocument!.createElement(\"input\");\n      input.slot = hiddenFormInputSlotName;\n    }\n\n    if (!docFrag) {\n      docFrag = ownerDocument!.createDocumentFragment();\n    }\n\n    docFrag.append(input);\n\n    // emits when hidden input is autofilled\n    input.addEventListener(\"input\", hiddenInputInputHandler);\n\n    defaultSyncHiddenFormInput(component, input, value);\n  });\n\n  if (docFrag) {\n    el.append(docFrag);\n  }\n  extra.forEach((input) => {\n    removeHiddenInputChangeEventListener(input);\n    input.remove();\n  });\n}\n\nfunction defaultSyncHiddenFormInput(\n  component: FormComponent,\n  input: HTMLInputElement,\n  value: string,\n): void {\n  const { defaultValue, disabled, form, name, required } = component;\n\n  // keep in sync to prevent losing reset value\n  input.defaultValue = defaultValue;\n  input.disabled = disabled;\n  input.name = name;\n  input.required = required;\n  input.tabIndex = -1;\n\n  // we set the attr as the prop is read-only\n  if (form) {\n    input.setAttribute(\"form\", form);\n  } else {\n    input.removeAttribute(\"form\");\n  }\n\n  if (isCheckable(component)) {\n    input.checked = component.checked;\n\n    // keep in sync to prevent losing reset value\n    input.defaultChecked = component.defaultChecked;\n    // heuristic to support default/on mode from https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n    input.value = component.checked ? value || \"on\" : \"\";\n  } else {\n    input.value = value || \"\";\n  }\n\n  component.syncHiddenFormInput?.(input);\n}\n\ninterface HiddenFormInputSlotProps {\n  component: FormComponent;\n}\n\n/**\n * Helper to render the slot for form-associated component's hidden input.\n *\n * If the component has a default slot, this must be placed at the bottom of the component's root container to ensure it is the last child.\n *\n * render(): VNode {\n *   <Host>\n *     <div class={CSS.container}>\n *     // ...\n *     <HiddenFormInputSlot component={this} />\n *     </div>\n *   </Host>\n * }\n *\n * Note that the hidden-form-input Sass mixin must be added to the component's style to apply specific styles.\n *\n * @param root0\n * @param root0.component\n */\nexport const HiddenFormInputSlot: FunctionalComponent<HiddenFormInputSlotProps> = ({\n  component,\n}) => {\n  syncHiddenFormInput(component);\n\n  return <slot name={hiddenFormInputSlotName} />;\n};\n","import { Build } from \"@stencil/core\";\n\ninterface NavigatorUAData {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n}\n\nfunction getUserAgentData(): NavigatorUAData | undefined {\n  return (navigator as any).userAgentData;\n}\n\nexport function getUserAgentString(): string {\n  if (!Build.isBrowser) {\n    return \"\";\n  }\n\n  const uaData = getUserAgentData();\n\n  return uaData?.brands\n    ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n    : navigator.userAgent;\n}\n","import { getUserAgentString } from \"./browser\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    removeInteractionListeners(disabledElementToParent.get(component.el));\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerOptions extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport function InteractiveContainer(\n  { disabled }: InteractiveContainerOptions,\n  children: VNode[],\n): FunctionalComponent {\n  return (\n    <div class={CSS.container} inert={disabled}>\n      {...children}\n    </div>\n  );\n}\n","import { closestElementCrossShadowBoundary, isBefore, queryElementRoots } from \"./dom\";\nimport { componentOnReady } from \"./component\";\n\nexport interface LabelableComponent {\n  /**\n   * When true, disabled prevents interaction.\n   */\n  disabled: boolean;\n\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * Text label.\n   */\n  label?: string;\n\n  /**\n   * The label this component is associated with.\n   */\n  labelEl: HTMLCalciteLabelElement;\n\n  /**\n   * Hook for components to provide custom label click behavior.\n   */\n  onLabelClick: (event: CustomEvent<any>) => void;\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const labelClickEvent = \"calciteInternalLabelClick\";\nexport const labelConnectedEvent = \"calciteInternalLabelConnected\";\nexport const labelDisconnectedEvent = \"calciteInternalLabelDisconnected\";\n\nconst labelTagName = \"calcite-label\";\nconst labelToLabelables = new WeakMap<HTMLCalciteLabelElement, LabelableComponent[]>();\nconst onLabelClickMap = new WeakMap<HTMLCalciteLabelElement, typeof onLabelClick>();\nconst onLabelConnectedMap = new WeakMap<LabelableComponent, typeof onLabelConnected>();\nconst onLabelDisconnectedMap = new WeakMap<LabelableComponent, typeof onLabelDisconnected>();\nconst unlabeledComponents = new Set<LabelableComponent>();\n\nconst findLabelForComponent = (componentEl: HTMLElement): HTMLCalciteLabelElement | null => {\n  const { id } = componentEl;\n\n  const forLabel =\n    id && (queryElementRoots(componentEl, { selector: `${labelTagName}[for=\"${id}\"]` }) as HTMLCalciteLabelElement);\n\n  if (forLabel) {\n    return forLabel;\n  }\n\n  const parentLabel = closestElementCrossShadowBoundary<HTMLCalciteLabelElement>(componentEl, labelTagName);\n\n  if (\n    !parentLabel ||\n    // labelable components within other custom elements are not considered labelable\n    hasAncestorCustomElements(parentLabel, componentEl)\n  ) {\n    return null;\n  }\n\n  return parentLabel;\n};\n\nfunction hasAncestorCustomElements(label: HTMLCalciteLabelElement, componentEl: HTMLElement): boolean {\n  let traversedElements: HTMLElement[];\n  const customElementAncestorCheckEventType = \"custom-element-ancestor-check\";\n\n  const listener = (event: CustomEvent) => {\n    event.stopImmediatePropagation();\n    const composedPath = event.composedPath() as HTMLElement[];\n    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));\n  };\n\n  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });\n\n  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));\n  label.removeEventListener(customElementAncestorCheckEventType, listener);\n\n  const ancestorCustomElements = traversedElements\n    .filter((el) => el !== componentEl && el !== label)\n    .filter((el) => el.tagName?.includes(\"-\"));\n\n  return ancestorCustomElements.length > 0;\n}\n\n/**\n * Helper to set up label interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  const labelEl = findLabelForComponent(component.el);\n\n  if (\n    (onLabelClickMap.has(labelEl) && labelEl === component.labelEl) ||\n    (!labelEl && unlabeledComponents.has(component))\n  ) {\n    return;\n  }\n\n  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);\n\n  if (labelEl) {\n    component.labelEl = labelEl;\n\n    const labelables = labelToLabelables.get(labelEl) || [];\n    labelables.push(component);\n    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));\n\n    if (!onLabelClickMap.has(component.labelEl)) {\n      onLabelClickMap.set(component.labelEl, onLabelClick);\n      component.labelEl.addEventListener(labelClickEvent, onLabelClick);\n    }\n\n    unlabeledComponents.delete(component);\n    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);\n    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);\n  } else if (!unlabeledComponents.has(component)) {\n    boundOnLabelDisconnected();\n    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  }\n}\n/**\n * Helper to tear down label interactions on disconnectedCallback on labelable components.\n *\n * @param component\n */\nexport function disconnectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  unlabeledComponents.delete(component);\n  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  onLabelConnectedMap.delete(component);\n  onLabelDisconnectedMap.delete(component);\n\n  if (!component.labelEl) {\n    return;\n  }\n\n  const labelables = labelToLabelables.get(component.labelEl);\n\n  if (labelables.length === 1) {\n    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));\n    onLabelClickMap.delete(component.labelEl);\n  }\n\n  labelToLabelables.set(\n    component.labelEl,\n    labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder),\n  );\n\n  component.labelEl = null;\n}\n\nfunction sortByDOMOrder(a: LabelableComponent, b: LabelableComponent): number {\n  return isBefore(a.el, b.el) ? -1 : 1;\n}\n\n/**\n * Helper to get the label text from a component.\n *\n * @param component\n */\nexport function getLabelText(component: LabelableComponent): string {\n  return component.label || component.labelEl?.textContent?.trim() || \"\";\n}\n\nfunction onLabelClick(this: HTMLCalciteLabelElement, event: CustomEvent<{ sourceEvent: MouseEvent }>): void {\n  const labelClickTarget = event.detail.sourceEvent.target as HTMLElement;\n  const labelables = labelToLabelables.get(this);\n  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);\n  const labelableChildClicked = labelables.includes(clickedLabelable);\n\n  if (labelableChildClicked) {\n    // no need to forward click as labelable will receive focus\n    return;\n  }\n\n  const firstLabelable = labelables[0];\n\n  if (firstLabelable.disabled) {\n    return;\n  }\n\n  firstLabelable.onLabelClick(event);\n}\n\nfunction onLabelConnected(this: LabelableComponent): void {\n  if (unlabeledComponents.has(this)) {\n    connectLabel(this);\n  }\n}\n\nfunction onLabelDisconnected(this: LabelableComponent): void {\n  unlabeledComponents.add(this);\n  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);\n  onLabelConnectedMap.set(this, boundOnLabelConnected);\n  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);\n}\n\n/**\n * Helper to associate an explicit label (i.e., using `for`) with a labelable component that does not have an associated label.\n *\n * @param label - the label element\n */\nexport async function associateExplicitLabelToUnlabeledComponent(label: HTMLCalciteLabelElement): Promise<void> {\n  await componentOnReady(label);\n\n  const alreadyLabeled = labelToLabelables.has(label);\n\n  if (alreadyLabeled) {\n    return;\n  }\n\n  const forComponentEl = label.ownerDocument?.getElementById(label.for);\n\n  if (!forComponentEl) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    for (const labelable of unlabeledComponents) {\n      if (labelable.el === forComponentEl) {\n        connectLabel(labelable);\n        break;\n      }\n    }\n  });\n}\n","import { Build, forceUpdate } from \"@stencil/core\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!Build.isBrowser) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n"],"names":["getIconScale","componentScale","async","componentOnReady","el","isStencilEl","Promise","resolve","requestAnimationFrame","componentsWithInputEvent","hiddenFormInputSlotName","isCheckable","component","onFormResetMap","WeakMap","formComponentSet","WeakSet","clearFormValidation","status","validationIcon","validationMessage","displayValidationMessage","event","_formComponent$nodeNa","hiddenInput","target","formComponent","parentElement","componentTag","nodeName","toLowerCase","componentTagParts","split","length","message","preventDefault","clearValidationEvent","componentTagCamelCase","map","part","index","concat","toUpperCase","slice","join","includes","getClearValidationEventName","addEventListener","once","submitForm","formEl","requestSubmit","removeEventListener","invalidEls","querySelectorAll","setFocus","resetForm","_component$formEl","reset","connectForm","value","associatedForm","findAssociatedForm","form","formComponentEl","closestElementCrossShadowBoundary","formComponentRegisterEventName","hasRegisteredFormComponentParent","composedPath","some","element","has","stopPropagation","dispatchEvent","CustomEvent","bubbles","composed","defaultValue","defaultChecked","checked","boundOnFormReset","onFormReset","bind","set","add","queryElementRoots","id","this","disconnectForm","get","delete","afterConnectDefaultValueSet","internalHiddenInputInputEvent","hiddenInputInputHandler","removeHiddenInputChangeEventListener","input","defaultSyncHiddenFormInput","_component$syncHidden","disabled","name","required","tabIndex","setAttribute","removeAttribute","syncHiddenFormInput","call","HiddenFormInputSlot","_ref","ownerDocument","inputs","forEach","remove","values","Array","isArray","extra","seen","Set","docFrag","valueMatch","find","val","push","pop","createElement","slot","createDocumentFragment","append","h","getUserAgentString","Build","isBrowser","uaData","navigator","userAgentData","brands","brand","version","userAgent","isFirefox","test","disabledElementToParent","interceptedClick","HTMLElement","prototype","click","onPointerDown","interactiveElement","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","updateHostInteraction","contains","document","activeElement","blur","blockInteraction","restoreInteraction","currentParent","getParentElement","trackedParent","removeInteractionListeners","addInteractionListeners","connectInteractive","disconnectInteractive","CSS","container","InteractiveContainer","_ref2","children","class","inert","labelClickEvent","labelConnectedEvent","labelDisconnectedEvent","labelTagName","labelToLabelables","onLabelClickMap","onLabelConnectedMap","onLabelDisconnectedMap","unlabeledComponents","findLabelForComponent","componentEl","forLabel","selector","parentLabel","label","traversedElements","customElementAncestorCheckEventType","listener","indexOf","ancestorCustomElements","filter","_el$tagName","tagName","hasAncestorCustomElements","connectLabel","labelEl","boundOnLabelDisconnected","onLabelDisconnected","labelables","sort","sortByDOMOrder","onLabelClick","disconnectLabel","labelable","a","b","isBefore","getLabelText","_component$labelEl","textContent","trim","labelClickTarget","detail","sourceEvent","clickedLabelable","firstLabelable","onLabelConnected","boundOnLabelConnected","associateExplicitLabelToUnlabeledComponent","_label$ownerDocument","forComponentEl","getElementById","for","resolveMap","promiseMap","setUpLoadableComponent","setComponentLoaded","componentLoaded","componentFocusable","forceUpdate"],"sourceRoot":""}