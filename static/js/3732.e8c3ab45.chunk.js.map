{"version":3,"file":"static/js/3732.e8c3ab45.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/list-item/list-item.scss?tag=calcite-list-item&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/list-item.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.scss?tag=calcite-handle&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/browser.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/interactive.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/loadable.ts","../node_modules/@esri/calcite-components/dist/components/src/utils/t9n.ts","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/list-item/utils.ts"],"sourcesContent":[":host {\n  @apply flex flex-col;\n  --calcite-list-item-icon-color: theme(\"colors.brand\");\n  --calcite-list-item-spacing-indent: theme(\"spacing.4\");\n}\n\n:host([filter-hidden]) {\n  @apply hidden;\n}\n\n@include disabled();\n\n.container {\n  @apply bg-foreground-1\n  box-border\n  flex\n  flex-1 font-sans;\n  * {\n    @apply box-border;\n  }\n  padding-inline-start: calc(\n    var(--calcite-list-item-spacing-indent) * var(--calcite-list-item-spacing-indent-multiplier)\n  );\n}\n\n.container--hover:hover {\n  @apply bg-foreground-2 cursor-pointer;\n}\n\n.container:active {\n  @apply bg-foreground-1;\n}\n\n.container--border {\n  border-inline-start-width: theme(\"borderWidth.4\");\n  border-inline-start-style: solid;\n}\n\n.container--border-selected {\n  border-inline-start-color: theme(\"colors.brand\");\n}\n\n.container--border-unselected {\n  border-inline-start-color: transparent;\n}\n\n.container:hover {\n  &.container--border-unselected {\n    @apply border-color-1;\n  }\n}\n\n.nested-container {\n  @apply bg-foreground-1 flex flex-col;\n}\n\n.nested-container--hidden {\n  @apply hidden;\n}\n\n.content-container {\n  @apply text-color-2\n    select-none\n    flex\n    flex-auto\n    font-sans\n    font-normal\n    items-stretch\n    p-0;\n}\n\ntr,\ntd {\n  @apply focus-base;\n}\n\ntr:focus,\ntd:focus {\n  @apply focus-inset;\n}\n\n.content,\n.custom-content {\n  @apply text-n2-wrap\n    flex\n    flex-auto\n    flex-col\n    justify-center\n    px-3\n    py-2;\n}\n\n.label,\n.description,\n.content-bottom {\n  @apply text-n2 word-break font-sans font-normal;\n  &:only-child {\n    @apply m-0 py-1;\n  }\n}\n\n.label {\n  @apply text-color-1;\n}\n\n:host([selected]) .label {\n  @apply font-medium;\n}\n\n.description {\n  @apply text-color-3 mt-0.5;\n}\n\n:host([selected]) .description {\n  @apply text-color-2;\n}\n\n.content-start {\n  @apply justify-start;\n}\n\n.content-end {\n  @apply justify-end;\n}\n\n.content-start,\n.content-end {\n  @apply flex-auto;\n}\n\n.content-bottom {\n  @apply bg-foreground-1 flex flex-col;\n  padding-inline-start: calc(\n    var(--calcite-list-item-spacing-indent) * var(--calcite-list-item-spacing-indent-multiplier)\n  );\n}\n\n.content-container--has-center-content .content-start,\n.content-container--has-center-content .content-end {\n  @apply flex-initial;\n}\n\n.selection-container {\n  @apply flex px-3;\n  color: theme(\"borderColor.color.input\");\n}\n\n.selection-container--single {\n  color: transparent;\n}\n\n:host(:not([disabled]):not([selected])) .container:hover .selection-container--single {\n  color: theme(\"borderColor.color.1\");\n}\n\n:host([selected]:hover) .selection-container,\n:host([selected]:hover) .selection-container--single,\n:host([selected]) .selection-container {\n  color: var(--calcite-list-item-icon-color);\n}\n\n.open-container {\n  color: theme(\"textColor.color.3\");\n}\n\n:host(:not([disabled])) .container:hover .open-container {\n  color: theme(\"textColor.color.1\");\n}\n\n.actions-start,\n.actions-end,\n.content-start,\n.content-end,\n.selection-container,\n.drag-container,\n.open-container {\n  @apply flex items-center;\n}\n\n.open-container,\n.selection-container {\n  @apply cursor-pointer;\n}\n\n.content-start,\n.content-end {\n  ::slotted(calcite-icon) {\n    @apply self-center mx-3;\n  }\n}\n\n.actions-start,\n.actions-end {\n  ::slotted(calcite-action),\n  ::slotted(calcite-action-menu),\n  ::slotted(calcite-handle),\n  ::slotted(calcite-dropdown) {\n    @apply self-stretch;\n\n    color: inherit;\n  }\n}\n\n::slotted(calcite-list-item),\n::slotted(calcite-list) {\n  @apply border-solid border-0 border-t border-color-3;\n}\n\n::slotted(calcite-list:empty) {\n  @apply py-3;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getFirstTabbable,\n  slotChangeHasAssignedElement,\n  toAriaBoolean,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { SelectionMode } from \"../interfaces\";\nimport { SelectionAppearance } from \"../list/resources\";\nimport { CSS, activeCellTestAttribute, ICONS, SLOTS } from \"./resources\";\nimport {\n  getDepth,\n  getListItemChildren,\n  getListItemChildLists,\n  updateListItemChildren,\n} from \"./utils\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { ListItemMessages } from \"./assets/list-item/t9n\";\n\nconst focusMap = new Map<HTMLCalciteListElement, number>();\n\nconst listSelector = \"calcite-list\";\n\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { SortableComponentItem } from \"../../utils/sortableComponent\";\n\n/**\n * @slot - A slot for adding `calcite-list-item` and `calcite-list-item-group` elements.\n * @slot actions-start - A slot for adding actionable `calcite-action` elements before the content of the component.\n * @slot content-start - A slot for adding non-actionable elements before the label and description of the component.\n * @slot content - A slot for adding non-actionable, centered content in place of the `label` and `description` of the component.\n * @slot content-end - A slot for adding non-actionable elements after the label and description of the component.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component.\n * @slot content-bottom - A slot for adding content below the component's `label` and `description`.\n */\n@Component({\n  tag: \"calcite-list-item\",\n  styleUrl: \"list-item.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class ListItem\n  implements\n    InteractiveComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    T9nComponent,\n    SortableComponentItem\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Sets the item as focusable. Only one item should be focusable within a list.\n   *\n   * @internal\n   */\n  @Prop() active = false;\n\n  @Watch(\"active\")\n  activeHandler(active: boolean): void {\n    if (!active) {\n      this.focusCell(null, false);\n    }\n  }\n\n  /** When `true`, a close button is added to the component. */\n  @Prop({ reflect: true }) closable = false;\n\n  /** When `true`, hides the component. */\n  @Prop({ reflect: true, mutable: true }) closed = false;\n\n  @Watch(\"closed\")\n  handleClosedChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * A description for the component. Displays below the label text.\n   */\n  @Prop() description: string;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  handleDisabledChange(): void {\n    this.emitCalciteInternalListItemChange();\n  }\n\n  /**\n   * When `true`, the item is not draggable.\n   */\n  @Prop({ reflect: true }) dragDisabled = false;\n\n  /**\n   * When `true`, the component displays a draggable button.\n   *\n   * @internal\n   */\n  @Prop() dragHandle = false;\n\n  /**\n   * When `true`, the component's drag handle is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) dragSelected = false;\n\n  /**\n   * Hides the component when filtered.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) filterHidden = false;\n\n  /**\n   * The label text of the component. Displays above the description text.\n   */\n  @Prop() label: string;\n\n  /**\n   * Provides additional metadata to the component. Primary use is for a filter on the parent `calcite-list`.\n   */\n  @Prop() metadata: Record<string, unknown>;\n\n  /**\n   * When `true`, the item is open to show child components.\n   */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  /**\n   * Used to specify the aria-setsize attribute to define the number of items in the current set of list for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setSize: number = null;\n\n  /**\n   * Used to specify the aria-posinset attribute to define the number or position in the current set of list items for accessibility.\n   *\n   * @internal\n   */\n  @Prop() setPosition: number = null;\n\n  /**\n   * When `true` and the parent `calcite-list`'s `selectionMode` is `\"single\"`, `\"single-persist\"', or `\"multiple\"`, the component is selected.\n   */\n  @Prop({ reflect: true, mutable: true }) selected = false;\n\n  @Watch(\"selected\")\n  handleSelectedChange(): void {\n    this.calciteInternalListItemSelect.emit();\n  }\n\n  /**\n   * The component's value.\n   */\n  @Prop() value: any;\n\n  /**\n   * Specifies the selection mode - `\"multiple\"` (allow any number of selected items), `\"single\"` (allow one selected item), `\"single-persist\"` (allow one selected item and prevent de-selection), or `\"none\"` (no selected items).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionMode: Extract<\n    \"none\" | \"multiple\" | \"single\" | \"single-persist\",\n    SelectionMode\n  > = null;\n\n  /**\n   * Specifies the selection appearance - `\"icon\"` (displays a checkmark or dot) or `\"border\"` (displays a border).\n   *\n   * @internal\n   */\n  @Prop({ mutable: true }) selectionAppearance: SelectionAppearance = null;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ListItemMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ListItemMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemSelect: EventEmitter<void>;\n\n  /**\n   * Fires when the close button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemClose: EventEmitter<void>;\n\n  /**\n   * Fires when the drag handle is selected.\n   */\n  @Event({ cancelable: false }) calciteListItemDragHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the open button is clicked.\n   */\n  @Event({ cancelable: false }) calciteListItemToggle: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemSelect: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false })\n  calciteInternalListItemSelectMultiple: EventEmitter<{\n    selectMultiple: boolean;\n  }>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemActive: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalFocusPreviousItem: EventEmitter<void>;\n\n  /**\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalListItemChange: EventEmitter<void>;\n\n  @Listen(\"calciteInternalListItemGroupDefaultSlotChange\")\n  @Listen(\"calciteInternalListDefaultSlotChange\")\n  handleCalciteInternalListDefaultSlotChanges(event: CustomEvent<void>): void {\n    event.stopPropagation();\n    this.handleOpenableChange(this.defaultSlotEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteListItemElement;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() defaultMessages: ListItemMessages;\n\n  @State() level: number = null;\n\n  @State() visualLevel: number = null;\n\n  @State() parentListEl: HTMLCalciteListElement;\n\n  @State() openable = false;\n\n  @State() hasActionsStart = false;\n\n  @State() hasActionsEnd = false;\n\n  @State() hasCustomContent = false;\n\n  @State() hasContentStart = false;\n\n  @State() hasContentEnd = false;\n\n  @State() hasContentBottom = false;\n\n  containerEl: HTMLTableRowElement;\n\n  contentEl: HTMLTableCellElement;\n\n  actionsStartEl: HTMLTableCellElement;\n\n  actionsEndEl: HTMLTableCellElement;\n\n  handleGridEl: HTMLTableCellElement;\n\n  defaultSlotEl: HTMLSlotElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    const { el } = this;\n    this.parentListEl = el.closest(listSelector);\n    this.level = getDepth(el) + 1;\n    this.visualLevel = getDepth(el, true);\n    this.setSelectionDefaults();\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    const { containerEl, parentListEl } = this;\n    const focusIndex = focusMap.get(parentListEl);\n\n    if (typeof focusIndex === \"number\") {\n      const cells = this.getGridCells();\n      if (cells[focusIndex]) {\n        this.focusCell(cells[focusIndex]);\n      } else {\n        containerEl?.focus();\n      }\n      return;\n    }\n\n    containerEl?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderSelected(): VNode {\n    const { selected, selectionMode, selectionAppearance } = this;\n\n    if (selectionMode === \"none\" || selectionAppearance === \"border\") {\n      return null;\n    }\n\n    return (\n      <td\n        class={{\n          [CSS.selectionContainer]: true,\n          [CSS.selectionContainerSingle]:\n            selectionMode === \"single\" || selectionMode === \"single-persist\",\n        }}\n        key=\"selection-container\"\n        onClick={this.handleItemClick}\n      >\n        <calcite-icon\n          icon={\n            selected\n              ? selectionMode === \"multiple\"\n                ? ICONS.selectedMultiple\n                : ICONS.selectedSingle\n              : selectionMode === \"multiple\"\n                ? ICONS.unselectedMultiple\n                : ICONS.unselectedSingle\n          }\n          scale=\"s\"\n        />\n      </td>\n    );\n  }\n\n  renderDragHandle(): VNode {\n    const { label, dragHandle, dragSelected, dragDisabled, setPosition, setSize } = this;\n\n    return dragHandle ? (\n      <td\n        aria-label={label}\n        class={CSS.dragContainer}\n        key=\"drag-handle-container\"\n        onFocusin={this.focusCellHandle}\n        role=\"gridcell\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.handleGridEl = el)}\n      >\n        <calcite-handle\n          disabled={dragDisabled}\n          label={label}\n          onCalciteHandleChange={this.dragHandleSelectedChangeHandler}\n          selected={dragSelected}\n          setPosition={setPosition}\n          setSize={setSize}\n        />\n      </td>\n    ) : null;\n  }\n\n  renderOpen(): VNode {\n    const { el, open, openable, messages } = this;\n    const dir = getElementDir(el);\n    const icon = open ? ICONS.open : dir === \"rtl\" ? ICONS.closedRTL : ICONS.closedLTR;\n    const tooltip = open ? messages.collapse : messages.expand;\n\n    return openable ? (\n      <td\n        class={CSS.openContainer}\n        key=\"open-container\"\n        onClick={this.handleToggleClick}\n        title={tooltip}\n      >\n        <calcite-icon icon={icon} key={icon} scale=\"s\" />\n      </td>\n    ) : null;\n  }\n\n  renderActionsStart(): VNode {\n    const { label, hasActionsStart } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsStart}\n        hidden={!hasActionsStart}\n        key=\"actions-start-container\"\n        onFocusin={this.focusCellActionsStart}\n        role=\"gridcell\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.actionsStartEl = el)}\n      >\n        <slot name={SLOTS.actionsStart} onSlotchange={this.handleActionsStartSlotChange} />\n      </td>\n    );\n  }\n\n  renderActionsEnd(): VNode {\n    const { label, hasActionsEnd, closable, messages } = this;\n    return (\n      <td\n        aria-label={label}\n        class={CSS.actionsEnd}\n        hidden={!(hasActionsEnd || closable)}\n        key=\"actions-end-container\"\n        onFocusin={this.focusCellActionsEnd}\n        role=\"gridcell\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.actionsEndEl = el)}\n      >\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.handleActionsEndSlotChange} />\n        {closable ? (\n          <calcite-action\n            appearance=\"transparent\"\n            icon={ICONS.close}\n            key=\"close-action\"\n            label={messages.close}\n            onClick={this.handleCloseClick}\n            text={messages.close}\n          />\n        ) : null}\n      </td>\n    );\n  }\n\n  renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderCustomContent(): VNode {\n    const { hasCustomContent } = this;\n    return (\n      <div class={CSS.customContent} hidden={!hasCustomContent}>\n        <slot name={SLOTS.content} onSlotchange={this.handleContentSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentEnd(): VNode {\n    const { hasContentEnd } = this;\n    return (\n      <div class={CSS.contentEnd} hidden={!hasContentEnd}>\n        <slot name={SLOTS.contentEnd} onSlotchange={this.handleContentEndSlotChange} />\n      </div>\n    );\n  }\n\n  renderContentBottom(): VNode {\n    const { hasContentBottom, visualLevel } = this;\n    return (\n      <div\n        class={CSS.contentBottom}\n        hidden={!hasContentBottom}\n        style={{ \"--calcite-list-item-spacing-indent-multiplier\": `${visualLevel}` }}\n      >\n        <slot name={SLOTS.contentBottom} onSlotchange={this.handleContentBottomSlotChange} />\n      </div>\n    );\n  }\n\n  renderDefaultContainer(): VNode {\n    return (\n      <div\n        class={{\n          [CSS.nestedContainer]: true,\n          [CSS.nestedContainerHidden]: this.openable && !this.open,\n        }}\n      >\n        <slot\n          onSlotchange={this.handleDefaultSlotChange}\n          ref={(el: HTMLSlotElement) => (this.defaultSlotEl = el)}\n        />\n      </div>\n    );\n  }\n\n  renderContentProperties(): VNode {\n    const { label, description, hasCustomContent } = this;\n\n    return !hasCustomContent && (!!label || !!description) ? (\n      <div class={CSS.content} key=\"content\">\n        {label ? (\n          <div class={CSS.label} key=\"label\">\n            {label}\n          </div>\n        ) : null}\n        {description ? (\n          <div class={CSS.description} key=\"description\">\n            {description}\n          </div>\n        ) : null}\n      </div>\n    ) : null;\n  }\n\n  renderContentContainer(): VNode {\n    const { description, label, selectionMode, hasCustomContent } = this;\n    const hasCenterContent = hasCustomContent || !!label || !!description;\n    const content = [\n      this.renderContentStart(),\n      this.renderCustomContent(),\n      this.renderContentProperties(),\n      this.renderContentEnd(),\n    ];\n\n    return (\n      <td\n        aria-label={label}\n        class={{\n          [CSS.contentContainer]: true,\n          [CSS.contentContainerSelectable]: selectionMode !== \"none\",\n          [CSS.contentContainerHasCenterContent]: hasCenterContent,\n        }}\n        key=\"content-container\"\n        onClick={this.handleItemClick}\n        onFocusin={this.focusCellContent}\n        role=\"gridcell\"\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el) => (this.contentEl = el)}\n      >\n        {content}\n      </td>\n    );\n  }\n\n  render(): VNode {\n    const {\n      openable,\n      open,\n      level,\n      setPosition,\n      setSize,\n      active,\n      label,\n      selected,\n      selectionAppearance,\n      selectionMode,\n      closed,\n      visualLevel,\n    } = this;\n\n    const showBorder = selectionMode !== \"none\" && selectionAppearance === \"border\";\n    const borderSelected = showBorder && selected;\n    const borderUnselected = showBorder && !selected;\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <tr\n            aria-expanded={openable ? toAriaBoolean(open) : null}\n            aria-label={label}\n            aria-level={level}\n            aria-posinset={setPosition}\n            aria-selected={toAriaBoolean(selected)}\n            aria-setsize={setSize}\n            class={{\n              [CSS.container]: true,\n              [CSS.containerHover]: true,\n              [CSS.containerBorder]: showBorder,\n              [CSS.containerBorderSelected]: borderSelected,\n              [CSS.containerBorderUnselected]: borderUnselected,\n            }}\n            hidden={closed}\n            onFocus={this.focusCellNull}\n            onFocusin={this.emitInternalListItemActive}\n            onKeyDown={this.handleItemKeyDown}\n            role=\"row\"\n            style={{ \"--calcite-list-item-spacing-indent-multiplier\": `${visualLevel}` }}\n            tabIndex={active ? 0 : -1}\n            // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n            ref={(el) => (this.containerEl = el)}\n          >\n            {this.renderDragHandle()}\n            {this.renderSelected()}\n            {this.renderOpen()}\n            {this.renderActionsStart()}\n            {this.renderContentContainer()}\n            {this.renderActionsEnd()}\n          </tr>\n          {this.renderContentBottom()}\n          {this.renderDefaultContainer()}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private dragHandleSelectedChangeHandler = (event: CustomEvent): void => {\n    this.dragSelected = (event.target as HTMLCalciteHandleElement).selected;\n    this.calciteListItemDragHandleChange.emit();\n    event.stopPropagation();\n  };\n\n  private emitInternalListItemActive = (): void => {\n    this.calciteInternalListItemActive.emit();\n  };\n\n  private focusCellHandle = (): void => {\n    this.handleCellFocusIn(this.handleGridEl);\n  };\n\n  private focusCellActionsStart = (): void => {\n    this.handleCellFocusIn(this.actionsStartEl);\n  };\n\n  private focusCellContent = (): void => {\n    this.handleCellFocusIn(this.contentEl);\n  };\n\n  private focusCellActionsEnd = (): void => {\n    this.handleCellFocusIn(this.actionsEndEl);\n  };\n\n  private emitCalciteInternalListItemChange(): void {\n    this.calciteInternalListItemChange.emit();\n  }\n\n  private handleCloseClick = (): void => {\n    this.closed = true;\n    this.calciteListItemClose.emit();\n  };\n\n  private handleContentSlotChange = (event: Event): void => {\n    this.hasCustomContent = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsStartSlotChange = (event: Event): void => {\n    this.hasActionsStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleActionsEndSlotChange = (event: Event): void => {\n    this.hasActionsEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentEndSlotChange = (event: Event): void => {\n    this.hasContentEnd = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentBottomSlotChange = (event: Event): void => {\n    this.hasContentBottom = slotChangeHasAssignedElement(event);\n  };\n\n  private setSelectionDefaults(): void {\n    const { parentListEl, selectionMode, selectionAppearance } = this;\n\n    if (!parentListEl) {\n      return;\n    }\n\n    if (!selectionMode) {\n      this.selectionMode = parentListEl.selectionMode;\n    }\n\n    if (!selectionAppearance) {\n      this.selectionAppearance = parentListEl.selectionAppearance;\n    }\n  }\n\n  private handleOpenableChange(slotEl: HTMLSlotElement): void {\n    if (!slotEl) {\n      return;\n    }\n\n    const listItemChildren = getListItemChildren(slotEl);\n    const listItemChildLists = getListItemChildLists(slotEl);\n    updateListItemChildren(listItemChildren);\n\n    this.openable = !!listItemChildren.length || !!listItemChildLists.length;\n  }\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.handleOpenableChange(event.target as HTMLSlotElement);\n  };\n\n  private handleToggleClick = (): void => {\n    this.toggle();\n  };\n\n  private toggle = (value = !this.open): void => {\n    this.open = value;\n    this.calciteListItemToggle.emit();\n  };\n\n  private handleItemClick = (event: PointerEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    this.toggleSelected(event.shiftKey);\n  };\n\n  private toggleSelected = (shiftKey: boolean): void => {\n    const { selectionMode, selected } = this;\n\n    if (this.disabled) {\n      return;\n    }\n\n    if (selectionMode === \"multiple\" || selectionMode === \"single\") {\n      this.selected = !selected;\n    } else if (selectionMode === \"single-persist\") {\n      this.selected = true;\n    }\n\n    this.calciteInternalListItemSelectMultiple.emit({\n      selectMultiple: shiftKey && selectionMode === \"multiple\",\n    });\n    this.calciteListItemSelect.emit();\n  };\n\n  private getGridCells(): HTMLTableCellElement[] {\n    return [this.handleGridEl, this.actionsStartEl, this.contentEl, this.actionsEndEl].filter(\n      (el) => el && !el.hidden,\n    );\n  }\n\n  private handleItemKeyDown = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const { key } = event;\n    const composedPath = event.composedPath();\n    const { containerEl, actionsStartEl, actionsEndEl, open, openable } = this;\n\n    const cells = this.getGridCells();\n    const currentIndex = cells.findIndex((cell) => composedPath.includes(cell));\n\n    if (\n      key === \"Enter\" &&\n      !composedPath.includes(actionsStartEl) &&\n      !composedPath.includes(actionsEndEl)\n    ) {\n      event.preventDefault();\n      this.toggleSelected(event.shiftKey);\n    } else if (key === \"ArrowRight\") {\n      event.preventDefault();\n      const nextIndex = currentIndex + 1;\n      if (currentIndex === -1) {\n        if (!open && openable) {\n          this.toggle(true);\n          this.focusCell(null);\n        } else if (cells[0]) {\n          this.focusCell(cells[0]);\n        }\n      } else if (cells[currentIndex] && cells[nextIndex]) {\n        this.focusCell(cells[nextIndex]);\n      }\n    } else if (key === \"ArrowLeft\") {\n      event.preventDefault();\n      const prevIndex = currentIndex - 1;\n      if (currentIndex === -1) {\n        this.focusCell(null);\n        if (open && openable) {\n          this.toggle(false);\n        } else {\n          this.calciteInternalFocusPreviousItem.emit();\n        }\n      } else if (currentIndex === 0) {\n        this.focusCell(null);\n        containerEl.focus();\n      } else if (cells[currentIndex] && cells[prevIndex]) {\n        this.focusCell(cells[prevIndex]);\n      }\n    }\n  };\n\n  private focusCellNull = (): void => {\n    this.focusCell(null);\n  };\n\n  private handleCellFocusIn = (focusEl: HTMLTableCellElement): void => {\n    this.setFocusCell(focusEl, getFirstTabbable(focusEl), true);\n  };\n\n  // Only one cell within a list-item should be focusable at a time. Ensures the active cell is focusable.\n  private setFocusCell = (\n    focusEl: HTMLTableCellElement | null,\n    focusedEl: HTMLElement,\n    saveFocusIndex: boolean,\n  ): void => {\n    const { parentListEl } = this;\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, null);\n    }\n\n    const gridCells = this.getGridCells();\n\n    gridCells.forEach((tableCell) => {\n      tableCell.tabIndex = -1;\n      tableCell.removeAttribute(activeCellTestAttribute);\n    });\n\n    if (!focusEl) {\n      return;\n    }\n\n    focusEl.tabIndex = focusEl === focusedEl ? 0 : -1;\n    focusEl.setAttribute(activeCellTestAttribute, \"\");\n\n    if (saveFocusIndex) {\n      focusMap.set(parentListEl, gridCells.indexOf(focusEl));\n    }\n  };\n\n  private focusCell = (focusEl: HTMLTableCellElement | null, saveFocusIndex = true): void => {\n    const focusedEl = getFirstTabbable(focusEl);\n    this.setFocusCell(focusEl, focusedEl, saveFocusIndex);\n    focusedEl?.focus();\n  };\n}\n","import { Scale } from \"../components/interfaces\";\nimport { HTMLStencilElement } from \"@stencil/core/internal\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n","export const CSS = {\n  handle: \"handle\",\n  handleSelected: \"handle--selected\",\n};\n\nexport const ICONS = {\n  drag: \"drag\",\n};\n\nexport const SUBSTITUTIONS = {\n  itemLabel: \"{itemLabel}\",\n  position: \"{position}\",\n  total: \"{total}\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { HandleMessages } from \"./assets/handle/t9n\";\nimport { HandleChange, HandleNudge } from \"./interfaces\";\nimport { CSS, ICONS, SUBSTITUTIONS } from \"./resources\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\n\n@Component({\n  tag: \"calcite-handle\",\n  styleUrl: \"handle.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Handle implements LoadableComponent, T9nComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"messages\")\n  @Watch(\"label\")\n  @Watch(\"selected\")\n  @Watch(\"setPosition\")\n  @Watch(\"setSize\")\n  handleAriaTextChange(): void {\n    const message = this.getAriaText(\"live\");\n\n    if (message) {\n      this.calciteInternalAssistiveTextChange.emit({\n        message,\n      });\n    }\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button title attribute.\n   */\n  @Prop({ reflect: true }) dragHandle: string;\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   */\n  @Prop() messages: HandleMessages;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setPosition: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setSize: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, disables unselecting the component when blurred.\n   *\n   * @internal\n   */\n  @Prop() blurUnselectDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  @Prop() messageOverrides: Partial<HandleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectMessages(this);\n    connectLocalized(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectMessages(this);\n    disconnectLocalized(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteHandleElement;\n\n  handleButton: HTMLElement;\n\n  @State() effectiveLocale: string;\n\n  @State() defaultMessages: HandleMessages;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the handle is selected and the up or down arrow key is pressed.\n   */\n  @Event({ cancelable: false }) calciteHandleNudge: EventEmitter<HandleNudge>;\n\n  /**\n   * Fires when the assistive text has changed.\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAssistiveTextChange: EventEmitter<HandleChange>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.handleButton?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getTooltip(): string {\n    const { label, messages } = this;\n\n    if (!messages) {\n      return \"\";\n    }\n\n    if (!label) {\n      return messages.dragHandleUntitled;\n    }\n\n    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);\n  }\n\n  getAriaText(type: \"label\" | \"live\"): string {\n    const { setPosition, setSize, label, messages, selected } = this;\n\n    if (!messages || !label || typeof setSize !== \"number\" || typeof setPosition !== \"number\") {\n      return null;\n    }\n\n    const text =\n      type === \"label\"\n        ? selected\n          ? messages.dragHandleChange\n          : messages.dragHandleIdle\n        : selected\n          ? messages.dragHandleActive\n          : messages.dragHandleCommit;\n\n    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());\n    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);\n    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.selected = !this.selected;\n        this.calciteHandleChange.emit();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"up\" });\n        break;\n      case \"ArrowDown\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"down\" });\n        break;\n    }\n  };\n\n  handleBlur = (): void => {\n    if (this.blurUnselectDisabled || this.disabled) {\n      return;\n    }\n\n    if (this.selected) {\n      this.selected = false;\n      this.calciteHandleChange.emit();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486\n      <span\n        aria-disabled={this.disabled ? toAriaBoolean(this.disabled) : null}\n        aria-label={this.disabled ? null : this.getAriaText(\"label\")}\n        aria-pressed={this.disabled ? null : toAriaBoolean(this.selected)}\n        class={{ [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected }}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        role=\"button\"\n        tabIndex={this.disabled ? null : 0}\n        title={this.getTooltip()}\n        // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n        ref={(el): void => {\n          this.handleButton = el;\n        }}\n      >\n        <calcite-icon icon={ICONS.drag} scale=\"s\" />\n      </span>\n    );\n  }\n}\n",":host {\n  @apply flex;\n}\n\n.handle {\n  @apply focus-base\n    flex\n    items-center\n    justify-center\n    self-stretch\n    border-none\n    bg-transparent;\n  color: theme(\"borderColor.color.input\");\n  padding-block: theme(\"spacing.3\");\n  padding-inline: theme(\"spacing.1\");\n  line-height: 0;\n\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n:host(:not([disabled])) .handle {\n  @apply cursor-move;\n  &:hover {\n    @apply bg-foreground-2 text-color-1;\n  }\n  &:focus {\n    @apply text-color-1 focus-inset;\n  }\n  &--selected {\n    @apply bg-foreground-3 text-color-1;\n  }\n}\n\n@include disabled();\n\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\n\nexport interface FetchIconProps {\n  icon: string;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nexport async function fetchIcon({ icon, scale }: FetchIconProps): Promise<CalciteIconPath> {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n  const id = `${iconName}${size}${filled ? \"F\" : \"\"}`;\n\n  if (iconCache[id]) {\n    return iconCache[id];\n  }\n  if (!requestCache[id]) {\n    requestCache[id] = fetch(getAssetPath(`./assets/icon/${id}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${id}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[id];\n  iconCache[id] = path;\n\n  return path;\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Build, Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, scaleToPx } from \"./utils\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: string = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.waitUntilVisible(() => {\n      this.visible = true;\n      this.loadIconPathData();\n    });\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  async componentWillLoad(): Promise<void> {\n    this.loadIconPathData();\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!Build.isBrowser || !icon || !visible) {\n      return;\n    }\n\n    const pathData = await fetchIcon({ icon, scale });\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","import { Build } from \"@stencil/core\";\n\ninterface NavigatorUAData {\n  brands: Array<{ brand: string; version: string }>;\n  mobile: boolean;\n  platform: string;\n}\n\nfunction getUserAgentData(): NavigatorUAData | undefined {\n  return (navigator as any).userAgentData;\n}\n\nexport function getUserAgentString(): string {\n  if (!Build.isBrowser) {\n    return \"\";\n  }\n\n  const uaData = getUserAgentData();\n\n  return uaData?.brands\n    ? uaData.brands.map(({ brand, version }) => `${brand}/${version}`).join(\" \")\n    : navigator.userAgent;\n}\n","import { getUserAgentString } from \"./browser\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FunctionalComponent, h, VNode } from \"@stencil/core\";\n\nexport interface InteractiveComponent {\n  /**\n   * The host element.\n   */\n  readonly el: InteractiveHTMLElement;\n\n  /**\n   * When true, prevents user interaction.\n   *\n   * Notes:\n   *\n   * This prop should use the @Prop decorator and reflect.\n   * The `disabled` Sass mixin must be added to the component's stylesheet.\n   */\n  disabled: boolean;\n}\n\n/**\n * Exported for testing purposes only.\n *\n * @internal\n */\nexport type InteractiveHTMLElement = HTMLElement & Pick<InteractiveComponent, \"disabled\">;\n\n// ⚠️ browser-sniffing is not a best practice and should be avoided ⚠️\nconst isFirefox = /firefox/i.test(getUserAgentString());\n\ntype ParentElement<T extends HTMLElement = HTMLElement> = T | null;\n\nconst disabledElementToParent: WeakMap<InteractiveHTMLElement, ParentElement> | null = isFirefox\n  ? new WeakMap()\n  : null;\n\nfunction interceptedClick(): void {\n  const { disabled } = this as InteractiveHTMLElement;\n\n  if (!disabled) {\n    HTMLElement.prototype.click.call(this);\n  }\n}\n\nfunction onPointerDown(event: PointerEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  const { disabled } = interactiveElement;\n\n  if (disabled) {\n    // prevent click from moving focus on host\n    event.preventDefault();\n  }\n}\n\nconst nonBubblingWhenDisabledMouseEvents = [\"mousedown\", \"mouseup\", \"click\"];\n\nfunction onNonBubblingWhenDisabledMouseEvent(event: MouseEvent): void {\n  const interactiveElement = event.target as InteractiveHTMLElement;\n\n  if (isFirefox && !disabledElementToParent.get(interactiveElement)) {\n    return;\n  }\n\n  // prevent disallowed mouse events from being emitted on the disabled host (per https://github.com/whatwg/html/issues/5886)\n  // ⚠ we generally avoid stopping propagation of events, but this is needed to adhere to the intended spec changes above ⚠\n  if (interactiveElement.disabled) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n}\n\nconst captureOnlyOptions = { capture: true } as const;\n\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n */\nexport function updateHostInteraction(component: InteractiveComponent): void {\n  if (component.disabled) {\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n\n    if (component.el.contains(document.activeElement)) {\n      (document.activeElement as HTMLElement).blur();\n    }\n\n    blockInteraction(component);\n\n    return;\n  }\n\n  restoreInteraction(component);\n\n  component.el.removeAttribute(\"aria-disabled\");\n}\n\nfunction blockInteraction(component: InteractiveComponent): void {\n  component.el.click = interceptedClick;\n\n  if (isFirefox) {\n    const currentParent = getParentElement(component);\n    const trackedParent = disabledElementToParent.get(component.el);\n\n    if (trackedParent !== currentParent) {\n      removeInteractionListeners(trackedParent);\n      disabledElementToParent.set(component.el, currentParent);\n    }\n\n    addInteractionListeners(disabledElementToParent.get(component.el));\n    return;\n  }\n\n  addInteractionListeners(component.el);\n}\n\nfunction addInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.addEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.addEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\nfunction getParentElement(component: InteractiveComponent): ParentElement {\n  return (\n    component.el.parentElement || component.el\n  ); /* assume element is host if it has no parent when connected */\n}\n\nfunction restoreInteraction(component: InteractiveComponent): void {\n  delete component.el.click; // fallback on HTMLElement.prototype.click\n\n  if (isFirefox) {\n    removeInteractionListeners(disabledElementToParent.get(component.el));\n    disabledElementToParent.delete(component.el);\n    return;\n  }\n\n  removeInteractionListeners(component.el);\n}\n\nfunction removeInteractionListeners(element: HTMLElement): void {\n  if (!element) {\n    // this early return path is only applicable to Firefox\n    return;\n  }\n\n  element.removeEventListener(\"pointerdown\", onPointerDown, captureOnlyOptions);\n  nonBubblingWhenDisabledMouseEvents.forEach((event) =>\n    element.removeEventListener(event, onNonBubblingWhenDisabledMouseEvent, captureOnlyOptions),\n  );\n}\n\n/**\n * This utility helps disable components consistently in Firefox.\n *\n * It needs to be called in `connectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function connectInteractive(component: InteractiveComponent): void {\n  if (!component.disabled || !isFirefox) {\n    return;\n  }\n\n  blockInteraction(component);\n}\n\n/**\n * This utility restores interactivity to disabled components consistently in Firefox.\n *\n * It needs to be called in `disconnectedCallback` and is only needed for Firefox as it does not call capture event listeners before non-capture ones (see https://bugzilla.mozilla.org/show_bug.cgi?id=1731504).\n *\n * @param component\n */\nexport function disconnectInteractive(component: InteractiveComponent): void {\n  if (!isFirefox) {\n    return;\n  }\n\n  restoreInteraction(component);\n}\n\nexport interface InteractiveContainerOptions extends JSXAttributes {\n  disabled: boolean;\n}\n\nexport const CSS = {\n  container: \"interaction-container\",\n};\n\nexport function InteractiveContainer(\n  { disabled }: InteractiveContainerOptions,\n  children: VNode[],\n): FunctionalComponent {\n  return (\n    <div class={CSS.container} inert={disabled}>\n      {...children}\n    </div>\n  );\n}\n","import { Build, forceUpdate } from \"@stencil/core\";\n\n/**\n * This helper adds support for knowing when a component has been loaded.\n *\n * Related issue: https://github.com/Esri/calcite-design-system/issues/5369\n * Could be related to Stencil.js issue: https://github.com/ionic-team/stencil/issues/3580\n *\n * Implementing\n *\n * ```\n * export class MyComponent implements LoadableComponent { }\n * ```\n *\n * ```\n *  //--------------------------------------------------------------------------\n *  //\n *  //  Lifecycle\n *  //\n *  //--------------------------------------------------------------------------\n *\n *  componentWillLoad(): void {\n *    setUpLoadableComponent(this);\n *  }\n *\n *  componentDidLoad(): void {\n *    setComponentLoaded(this);\n *  }\n *\n *  // --------------------------------------------------------------------------\n *  //\n *  //  Methods\n *  //\n *  // --------------------------------------------------------------------------\n *\n *  async myMethod(): Promise<void> {\n *    await componentLoaded(this);\n *  }\n * ```\n */\nexport interface LoadableComponent {\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentwillload\n   *\n   * Called once just after the component is first connected to the DOM. Since this method is only called once, it's a good place to load data asynchronously and to setup the state without triggering extra re-renders.\n   */\n  componentWillLoad: () => Promise<void> | void;\n\n  /**\n   * Stencil lifecycle method.\n   * https://stenciljs.com/docs/component-lifecycle#componentdidload\n   *\n   * Called once just after the component is fully loaded and the first render() occurs.\n   */\n  componentDidLoad: () => Promise<void> | void;\n}\n\nconst resolveMap = new WeakMap<LoadableComponent, (value: void | PromiseLike<void>) => void>();\n\nconst promiseMap = new WeakMap<LoadableComponent, Promise<void>>();\n\n/**\n * This helper util sets up the component for the ability to know when the component has been loaded.\n *\n * This should be used in the `componentWillLoad` lifecycle hook.\n *\n * ```\n * componentWillLoad(): void {\n *   setUpLoadableComponent(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setUpLoadableComponent(component: LoadableComponent): void {\n  promiseMap.set(component, new Promise((resolve) => resolveMap.set(component, resolve)));\n}\n\n/**\n * This helper util lets the loadable component know that it is now loaded.\n *\n * This should be used in the `componentDidLoad` lifecycle hook.\n *\n * ```\n * componentDidLoad(): void {\n *   setComponentLoaded(this);\n * }\n * ```\n *\n * @param component\n */\nexport function setComponentLoaded(component: LoadableComponent): void {\n  resolveMap.get(component)();\n}\n\n/**\n * This helper util can be used to ensure a component has been loaded (The \"componentDidLoad\" Stencil lifecycle method has been called).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first.\n *\n * ```\n * async myMethod(): Promise<void> {\n *   await componentLoaded(this);\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport function componentLoaded(component: LoadableComponent): Promise<void> {\n  return promiseMap.get(component);\n}\n\n/**\n * This helper util can be used to ensuring the component is loaded and rendered by the browser (The \"componentDidLoad\" Stencil lifecycle method has been called and any internal elements are focusable).\n *\n * Requires requires `LoadableComponent` to be implemented.\n *\n * A component developer can await this method before proceeding with any logic that requires a component to be loaded first and then an internal element be focused.\n *\n * ```\n * async setFocus(): Promise<void> {\n *   await componentFocusable(this);\n *   this.internalElement?.focus();\n * }\n * ```\n *\n * @param component\n * @returns Promise<void>\n */\nexport async function componentFocusable(component: LoadableComponent): Promise<void> {\n  await componentLoaded(component);\n\n  if (!Build.isBrowser) {\n    return;\n  }\n\n  forceUpdate(component);\n  return new Promise((resolve) => requestAnimationFrame(() => resolve()));\n}\n","import { Build, getAssetPath } from \"@stencil/core\";\nimport { getSupportedLocale, LocalizedComponent } from \"./locale\";\n\nexport type MessageBundle = Record<string, string>;\n\nexport const componentLangToMessageBundleCache: Record<string, Promise<MessageBundle>> = {};\n\nasync function getMessageBundle(lang: string, component: string): Promise<MessageBundle> {\n  const key = `${component}_${lang}`;\n\n  if (componentLangToMessageBundleCache[key]) {\n    return componentLangToMessageBundleCache[key];\n  }\n\n  componentLangToMessageBundleCache[key] = fetch(getAssetPath(`./assets/${component}/t9n/messages_${lang}.json`))\n    .then((resp) => {\n      if (!resp.ok) {\n        throwMessageFetchError();\n      }\n      return resp.json();\n    })\n    .catch(() => throwMessageFetchError());\n\n  return componentLangToMessageBundleCache[key];\n}\n\nfunction throwMessageFetchError(): never {\n  throw new Error(\"could not fetch component message bundle\");\n}\n\nfunction mergeMessages(component: T9nComponent): void {\n  component.messages = {\n    ...component.defaultMessages,\n    ...component.messageOverrides,\n  };\n}\n\n/**\n * This utility sets up the messages used by the component. It should be awaited in the `componentWillLoad` lifecycle hook.\n *\n * @param component\n */\nexport async function setUpMessages(component: T9nComponent): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, component.effectiveLocale);\n  mergeMessages(component);\n}\n\nasync function fetchMessages(component: T9nComponent, lang: string): Promise<MessageBundle> {\n  if (!Build.isBrowser) {\n    return {};\n  }\n\n  const { el } = component;\n  const tag = el.tagName.toLowerCase();\n  const componentName = tag.replace(\"calcite-\", \"\");\n\n  return getMessageBundle(getSupportedLocale(lang, \"t9n\"), componentName);\n}\n\n/**\n * This utility must be set up for the component to update its default message bundle if the locale changes.\n *\n * It can be set up in **either** of the following ways:\n *\n * 1. called from `LocalizedComponent`'s `onLocaleChange` method or\n * 2. called from a watcher configured to watch `LocalizedComponent`'s `effectiveLocale` prop\n *\n * @param component\n * @param lang\n */\nexport async function updateMessages(component: T9nComponent, lang: string): Promise<void> {\n  component.defaultMessages = await fetchMessages(component, lang);\n  mergeMessages(component);\n}\n\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback`\n *\n * **Note**: this must be called after `LocalizedComponent`'s `connectLocalized` method.\n *\n * @param component\n */\nexport function connectMessages(component: T9nComponent): void {\n  component.onMessagesChange = defaultOnMessagesChange;\n}\n\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectMessages(component: T9nComponent): void {\n  component.onMessagesChange = undefined;\n}\n\n/**\n * This interface enables components to support built-in translation strings.\n *\n * **Notes**:\n *\n * This requires `LocalizedComponent` to be implemented.\n * To avoid unnecessary lookups, composite components should set `lang` on internal t9n components.\n */\nexport interface T9nComponent extends LocalizedComponent {\n  el: HTMLElement;\n\n  /**\n   * This property holds all messages used by the component's rendering.\n   *\n   * This prop should use the `@Prop` decorator. It uses `@Prop` decorator for testing purpose only.\n   */\n  messages: MessageBundle;\n\n  /**\n   * This property holds the component's default messages.\n   */\n  defaultMessages: MessageBundle;\n\n  /**\n   * This property holds all user message overrides.\n   *\n   * This prop should use the `@Prop` decorator.\n   */\n  messageOverrides: Partial<MessageBundle>;\n\n  /**\n   * This private method ensures messages are kept in sync.\n   *\n   * This method should be empty and configured to watch for changes on  `messageOverrides` property.\n   *\n   * @Watch(\"messageOverrides\")\n   * onMessagesChange(): void {\n   *  \\/* wired up by t9n util *\\/\n   * }\n   */\n  onMessagesChange(): void;\n}\n\nfunction defaultOnMessagesChange(this: T9nComponent): void {\n  mergeMessages(this);\n}\n","export const CSS = {\n  container: \"container\",\n  containerHover: \"container--hover\",\n  containerBorder: \"container--border\",\n  containerBorderSelected: \"container--border-selected\",\n  containerBorderUnselected: \"container--border-unselected\",\n  contentContainer: \"content-container\",\n  contentContainerSelectable: \"content-container--selectable\",\n  contentContainerHasCenterContent: \"content-container--has-center-content\",\n  nestedContainer: \"nested-container\",\n  nestedContainerHidden: \"nested-container--hidden\",\n  content: \"content\",\n  customContent: \"custom-content\",\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  label: \"label\",\n  description: \"description\",\n  contentEnd: \"content-end\",\n  contentBottom: \"content-bottom\",\n  actionsEnd: \"actions-end\",\n  selectionContainer: \"selection-container\",\n  selectionContainerSingle: \"selection-container--single\",\n  openContainer: \"open-container\",\n  dragContainer: \"drag-container\",\n};\n\nexport const SLOTS = {\n  actionsStart: \"actions-start\",\n  contentStart: \"content-start\",\n  content: \"content\",\n  contentBottom: \"content-bottom\",\n  contentEnd: \"content-end\",\n  actionsEnd: \"actions-end\",\n};\n\n// Set to zero to extend until the end of the table section.\nexport const MAX_COLUMNS = 0;\n\nexport const ICONS = {\n  selectedMultiple: \"check-square-f\",\n  selectedSingle: \"bullet-point-large\",\n  unselectedMultiple: \"square\",\n  unselectedSingle: \"bullet-point-large\",\n  closedLTR: \"chevron-right\",\n  closedRTL: \"chevron-left\",\n  open: \"chevron-down\",\n  blank: \"blank\",\n  close: \"x\",\n};\n\nexport const activeCellTestAttribute = \"data-test-active\";\n","import { Build } from \"@stencil/core\";\n\nconst listSelector = \"calcite-list\";\nconst listItemGroupSelector = \"calcite-list-item-group\";\nconst listItemSelector = \"calcite-list-item\";\n\nexport function getListItemChildLists(slotEl: HTMLSlotElement): HTMLCalciteListElement[] {\n  return Array.from(\n    slotEl.assignedElements({ flatten: true }).filter((el) => el.matches(listSelector)),\n  ) as HTMLCalciteListElement[];\n}\n\nexport function getListItemChildren(slotEl: HTMLSlotElement): HTMLCalciteListItemElement[] {\n  const assignedElements = slotEl.assignedElements({ flatten: true });\n\n  const listItemGroupChildren = (\n    assignedElements.filter((el) => el?.matches(listItemGroupSelector)) as HTMLCalciteListItemGroupElement[]\n  )\n    .map((group) => Array.from(group.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  const listItemChildren = assignedElements.filter(\n    (el) => el?.matches(listItemSelector),\n  ) as HTMLCalciteListItemElement[];\n\n  const listItemListChildren = (assignedElements.filter((el) => el?.matches(listSelector)) as HTMLCalciteListElement[])\n    .map((list) => Array.from(list.querySelectorAll(listItemSelector)))\n    .reduce((previousValue, currentValue) => [...previousValue, ...currentValue], []);\n\n  return [...listItemListChildren, ...listItemGroupChildren, ...listItemChildren];\n}\n\nexport function updateListItemChildren(listItemChildren: HTMLCalciteListItemElement[]): void {\n  listItemChildren.forEach((listItem) => {\n    listItem.setPosition = listItemChildren.indexOf(listItem) + 1;\n    listItem.setSize = listItemChildren.length;\n  });\n}\n\nexport function getDepth(element: HTMLElement, includeGroup = false): number {\n  if (!Build.isBrowser) {\n    return 0;\n  }\n\n  const expression = includeGroup\n    ? \"ancestor::calcite-list-item | ancestor::calcite-list-item-group\"\n    : \"ancestor::calcite-list-item\";\n\n  const result = document.evaluate(expression, element, null, XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE, null);\n\n  return result.snapshotLength;\n}\n"],"names":["focusMap","Map","ListItem","proxyCustomElement","HTMLElement","dragHandleSelectedChangeHandler","event","this","dragSelected","target","selected","calciteListItemDragHandleChange","emit","stopPropagation","emitInternalListItemActive","calciteInternalListItemActive","focusCellHandle","handleCellFocusIn","handleGridEl","focusCellActionsStart","actionsStartEl","focusCellContent","contentEl","focusCellActionsEnd","actionsEndEl","handleCloseClick","closed","calciteListItemClose","handleContentSlotChange","hasCustomContent","slotChangeHasAssignedElement","handleActionsStartSlotChange","hasActionsStart","handleActionsEndSlotChange","hasActionsEnd","handleContentStartSlotChange","hasContentStart","handleContentEndSlotChange","hasContentEnd","handleContentBottomSlotChange","hasContentBottom","handleDefaultSlotChange","handleOpenableChange","handleToggleClick","toggle","value","arguments","length","undefined","_this","open","calciteListItemToggle","handleItemClick","defaultPrevented","toggleSelected","shiftKey","selectionMode","disabled","calciteInternalListItemSelectMultiple","selectMultiple","calciteListItemSelect","handleItemKeyDown","key","composedPath","containerEl","openable","cells","getGridCells","currentIndex","findIndex","cell","includes","preventDefault","nextIndex","focusCell","prevIndex","calciteInternalFocusPreviousItem","focus","focusCellNull","focusEl","setFocusCell","getFirstTabbable","focusedEl","saveFocusIndex","parentListEl","set","gridCells","forEach","tableCell","tabIndex","removeAttribute","activeCellTestAttribute","setAttribute","indexOf","activeHandler","active","handleClosedChange","emitCalciteInternalListItemChange","handleDisabledChange","handleSelectedChange","calciteInternalListItemSelect","onMessagesChange","handleCalciteInternalListDefaultSlotChanges","defaultSlotEl","effectiveLocaleChange","updateMessages","effectiveLocale","connectedCallback","connectInteractive","connectLocalized","connectMessages","el","closest","level","getDepth","visualLevel","setSelectionDefaults","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","disconnectLocalized","disconnectMessages","setFocus","componentFocusable","focusIndex","get","renderSelected","selectionAppearance","h","class","CSS","selectionContainer","selectionContainerSingle","onClick","icon","ICONS","selectedMultiple","selectedSingle","unselectedMultiple","unselectedSingle","scale","renderDragHandle","label","dragHandle","dragDisabled","setPosition","setSize","dragContainer","onFocusin","role","ref","onCalciteHandleChange","renderOpen","messages","dir","getElementDir","closedRTL","closedLTR","tooltip","collapse","expand","openContainer","title","renderActionsStart","actionsStart","hidden","name","SLOTS","onSlotchange","renderActionsEnd","closable","actionsEnd","appearance","close","text","renderContentStart","contentStart","renderCustomContent","customContent","content","renderContentEnd","contentEnd","renderContentBottom","contentBottom","style","concat","renderDefaultContainer","nestedContainer","nestedContainerHidden","renderContentProperties","description","renderContentContainer","hasCenterContent","contentContainer","contentContainerSelectable","contentContainerHasCenterContent","render","showBorder","borderSelected","borderUnselected","Host","InteractiveContainer","toAriaBoolean","container","containerHover","containerBorder","containerBorderSelected","containerBorderUnselected","onFocus","onKeyDown","calciteInternalListItemChange","slotEl","listItemChildren","getListItemChildren","listItemChildLists","getListItemChildLists","updateListItemChildren","filter","getIconScale","componentScale","async","componentOnReady","isStencilEl","Promise","resolve","requestAnimationFrame","SUBSTITUTIONS","Handle","handleKeyDown","calciteHandleChange","calciteHandleNudge","direction","handleBlur","blurUnselectDisabled","handleAriaTextChange","message","getAriaText","calciteInternalAssistiveTextChange","_this$handleButton","handleButton","getTooltip","replace","dragHandleUntitled","type","dragHandleChange","dragHandleIdle","dragHandleActive","dragHandleCommit","toString","onBlur","iconCache","requestCache","scaleToPx","s","m","l","fetchIcon","_ref","size","numberLeadingName","isNaN","Number","charAt","parts","split","firstNonDigitInPartPattern","map","part","partIndex","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","id","fetch","getAssetPath","then","resp","json","catch","console","error","path","Icon","waitUntilVisible","visible","loadIconPathData","_this$intersectionObs","intersectionObserver","disconnect","flipRtl","pathData","textLabel","semantic","paths","svg","fill","height","viewBox","width","xmlns","d","opacity","Build","isBrowser","callback","createObserver","entries","entry","isIntersecting","rootMargin","observe","getUserAgentString","uaData","navigator","userAgentData","brands","brand","version","userAgent","isFirefox","test","disabledElementToParent","WeakMap","interceptedClick","prototype","click","call","onPointerDown","interactiveElement","nonBubblingWhenDisabledMouseEvents","onNonBubblingWhenDisabledMouseEvent","stopImmediatePropagation","captureOnlyOptions","capture","component","contains","document","activeElement","blur","blockInteraction","restoreInteraction","currentParent","parentElement","getParentElement","trackedParent","removeInteractionListeners","addInteractionListeners","element","addEventListener","delete","removeEventListener","_ref2","children","inert","resolveMap","promiseMap","componentLoaded","forceUpdate","componentLangToMessageBundleCache","throwMessageFetchError","Error","mergeMessages","defaultMessages","messageOverrides","fetchMessages","lang","componentName","tagName","toLowerCase","ok","getMessageBundle","getSupportedLocale","defaultOnMessagesChange","MAX_COLUMNS","blank","listSelector","listItemGroupSelector","listItemSelector","Array","from","assignedElements","flatten","matches","listItemGroupChildren","group","querySelectorAll","reduce","previousValue","currentValue","list","listItem","includeGroup","expression","evaluate","XPathResult","UNORDERED_NODE_SNAPSHOT_TYPE","snapshotLength"],"sourceRoot":""}