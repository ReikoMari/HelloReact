"use strict";(self.webpackChunkhelloworld=self.webpackChunkhelloworld||[]).push([[77814],{77814:(t,o,e)=>{e.r(o),e.d(o,{submitValidateNetworkTopologyJob:()=>r,validateNetworkTopology:()=>l});var i=e(3825),a=e(50076),n=e(54994),s=e(11187);async function l(t,o,e){var a,l;const r=(0,n.Dl)(t),d=o.toJSON();o.validationSet&&(d.validationSet=JSON.stringify(o.validationSet));const u={...d,returnEdits:!0,f:"json"},v=(0,n.lF)({...r.query,...u}),c=(0,n.jV)(v,{...e,method:"post"}),y="".concat(r.path,"/validateNetworkTopology"),{data:p}=await(0,i.A)(y,c),w=s.A.fromJSON(p);return w.serviceEdits=null!==(a=null===(l=w.serviceEdits)||void 0===l?void 0:l.map((t=>({layerId:t.id,editedFeatures:t.editedFeatures}))))&&void 0!==a?a:[],w}async function r(t,o,e){if(!o.gdbVersion)throw new a.A("submit-validate-network-topology-job:missing-gdb-version","version is missing");const s=(0,n.Dl)(t),l=o.toJSON();o.validationSet&&(l.validationSet=JSON.stringify(o.validationSet));const r=(0,n.jV)(s.query,{query:(0,n.lF)({...l,returnEdits:!0,async:!0,f:"json"}),...e,method:"post"}),d="".concat(s.path,"/validateNetworkTopology"),{data:u}=await(0,i.A)(d,r);return u?u.statusUrl:null}}}]);
//# sourceMappingURL=77814.edfb2677.chunk.js.map