{"version":3,"file":"static/js/51863.7d086d3e.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/date.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-day/date-picker-day.scss?tag=calcite-date-picker-day&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-day/date-picker-day.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month/date-picker-month.scss?tag=calcite-date-picker-month&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month/date-picker-month.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/date-picker-month-header.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/date-picker-month-header.scss?tag=calcite-date-picker-month-header&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/date-picker.scss?tag=calcite-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/date-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/input-date-picker.scss?tag=calcite-input-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/input-date-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/utils.ts"],"sourcesContent":["import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends JSXBase.HTMLAttributes {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children) => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return <HeadingTag {...props}>{children}</HeadingTag>;\n};\n","import { DateLocaleData } from \"../components/date-picker/utils\";\nimport { numberStringFormatter } from \"./locale\";\n\nexport interface HoverRange {\n  focused: \"end\" | \"start\";\n  start: Date;\n  end: Date;\n}\n\n/**\n * Check if date is within a min and max\n *\n * @param date\n * @param min\n * @param max\n */\nexport function inRange(date: Date, min?: Date | string, max?: Date | string): boolean {\n  if (!date) {\n    return;\n  }\n  const time = date.getTime();\n  const afterMin = !(min instanceof Date) || time >= min.getTime();\n  const beforeMax = !(max instanceof Date) || time <= max.getTime();\n  return afterMin && beforeMax;\n}\n\n/**\n * Ensures date is within range,\n * returns min or max if out of bounds\n *\n * @param date\n * @param min\n * @param max\n */\nexport function dateFromRange(date?: any, min?: Date | string, max?: Date | string): Date | null {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n  const time = date.getTime();\n  const beforeMin = min instanceof Date && time < min.getTime();\n  const afterMax = max instanceof Date && time > max.getTime();\n  if (beforeMin) {\n    return min as Date;\n  }\n  if (afterMax) {\n    return max as Date;\n  }\n  return date;\n}\n\n/**\n * Parse an iso8601 string (YYYY-mm-dd) into a valid date.\n * TODO: handle time when time of day UI is added\n *\n * @param iso8601\n * @param isEndDate\n */\nexport function dateFromISO(iso8601: string | Date, isEndDate = false): Date | null {\n  if (iso8601 instanceof Date) {\n    return iso8601;\n  }\n  if (!iso8601 || typeof iso8601 !== \"string\") {\n    return null;\n  }\n  const d = iso8601.split(/[: T-]/).map(parseFloat);\n  const date = new Date(d[0], (d[1] || 1) - 1, d[2] || 1);\n  date.setFullYear(d[0]);\n  if (isNaN(date.getTime())) {\n    throw new Error(`Invalid ISO 8601 date: \"${iso8601}\"`);\n  }\n  if (isEndDate) {\n    return setEndOfDay(date);\n  }\n  return date;\n}\n\n/**\n * Parse a localized date string into a valid Date.\n * return false if date is invalid, or out of range\n *\n * @param value\n * @param localeData\n */\nexport function dateFromLocalizedString(value: string, localeData: DateLocaleData): Date {\n  if (!localeData) {\n    return null;\n  }\n  const { separator } = localeData;\n  const parts = parseDateString(value, localeData);\n\n  const { day, month } = parts;\n  const year = parseCalendarYear(parts.year, localeData);\n\n  const date = new Date(year, month, day);\n  date.setFullYear(year);\n\n  const validDay = day > 0;\n  const validMonth = month > -1;\n  const validDate = !isNaN(date.getTime());\n  const validLength = value.split(separator).filter((c) => c).length > 2;\n  const validYear = year.toString().length > 0;\n\n  if (validDay && validMonth && validDate && validLength && validYear) {\n    return date;\n  }\n  return null;\n}\n\nexport function parseCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"read\");\n}\n\nexport function formatCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"write\");\n}\n\nfunction processCalendarYear(year: number, localeData: DateLocaleData, mode: \"read\" | \"write\"): number {\n  if (localeData[\"default-calendar\"] !== \"buddhist\") {\n    return year;\n  }\n\n  const BUDDHIST_CALENDAR_YEAR_OFFSET = 543;\n  const yearOffset = BUDDHIST_CALENDAR_YEAR_OFFSET * (mode === \"read\" ? -1 : 1);\n\n  return year + yearOffset;\n}\n\n/**\n * Retrieve day, month, and year strings from a localized string\n *\n * @param string\n * @param localeData\n */\nexport function datePartsFromLocalizedString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: string; month: string; year: string } {\n  const { separator, unitOrder } = localeData;\n  const order = getOrder(unitOrder);\n  const values = string.split(separator).map((part) => numberStringFormatter.delocalize(part));\n  const day = values[order.indexOf(\"d\")];\n  const month = values[order.indexOf(\"m\")];\n  const year = values[order.indexOf(\"y\")];\n  return { day, month, year };\n}\n\n/**\n * Return first portion of ISO string (YYYY-mm-dd)\n *\n * @param date\n */\nexport function dateToISO(date?: Date): string {\n  if (date instanceof Date) {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0];\n  }\n  return \"\";\n}\n\n/**\n * Retrieve day, month, and year strings from a ISO string (YYYY-mm-dd)\n *\n * @param string\n * @param isoDate\n */\nexport function datePartsFromISO(isoDate: string): { day: string; month: string; year: string } {\n  const dateParts = isoDate.split(\"-\");\n  return { day: dateParts[2], month: dateParts[1], year: dateParts[0] };\n}\n\n/**\n * Check if two dates are the same day, month, year\n *\n * @param d1\n * @param d2\n */\nexport function sameDate(d1: Date, d2: Date): boolean {\n  return (\n    d1 instanceof Date &&\n    d2 instanceof Date &&\n    d1.getDate() === d2.getDate() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getFullYear() === d2.getFullYear()\n  );\n}\n\n/**\n * Get a date one month in the past\n *\n * @param date\n */\nexport function prevMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month - 1);\n  // date doesn't exist in new month, use last day\n  if (month === nextDate.getMonth()) {\n    return new Date(date.getFullYear(), month, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Get a date one month in the future\n *\n * @param date\n */\nexport function nextMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month + 1);\n  // date doesn't exist in new month, use last day\n  if ((month + 2) % 7 === nextDate.getMonth() % 7) {\n    return new Date(date.getFullYear(), month + 2, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Parse numeric units for day, month, and year from a localized string\n * month starts at 0 (can pass to date constructor)\n * can return values as number or string\n *\n * @param string\n * @param localeData\n */\nexport function parseDateString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: number; month: number; year: number } {\n  const { day, month, year } = datePartsFromLocalizedString(string, localeData);\n  return {\n    day: parseInt(day),\n    month: parseInt(month) - 1, // this subtracts by 1 because the month in the Date constructor is zero-based https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\n    year: parseInt(year),\n  };\n}\n\ntype unitOrderSignifier = \"m\" | \"d\" | \"y\";\n\n/**\n * Based on the unitOrder string, find order of month, day, and year for locale\n *\n * @param unitOrder\n */\nexport function getOrder(unitOrder: string): unitOrderSignifier[] {\n  const signifiers: unitOrderSignifier[] = [\"d\", \"m\", \"y\"];\n  const order = unitOrder.toLowerCase();\n  return signifiers.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n}\n\n/**\n * Get number of days between two dates\n *\n * @param date1\n * @param date2\n */\nexport function getDaysDiff(date1: Date, date2: Date): number {\n  const ts1 = date1.getTime();\n  const ts2 = date2.getTime();\n  return (ts1 - ts2) / (1000 * 3600 * 24);\n}\n\n/**\n * Set time of the day to the end.\n *\n * @param {Date} date Date.\n * @returns {Date} Date with time set to end of day .\n */\nexport function setEndOfDay(date: Date): Date {\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n",":host {\n  @apply cursor-pointer flex relative text-color-3;\n}\n\n@include disabled();\n\n@mixin range-part-base() {\n  &:before,\n  &:after {\n    @apply absolute pointer-events-none;\n    inset-block: 0;\n    content: \"\";\n    block-size: var(--calcite-internal-day-size);\n    inline-size: var(--calcite-internal-day-size);\n  }\n}\n\n@mixin range-part-edge-end() {\n  &:before {\n    inset-inline-end: 50%;\n  }\n  &:after {\n    inset-inline-start: 50%;\n    border-start-end-radius: var(--calcite-internal-day-size);\n    border-end-end-radius: var(--calcite-internal-day-size);\n    inline-size: calc(var(--calcite-internal-day-size) / 2);\n  }\n}\n\n@mixin range-part-edge-start() {\n  &:before {\n    inset-inline-end: 50%;\n    border-start-start-radius: var(--calcite-internal-day-size);\n    border-end-start-radius: var(--calcite-internal-day-size);\n    inline-size: calc(var(--calcite-internal-day-size) / 2);\n  }\n  &:after {\n    inset-inline-start: 50%;\n  }\n}\n\n@mixin range-part-middle() {\n  &:before {\n    inset-inline-end: 50%;\n    border-radius: 0;\n  }\n  &:after {\n    inset-inline-start: 50%;\n    border-radius: 0;\n  }\n}\n\n.day-v-wrapper {\n  @apply flex-auto;\n}\n\n.day-wrapper {\n  @apply flex\n    flex-col\n    items-center\n    relative;\n}\n\n:host([range]),\n:host([range-hover]) {\n  .day-wrapper {\n    @include range-part-base();\n  }\n}\n\n.day {\n  @apply text-n2h\n    text-color-3\n    flex\n    focus-base\n    items-center\n    justify-center\n    rounded-full\n    leading-none\n    transition-default\n    z-default;\n  background: none;\n  box-shadow: 0 0 0 2px transparent;\n  block-size: var(--calcite-internal-day-size);\n  inline-size: var(--calcite-internal-day-size);\n}\n\n.text {\n  @apply mt-px mb-0;\n  margin-inline-start: theme(\"spacing.0\");\n}\n\n:host([scale=\"s\"]) {\n  --calcite-internal-day-size: 27px;\n\n  .day-v-wrapper {\n    @apply py-0.5;\n  }\n  .day-wrapper {\n    @apply p-0;\n  }\n  .day {\n    @apply text-n2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-day-size: 33px;\n\n  .day-v-wrapper {\n    @apply py-1;\n  }\n  .day-wrapper {\n    @apply p-0;\n  }\n  .day {\n    @apply text-n1;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-day-size: 43px;\n\n  .day-v-wrapper {\n    @apply py-1;\n  }\n  .day-wrapper {\n    @apply px-1;\n  }\n  .day {\n    @apply text-0;\n  }\n}\n\n:host(:not([current-month])) .day {\n  @apply opacity-disabled;\n}\n\n:host(:hover:not([disabled]):not([selected])),\n:host([active]:not([range]):not([selected])) {\n  & .day {\n    @apply bg-foreground-2 text-color-1;\n  }\n}\n\n:host(:focus),\n:host([active]) {\n  @apply outline-none;\n}\n\n:host(:focus:not([disabled])) .day {\n  @apply focus-outset;\n}\n\n:host([selected]) .day {\n  @apply font-medium;\n  background-color: var(--calcite-color-brand);\n  color: var(--calcite-color-foreground-1);\n}\n\n:host(:focus:not([disabled])),\n:host([start-of-range]:not(:focus)),\n:host([end-of-range]:not(:focus)) {\n  .day {\n    box-shadow: 0 0 0 2px var(--calcite-color-foreground-1);\n  }\n}\n\n:host([range-hover]:not([selected])),\n:host([highlighted]:not([selected])) {\n  .day-wrapper {\n    @include range-part-middle();\n  }\n\n  .day {\n    @apply text-color-1;\n  }\n}\n\n:host([highlighted]),\n:host([selected]:not(.hover--outside-range)) {\n  .day-wrapper {\n    &:before,\n    &:after {\n      background-color: var(--calcite-color-foreground-current);\n    }\n  }\n}\n\n:host([range-hover]:not([selected])) {\n  .day-wrapper {\n    &:before,\n    &:after {\n      @apply bg-foreground-2;\n    }\n  }\n}\n\n:host(:hover[range-hover]:not([selected]).focused--end),\n:host([highlighted][end-of-range]),\n:host([highlighted][range-edge=\"end\"]),\n:host([range-hover][range-edge=\"end\"]),\n:host(:hover[range-hover].focused--end.hover--outside-range) {\n  .day-wrapper {\n    @include range-part-edge-end();\n  }\n}\n\n:host([highlighted][start-of-range]),\n:host([highlighted][range-edge=\"start\"]),\n:host([range-hover][range-edge=\"start\"]),\n:host(:hover[range-hover]:not([selected]).focused--start),\n:host([start-of-range].hover--inside-range),\n:host(:hover[range-hover].focused--start.hover--outside-range) {\n  .day-wrapper {\n    @include range-part-edge-start();\n  }\n}\n\n:host([range-hover][start-of-range][range-edge=\"end\"]),\n:host([range-hover][end-of-range][range-edge=\"start\"]),\n:host([start-of-range][range-edge=\"end\"].hover--inside-range),\n:host([end-of-range]) {\n  .day-wrapper {\n    &:after,\n    &:before {\n      content: unset;\n    }\n  }\n}\n\n:host(:hover[range-hover]:not([selected]).focused--start),\n:host(:hover[range-hover]:not([selected]).focused--end),\n:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range),\n:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) {\n  .day {\n    box-shadow: 0 0 0 2px var(--calcite-color-foreground-1);\n  }\n}\n\n@media (forced-colors: active) {\n  .day {\n    @apply rounded-none;\n  }\n\n  :host([selected]) {\n    outline: 2px solid canvasText;\n  }\n\n  :host(:hover:not([selected])) {\n    .day {\n      border-radius: 50%;\n    }\n  }\n\n  :host([range][selected]),\n  :host([highlighted]),\n  :host([range-hover]:not([selected])) {\n    .day-wrapper {\n      &:before,\n      &:after {\n        background-color: highlight;\n      }\n    }\n  }\n\n  :host([range-hover]),\n  :host([range][selected][start-of-range]),\n  :host([range][selected][end-of-range]) {\n    .day-wrapper {\n      &:before,\n      &:after {\n        background-color: canvas;\n      }\n    }\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { dateToISO } from \"../../utils/date\";\n\nimport { closestElementCrossShadowBoundary, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { Scale } from \"../interfaces\";\n\n@Component({\n  tag: \"calcite-date-picker-day\",\n  styleUrl: \"date-picker-day.scss\",\n  shadow: true,\n})\nexport class DatePickerDay implements InteractiveComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Day of the month to be shown. */\n  @Prop() day!: number;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Date is in the current month. */\n  @Prop({ reflect: true }) currentMonth = false;\n\n  /**  When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** Date is currently highlighted as part of the range, */\n  @Prop({ reflect: true }) highlighted = false;\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /**\n   * When `true`, highlight styling for edge dates is applied.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) rangeEdge: \"start\" | \"end\" | undefined;\n\n  /** Date is the start of date range. */\n  @Prop({ reflect: true }) startOfRange = false;\n\n  /** Date is the end of date range. */\n  @Prop({ reflect: true }) endOfRange = false;\n\n  /** Date is being hovered and within the set range. */\n  @Prop({ reflect: true }) rangeHover = false;\n\n  /** When `true`, the component is active. */\n  @Prop({ reflect: true }) active = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** The component's value. */\n  @Prop() value: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  onClick = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteDaySelect.emit();\n  };\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      !this.disabled && this.calciteDaySelect.emit();\n      event.preventDefault();\n    }\n  };\n\n  @Listen(\"pointerover\")\n  pointerOverHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteInternalDayHover.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects day.\n   */\n  @Event({ cancelable: false }) calciteDaySelect: EventEmitter<void>;\n\n  /**\n   * Fires when user hovers over a day.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDayHover: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(\n      this.el,\n      \"calcite-date-picker\",\n    ) as HTMLCalciteDatePickerElement;\n  }\n\n  render(): VNode {\n    const dayId = dateToISO(this.value).replaceAll(\"-\", \"\");\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n    const formattedDay = numberStringFormatter.localize(String(this.day));\n    const dayLabel = this.dateTimeFormat.format(this.value);\n\n    return (\n      <Host\n        aria-disabled={toAriaBoolean(this.disabled)}\n        aria-label={dayLabel}\n        aria-selected={toAriaBoolean(this.active)}\n        id={dayId}\n        onClick={this.onClick}\n        onKeyDown={this.keyDownHandler}\n        role=\"button\"\n        tabIndex={this.active && !this.disabled ? 0 : -1}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div aria-hidden=\"true\" class={{ \"day-v-wrapper\": true }}>\n            <div class=\"day-wrapper\">\n              <span class=\"day\">\n                <span class=\"text\">{formattedDay}</span>\n              </span>\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerDayElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n}\n","@include base-component();\n\n.calendar {\n  @apply mb-1;\n}\n\n.week-headers {\n  @apply border-color-3\n    flex\n    border-0\n    border-t\n    border-solid\n    py-0\n    px-1;\n}\n\n.week-header {\n  @apply text-color-3\n    text-center\n    font-bold;\n  inline-size: calc(100% / 7);\n}\n\n.day {\n  @apply flex\n  min-w-0\n  justify-center;\n  inline-size: calc(100% / 7);\n\n  calcite-date-picker-day {\n    @apply w-full;\n  }\n}\n\n:host([scale=\"s\"]) .week-header {\n  @apply text-n2h px-0 pt-2 pb-3;\n}\n\n:host([scale=\"m\"]) .week-header {\n  @apply text-n2h px-0 pt-3 pb-4;\n}\n\n:host([scale=\"l\"]) .week-header {\n  @apply text-n1h px-0 pt-4 pb-5;\n}\n\n.week-days {\n  @apply flex\n    flex-row\n    py-0;\n  padding-inline: 6px;\n  &:focus {\n    @apply outline-none;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { dateFromRange, HoverRange, inRange, sameDate } from \"../../utils/date\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Scale } from \"../interfaces\";\n\nconst DAYS_PER_WEEK = 7;\nconst DAYS_MAXIMUM_INDEX = 6;\n\ninterface Day {\n  active: boolean;\n  currentMonth?: boolean;\n  date: Date;\n  day: number;\n  dayInWeek?: number;\n  ref?: boolean;\n}\n\n@Component({\n  tag: \"calcite-date-picker-month\",\n  styleUrl: \"date-picker-month.scss\",\n  shadow: true,\n})\nexport class DatePickerMonth {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** Already selected date.*/\n  @Prop() selectedDate: Date;\n\n  /** The currently active Date.*/\n  @Prop() activeDate: Date = new Date();\n\n  /** Start date currently active. */\n  @Prop() startDate?: Date;\n\n  /** End date currently active.  */\n  @Prop() endDate?: Date;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * CLDR locale data for current locale.\n   *\n   * @internal\n   */\n  @Prop() localeData: DateLocaleData;\n\n  /** The range of dates currently being hovered. */\n  @Prop() hoverRange: HoverRange;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects the date.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  /**\n   * Fires when user hovers the date.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerHover: EventEmitter<Date>;\n\n  /**\n   * Active date for the user keyboard access.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerActiveDateChange: EventEmitter<Date>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerMouseOut: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const isRTL = this.el.dir === \"rtl\";\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.addDays(-7);\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.addDays(isRTL ? -1 : 1);\n        break;\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.addDays(7);\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.addDays(isRTL ? 1 : -1);\n        break;\n      case \"PageUp\":\n        event.preventDefault();\n        this.addMonths(-1);\n        break;\n      case \"PageDown\":\n        event.preventDefault();\n        this.addMonths(1);\n        break;\n      case \"Home\":\n        event.preventDefault();\n        this.activeDate.setDate(1);\n        this.addDays();\n        break;\n      case \"End\":\n        event.preventDefault();\n        this.activeDate.setDate(\n          new Date(this.activeDate.getFullYear(), this.activeDate.getMonth() + 1, 0).getDate(),\n        );\n        this.addDays();\n        break;\n      case \"Enter\":\n      case \" \":\n        event.preventDefault();\n        break;\n      case \"Tab\":\n        this.activeFocus = false;\n    }\n  };\n\n  /**\n   * Once user is not interacting via keyboard,\n   * disable auto focusing of active date\n   */\n  disableActiveFocus = (): void => {\n    this.activeFocus = false;\n  };\n\n  @Listen(\"pointerout\")\n  pointerOutHandler(): void {\n    this.calciteInternalDatePickerMouseOut.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  render(): VNode {\n    const month = this.activeDate.getMonth();\n    const year = this.activeDate.getFullYear();\n    const startOfWeek = this.localeData.weekStart % 7;\n    const { abbreviated, short, narrow } = this.localeData.days;\n    const weekDays =\n      this.scale === \"s\" ? narrow || short || abbreviated : short || abbreviated || narrow;\n    const adjustedWeekDays = [...weekDays.slice(startOfWeek, 7), ...weekDays.slice(0, startOfWeek)];\n    const curMonDays = this.getCurrentMonthDays(month, year);\n    const prevMonDays = this.getPreviousMonthDays(month, year, startOfWeek);\n    const nextMonDays = this.getNextMonthDays(month, year, startOfWeek);\n    let dayInWeek = 0;\n    const getDayInWeek = () => dayInWeek++ % 7;\n\n    const days: Day[] = [\n      ...prevMonDays.map((day) => {\n        return {\n          active: false,\n          day,\n          dayInWeek: getDayInWeek(),\n          date: new Date(year, month - 1, day),\n        };\n      }),\n      ...curMonDays.map((day) => {\n        const date = new Date(year, month, day);\n        const active = sameDate(date, this.activeDate);\n        return {\n          active,\n          currentMonth: true,\n          day,\n          dayInWeek: getDayInWeek(),\n          date,\n          ref: true,\n        };\n      }),\n      ...nextMonDays.map((day) => {\n        return {\n          active: false,\n          day,\n          dayInWeek: getDayInWeek(),\n          date: new Date(year, month + 1, day),\n        };\n      }),\n    ];\n\n    const weeks: Day[][] = [];\n    for (let i = 0; i < days.length; i += 7) {\n      weeks.push(days.slice(i, i + 7));\n    }\n\n    return (\n      <Host onFocusOut={this.disableActiveFocus} onKeyDown={this.keyDownHandler}>\n        <div class=\"calendar\" role=\"grid\">\n          <div class=\"week-headers\" role=\"row\">\n            {adjustedWeekDays.map((weekday) => (\n              <span class=\"week-header\" role=\"columnheader\">\n                {weekday}\n              </span>\n            ))}\n          </div>\n          {weeks.map((days) => (\n            <div class=\"week-days\" role=\"row\">\n              {days.map((day) => this.renderDateDay(day))}\n            </div>\n          ))}\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthElement;\n\n  private activeFocus: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Add n months to the current month\n   *\n   * @param step\n   */\n  private addMonths(step: number) {\n    const nextDate = new Date(this.activeDate);\n    nextDate.setMonth(this.activeDate.getMonth() + step);\n    this.calciteInternalDatePickerActiveDateChange.emit(\n      dateFromRange(nextDate, this.min, this.max),\n    );\n    this.activeFocus = true;\n  }\n\n  /**\n   * Add n days to the current date\n   *\n   * @param step\n   */\n  private addDays(step = 0) {\n    const nextDate = new Date(this.activeDate);\n    nextDate.setDate(this.activeDate.getDate() + step);\n    this.calciteInternalDatePickerActiveDateChange.emit(\n      dateFromRange(nextDate, this.min, this.max),\n    );\n    this.activeFocus = true;\n  }\n\n  /**\n   * Get dates for last days of the previous month\n   *\n   * @param month\n   * @param year\n   * @param startOfWeek\n   */\n  private getPreviousMonthDays(month: number, year: number, startOfWeek: number): number[] {\n    const lastDate = new Date(year, month, 0);\n    const date = lastDate.getDate();\n    const startDay = lastDate.getDay();\n    const days = [];\n\n    if (startDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {\n      return days;\n    }\n\n    if (startDay === startOfWeek) {\n      return [date];\n    }\n\n    for (let i = (DAYS_PER_WEEK + startDay - startOfWeek) % DAYS_PER_WEEK; i >= 0; i--) {\n      days.push(date - i);\n    }\n    return days;\n  }\n\n  /**\n   * Get dates for the current month\n   *\n   * @param month\n   * @param year\n   */\n  private getCurrentMonthDays(month: number, year: number): number[] {\n    const num = new Date(year, month + 1, 0).getDate();\n    const days = [];\n    for (let i = 0; i < num; i++) {\n      days.push(i + 1);\n    }\n    return days;\n  }\n\n  /**\n   * Get dates for first days of the next month\n   *\n   * @param month\n   * @param year\n   * @param startOfWeek\n   */\n  private getNextMonthDays(month: number, year: number, startOfWeek: number): number[] {\n    const endDay = new Date(year, month + 1, 0).getDay();\n    const days = [];\n    if (endDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {\n      return days;\n    }\n    for (let i = 0; i < (DAYS_MAXIMUM_INDEX - (endDay - startOfWeek)) % DAYS_PER_WEEK; i++) {\n      days.push(i + 1);\n    }\n    return days;\n  }\n\n  /**\n   * Determine if the date is in between the start and end dates\n   *\n   * @param date\n   */\n  private betweenSelectedRange(date: Date): boolean {\n    return !!(\n      this.startDate &&\n      this.endDate &&\n      date > this.startDate &&\n      date < this.endDate &&\n      !this.isRangeHover(date)\n    );\n  }\n\n  /**\n   * Determine if the date should be in selected state\n   *\n   * @param date\n   */\n  private isSelected(date: Date): boolean {\n    return !!(\n      sameDate(date, this.selectedDate) ||\n      (this.startDate && sameDate(date, this.startDate)) ||\n      (this.endDate && sameDate(date, this.endDate))\n    );\n  }\n\n  /**\n   * Determine if the date is the start of the date range\n   *\n   * @param date\n   */\n  private isStartOfRange(date: Date): boolean {\n    return !!(\n      this.startDate &&\n      !sameDate(this.startDate, this.endDate) &&\n      sameDate(this.startDate, date) &&\n      !this.isEndOfRange(date)\n    );\n  }\n\n  private isEndOfRange(date: Date): boolean {\n    return !!(\n      (this.endDate && !sameDate(this.startDate, this.endDate) && sameDate(this.endDate, date)) ||\n      (!this.endDate &&\n        this.hoverRange &&\n        sameDate(this.startDate, this.hoverRange.end) &&\n        sameDate(date, this.hoverRange.end))\n    );\n  }\n\n  dayHover = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteDatePickerDayElement;\n    if (target.disabled) {\n      this.calciteInternalDatePickerMouseOut.emit();\n    } else {\n      this.calciteInternalDatePickerHover.emit(target.value);\n    }\n    event.stopPropagation();\n  };\n\n  daySelect = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteDatePickerDayElement;\n    this.calciteInternalDatePickerSelect.emit(target.value);\n  };\n\n  /**\n   * Render calcite-date-picker-day\n   *\n   * @param active.active\n   * @param active\n   * @param day\n   * @param dayInWeek\n   * @param date\n   * @param currentMonth\n   * @param ref\n   * @param active.currentMonth\n   * @param active.date\n   * @param active.day\n   * @param active.dayInWeek\n   * @param active.ref\n   */\n  private renderDateDay({ active, currentMonth, date, day, dayInWeek, ref }: Day) {\n    const isFocusedOnStart = this.isFocusedOnStart();\n    const isHoverInRange =\n      this.isHoverInRange() ||\n      (!this.endDate && this.hoverRange && sameDate(this.hoverRange?.end, this.startDate));\n\n    return (\n      <div class=\"day\" key={date.toDateString()} role=\"gridcell\">\n        <calcite-date-picker-day\n          active={active}\n          class={{\n            \"hover--inside-range\": this.startDate && isHoverInRange,\n            \"hover--outside-range\": this.startDate && !isHoverInRange,\n            \"focused--start\": isFocusedOnStart,\n            \"focused--end\": !isFocusedOnStart,\n          }}\n          currentMonth={currentMonth}\n          dateTimeFormat={this.dateTimeFormat}\n          day={day}\n          disabled={!inRange(date, this.min, this.max)}\n          endOfRange={this.isEndOfRange(date)}\n          highlighted={this.betweenSelectedRange(date)}\n          onCalciteDaySelect={this.daySelect}\n          onCalciteInternalDayHover={this.dayHover}\n          range={!!this.startDate && !!this.endDate && !sameDate(this.startDate, this.endDate)}\n          rangeEdge={dayInWeek === 0 ? \"start\" : dayInWeek === 6 ? \"end\" : undefined}\n          rangeHover={this.isRangeHover(date)}\n          scale={this.scale}\n          selected={this.isSelected(date)}\n          startOfRange={this.isStartOfRange(date)}\n          value={date}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={(el: HTMLCalciteDatePickerDayElement) => {\n            // when moving via keyboard, focus must be updated on active date\n            if (ref && active && this.activeFocus) {\n              el?.focus();\n            }\n          }}\n        />\n      </div>\n    );\n  }\n\n  private isFocusedOnStart(): boolean {\n    return this.hoverRange?.focused === \"start\";\n  }\n\n  private isHoverInRange(): boolean {\n    if (!this.hoverRange) {\n      return false;\n    }\n    const { start, end } = this.hoverRange;\n    return !!(\n      (!this.isFocusedOnStart() && this.startDate && (!this.endDate || end < this.endDate)) ||\n      (this.isFocusedOnStart() && this.startDate && start > this.startDate)\n    );\n  }\n\n  private isRangeHover(date): boolean {\n    if (!this.hoverRange) {\n      return false;\n    }\n    const { start, end } = this.hoverRange;\n    const isStart = this.isFocusedOnStart();\n    const insideRange = this.isHoverInRange();\n    const cond1 =\n      insideRange &&\n      ((!isStart && date > this.startDate && (date < end || sameDate(date, end))) ||\n        (isStart && date < this.endDate && (date > start || sameDate(date, start))));\n    const cond2 =\n      !insideRange &&\n      ((!isStart && date >= this.endDate && (date < end || sameDate(date, end))) ||\n        (isStart &&\n          ((this.startDate && date < this.startDate) ||\n            (this.endDate && sameDate(date, this.startDate))) &&\n          ((start && date > start) || sameDate(date, start))));\n    return cond1 || cond2;\n  }\n}\n","export const CSS = {\n  header: \"header\",\n  month: \"month\",\n  chevron: \"chevron\",\n  suffix: \"suffix\",\n  yearSuffix: \"year--suffix\",\n  yearWrap: \"year-wrap\",\n  textReverse: \"text--reverse\",\n};\n\nexport const ICON = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromRange,\n  parseCalendarYear,\n  getOrder,\n  nextMonth,\n  prevMonth,\n  formatCalendarYear,\n} from \"../../utils/date\";\n\nimport { closestElementCrossShadowBoundary } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { CSS, ICON } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\n\n@Component({\n  tag: \"calcite-date-picker-month-header\",\n  styleUrl: \"date-picker-month-header.scss\",\n  shadow: true,\n})\nexport class DatePickerMonthHeader {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Already selected date. */\n  @Prop() selectedDate: Date;\n\n  /** The focused date is indicated and will become the selected date if the user proceeds. */\n  @Prop() activeDate: Date;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop() headingLevel: HeadingLevel;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** CLDR locale data for translated calendar info. */\n  @Prop() localeData: DateLocaleData;\n\n  /**\n   * This property specifies accessible strings for the component's previous month button ,next month button & year input elements.\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   *  Fires to active date\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(\n      this.el,\n      \"calcite-date-picker\",\n    ) as HTMLCalciteDatePickerElement;\n  }\n\n  connectedCallback(): void {\n    this.setNextPrevMonthDates();\n  }\n\n  render(): VNode {\n    return <div class={CSS.header}>{this.renderContent()}</div>;\n  }\n\n  renderContent(): VNode {\n    const { messages, localeData, activeDate } = this;\n    if (!activeDate || !localeData) {\n      return null;\n    }\n\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n\n    const activeMonth = activeDate.getMonth();\n    const { months, unitOrder } = localeData;\n    const localizedMonth = (months.wide || months.narrow || months.abbreviated)[activeMonth];\n    const localizedYear = this.formatCalendarYear(activeDate.getFullYear());\n    const order = getOrder(unitOrder);\n    const reverse = order.indexOf(\"y\") < order.indexOf(\"m\");\n    const suffix = localeData.year?.suffix;\n    return (\n      <Fragment>\n        <a\n          aria-disabled={`${this.prevMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.prevMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.prevMonthClick}\n          onKeyDown={this.prevMonthKeydown}\n          role=\"button\"\n          tabindex={this.prevMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronLeft} scale={getIconScale(this.scale)} />\n        </a>\n        <div class={{ text: true, [CSS.textReverse]: reverse }}>\n          <Heading class={CSS.month} level={this.headingLevel}>\n            {localizedMonth}\n          </Heading>\n          <span class={CSS.yearWrap}>\n            <input\n              aria-label={messages.year}\n              class={{\n                year: true,\n                [CSS.yearSuffix]: !!suffix,\n              }}\n              inputmode=\"numeric\"\n              maxlength=\"4\"\n              minlength=\"1\"\n              onChange={this.onYearChange}\n              onInput={this.onYearInput}\n              onKeyDown={this.onYearKey}\n              pattern=\"\\d*\"\n              type=\"text\"\n              value={localizedYear}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={(el) => (this.yearInput = el)}\n            />\n            {suffix && <span class={CSS.suffix}>{suffix}</span>}\n          </span>\n        </div>\n        <a\n          aria-disabled={`${this.nextMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.nextMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.nextMonthClick}\n          onKeyDown={this.nextMonthKeydown}\n          role=\"button\"\n          tabindex={this.nextMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronRight} scale={getIconScale(this.scale)} />\n        </a>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthHeaderElement;\n\n  private yearInput: HTMLInputElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n\n  @State() nextMonthDate: Date;\n\n  @State() prevMonthDate: Date;\n\n  @Watch(\"min\")\n  @Watch(\"max\")\n  @Watch(\"activeDate\")\n  setNextPrevMonthDates(): void {\n    if (!this.activeDate) {\n      return;\n    }\n\n    this.nextMonthDate = dateFromRange(nextMonth(this.activeDate), this.min, this.max);\n    this.prevMonthDate = dateFromRange(prevMonth(this.activeDate), this.min, this.max);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Increment year on UP/DOWN keys\n   *\n   * @param event\n   */\n  private onYearKey = (event: KeyboardEvent): void => {\n    const localizedYear = this.parseCalendarYear((event.target as HTMLInputElement).value);\n    switch (event.key) {\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: -1 });\n        break;\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: 1 });\n        break;\n    }\n  };\n\n  private formatCalendarYear(year: number): string {\n    return numberStringFormatter.localize(`${formatCalendarYear(year, this.localeData)}`);\n  }\n\n  private parseCalendarYear(year: string): string {\n    return numberStringFormatter.localize(\n      `${parseCalendarYear(Number(numberStringFormatter.delocalize(year)), this.localeData)}`,\n    );\n  }\n\n  private onYearChange = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n    });\n  };\n\n  private onYearInput = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n      commit: false,\n    });\n  };\n\n  private prevMonthClick = (event: KeyboardEvent | MouseEvent): void => {\n    this.handleArrowClick(event, this.prevMonthDate);\n  };\n\n  private prevMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.prevMonthClick(event);\n    }\n  };\n\n  private nextMonthClick = (event: MouseEvent | KeyboardEvent): void => {\n    this.handleArrowClick(event, this.nextMonthDate);\n  };\n\n  private nextMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.nextMonthClick(event);\n    }\n  };\n\n  /*\n   * Update active month on clicks of left/right arrows\n   */\n  private handleArrowClick = (event: MouseEvent | KeyboardEvent, date: Date): void => {\n    event.preventDefault();\n    this.calciteInternalDatePickerSelect.emit(date);\n  };\n\n  private getInRangeDate({\n    localizedYear,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    offset?: number;\n  }): Date {\n    const { min, max, activeDate } = this;\n    const parsedYear = Number(numberStringFormatter.delocalize(localizedYear));\n    const length = parsedYear.toString().length;\n    const year = isNaN(parsedYear) ? false : parsedYear + offset;\n    const inRange =\n      year && (!min || min.getFullYear() <= year) && (!max || max.getFullYear() >= year);\n    // if you've supplied a year and it's in range\n    if (year && inRange && length === localizedYear.length) {\n      const nextDate = new Date(activeDate);\n      nextDate.setFullYear(year as number);\n      return dateFromRange(nextDate, min, max);\n    }\n  }\n\n  /**\n   * Parse localized year string from input,\n   * set to active if in range\n   *\n   * @param root0\n   * @param root0.localizedYear\n   * @param root0.commit\n   * @param root0.offset\n   */\n  private setYear({\n    localizedYear,\n    commit = true,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    commit?: boolean;\n    offset?: number;\n  }): void {\n    const { yearInput, activeDate } = this;\n    const inRangeDate = this.getInRangeDate({ localizedYear, offset });\n\n    // if you've supplied a year and it's in range, update active date\n    if (inRangeDate) {\n      this.calciteInternalDatePickerSelect.emit(inRangeDate);\n    }\n\n    if (commit) {\n      yearInput.value = this.formatCalendarYear((inRangeDate || activeDate).getFullYear());\n    }\n  }\n}\n",":host {\n  @apply block;\n}\n\n.header {\n  @apply flex justify-between;\n  @apply py-0 px-1;\n}\n\n:host([scale=\"s\"]) {\n  .text {\n    @apply text-n1h my-2;\n  }\n  .chevron {\n    @apply h-9;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .text {\n    @apply text-0h my-3;\n  }\n  .chevron {\n    @apply h-12;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .text {\n    @apply text-1h my-4;\n  }\n  .chevron {\n    block-size: 3.5rem;\n  }\n}\n\n.chevron {\n  @apply text-color-3\n    bg-foreground-1\n    focus-base\n    -mx-1\n    box-content\n    flex\n    flex-grow-0\n    cursor-pointer\n    items-center\n    justify-center\n    border-none\n    px-1\n    outline-none\n    transition-default;\n  inline-size: calc(100% / 7);\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:hover,\n  &:focus {\n    @apply text-color-1 bg-foreground-2 fill-color-1;\n  }\n\n  &:active {\n    @apply bg-foreground-3;\n  }\n\n  &[aria-disabled=\"true\"] {\n    @apply pointer-events-none opacity-0;\n  }\n}\n\n.text {\n  @apply my-auto\n    w-full\n    flex\n    flex-auto\n    items-center\n    justify-center\n    text-center\n    leading-none;\n}\n\n.text--reverse {\n  @apply flex-row-reverse;\n}\n\n.month,\n.year,\n.suffix {\n  @apply text-color-1\n    bg-foreground-1\n    mx-1\n    my-auto\n    inline-block\n    font-medium\n    leading-tight;\n  font-size: inherit;\n}\n\n.year {\n  @apply font-inherit\n    focus-base\n    relative\n    w-10\n    border-none\n    bg-transparent\n    text-center;\n  &:hover {\n    @apply duration-100 ease-in-out;\n    transition-property: outline-color;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n.year--suffix {\n  @apply text-left;\n}\n\n.year-wrap {\n  @apply relative;\n}\n\n.suffix {\n  @apply top-0\n    whitespace-nowrap\n    text-start;\n  inset-inline-start: 0;\n}\n\n@include base-component();\n","export const HEADING_LEVEL = 2;\n\nexport const DATE_PICKER_FORMAT_OPTIONS: Intl.DateTimeFormatOptions = { dateStyle: \"full\" };\n","import { getAssetPath } from \"@stencil/core\";\nimport { dateFromISO } from \"../../utils/date\";\nimport { getSupportedLocale } from \"../../utils/locale\";\n\n/**\n * Translation resource data structure\n *\n * @private\n */\nexport interface DateLocaleData {\n  \"default-calendar\": \"gregorian\" | \"buddhist\";\n  separator: string;\n  unitOrder: string;\n  weekStart: number;\n  placeholder: string;\n  days: {\n    abbreviated?: string[];\n    narrow?: string[];\n    short?: string[];\n    wide?: string[];\n  };\n  numerals: string;\n  months: {\n    abbreviated: string[];\n    narrow: string[];\n    wide: string[];\n  };\n  year?: {\n    suffix: string;\n  };\n}\n\n/**\n * CLDR cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const translationCache: Record<string, DateLocaleData> = {};\n\n/**\n * CLDR request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<DateLocaleData>> = {};\n\n/**\n * Fetch calendar data for a given locale from list of supported languages\n *\n * @param lang\n * @public\n */\nexport async function getLocaleData(lang: string): Promise<DateLocaleData> {\n  const locale = getSupportedLocale(lang);\n  if (translationCache[locale]) {\n    return translationCache[locale];\n  }\n  if (!requestCache[locale]) {\n    requestCache[locale] = fetch(getAssetPath(`./assets/date-picker/nls/${locale}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`Translations for \"${locale}\" not found or invalid, falling back to english`);\n        return getLocaleData(\"en\");\n      });\n  }\n\n  const data = await requestCache[locale];\n  translationCache[locale] = data;\n\n  return data;\n}\n\n/**\n *  Maps value to valueAsDate\n *\n * @param value\n */\n\nexport function getValueAsDateRange(value: string[]): Date[] {\n  return value.map((v, index) => dateFromISO(v, index === 1));\n}\n",":host {\n  @extend %component-host;\n  @apply align-top\n    border\n    border-color-1\n    border-solid\n    inline-block\n    overflow-visible\n    rounded-none\n    w-auto;\n}\n\n:host([scale=\"s\"]) {\n  inline-size: 234px;\n  min-inline-size: 216px;\n  max-inline-size: 380px;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: 304px;\n  min-inline-size: 272px;\n  max-inline-size: 480px;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: 370px;\n  min-inline-size: 320px;\n  max-inline-size: 600px;\n}\n\n@include base-component();\n","import {\n  Build,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromISO,\n  dateFromRange,\n  dateToISO,\n  getDaysDiff,\n  HoverRange,\n  setEndOfDay,\n} from \"../../utils/date\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  getDateTimeFormat,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport { DatePickerMessages } from \"./assets/date-picker/t9n\";\nimport { DATE_PICKER_FORMAT_OPTIONS, HEADING_LEVEL } from \"./resources\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"./utils\";\n\n@Component({\n  assetsDirs: [\"assets\"],\n  tag: \"calcite-date-picker\",\n  styleUrl: \"date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class DatePicker implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the component's active date. */\n  @Prop({ mutable: true }) activeDate: Date;\n\n  @Watch(\"activeDate\")\n  activeDateWatcher(newActiveDate: Date): void {\n    if (this.activeRange === \"end\") {\n      this.activeEndDate = newActiveDate;\n    }\n  }\n\n  /**\n   * When `range` is true, specifies the active `range`. Where `\"start\"` specifies the starting range date and `\"end\"` the ending range date.\n   */\n  @Prop({ reflect: true }) activeRange: \"start\" | \"end\";\n\n  /**\n   * Specifies the selected date as a string (`\"yyyy-mm-dd\"`), or an array of strings for `range` values (`[\"yyyy-mm-dd\", \"yyyy-mm-dd\"]`).\n   */\n  @Prop({ mutable: true }) value: string | string[];\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Specifies the selected date as a full date object (`new Date(\"yyyy-mm-dd\")`), or an array containing full date objects (`[new Date(\"yyyy-mm-dd\"), new Date(\"yyyy-mm-dd\")]`). */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(newValueAsDate: Date | Date[]): void {\n    if (this.range && Array.isArray(newValueAsDate)) {\n      const { activeStartDate, activeEndDate } = this;\n      const newActiveStartDate = newValueAsDate[0];\n      const newActiveEndDate = newValueAsDate[1];\n      this.activeStartDate = activeStartDate !== newActiveStartDate && newActiveStartDate;\n      this.activeEndDate = activeEndDate !== newActiveEndDate && newActiveEndDate;\n    } else if (newValueAsDate && newValueAsDate !== this.activeDate) {\n      this.activeDate = newValueAsDate as Date;\n    }\n  }\n\n  /** Specifies the earliest allowed date as a full date object (`new Date(\"yyyy-mm-dd\")`). */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object (`new Date(\"yyyy-mm-dd\")`). */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop({ reflect: true }) min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    if (min) {\n      this.minAsDate = dateFromISO(min);\n    }\n  }\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop({ reflect: true }) max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    if (max) {\n      this.maxAsDate = dateFromISO(max);\n    }\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, disables the default behavior on the third click of narrowing or extending the range and instead starts a new range. */\n  @Prop({ reflect: true }) proximitySelectionDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires when a user changes the component's date. For `range` events, use `calciteDatePickerRangeChange`.\n   */\n  @Event({ cancelable: false }) calciteDatePickerChange: EventEmitter<void>;\n\n  /**\n   * Fires when a user changes the component's date `range`. For components without `range` use `calciteDatePickerChange`.\n   */\n  @Event({ cancelable: false }) calciteDatePickerRangeChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  /**\n   * Resets active date state.\n   * @internal\n   */\n  @Method()\n  async reset(): Promise<void> {\n    this.resetActiveDates();\n    this.mostRecentRangeValue = undefined;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      this.valueAsDate = dateFromISO(this.value);\n    }\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await this.loadLocaleData();\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  render(): VNode {\n    const date = dateFromRange(\n      this.range && Array.isArray(this.valueAsDate) ? this.valueAsDate[0] : this.valueAsDate,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    let activeDate = this.getActiveDate(date, this.minAsDate, this.maxAsDate);\n    const endDate =\n      this.range && Array.isArray(this.valueAsDate)\n        ? dateFromRange(this.valueAsDate[1], this.minAsDate, this.maxAsDate)\n        : null;\n    const activeEndDate = this.getActiveEndDate(endDate, this.minAsDate, this.maxAsDate);\n    if (\n      (this.activeRange === \"end\" ||\n        (this.hoverRange?.focused === \"end\" && (!this.proximitySelectionDisabled || endDate))) &&\n      activeEndDate\n    ) {\n      activeDate = activeEndDate;\n    }\n    if (this.range && this.mostRecentRangeValue) {\n      activeDate = this.mostRecentRangeValue;\n    }\n\n    const minDate =\n      this.range && this.activeRange\n        ? this.activeRange === \"start\"\n          ? this.minAsDate\n          : date || this.minAsDate\n        : this.minAsDate;\n\n    const maxDate =\n      this.range && this.activeRange\n        ? this.activeRange === \"start\"\n          ? endDate || this.maxAsDate\n          : this.maxAsDate\n        : this.maxAsDate;\n    return (\n      <Host onBlur={this.resetActiveDates} onKeyDown={this.keyDownHandler}>\n        {this.renderCalendar(activeDate, maxDate, minDate, date, endDate)}\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerElement;\n\n  /**\n   * Active end date.\n   */\n  @State() activeEndDate: Date;\n\n  /**\n   * Active start date.\n   */\n  @State() activeStartDate: Date;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @State() dateTimeFormat: Intl.DateTimeFormat;\n\n  @State() defaultMessages: DatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() endAsDate: Date;\n\n  @State() private hoverRange: HoverRange;\n\n  @State() private localeData: DateLocaleData;\n\n  @State() private mostRecentRangeValue?: Date;\n\n  @State() startAsDate: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \"Escape\") {\n      this.resetActiveDates();\n    }\n  };\n\n  @Watch(\"value\")\n  valueHandler(value: string | string[]): void {\n    if (Array.isArray(value)) {\n      this.valueAsDate = getValueAsDateRange(value);\n    } else if (value) {\n      this.valueAsDate = dateFromISO(value);\n    }\n  }\n\n  @Watch(\"effectiveLocale\")\n  private async loadLocaleData(): Promise<void> {\n    if (!Build.isBrowser) {\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.dateTimeFormat = getDateTimeFormat(this.effectiveLocale, DATE_PICKER_FORMAT_OPTIONS);\n  }\n\n  monthHeaderSelectChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    if (!this.range) {\n      this.activeDate = date;\n    } else {\n      if (this.activeRange === \"end\") {\n        this.activeEndDate = date;\n      } else {\n        this.activeStartDate = date;\n      }\n      this.mostRecentRangeValue = date;\n    }\n  };\n\n  monthActiveDateChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    if (!this.range) {\n      this.activeDate = date;\n    } else {\n      if (this.activeRange === \"end\") {\n        this.activeEndDate = date;\n      } else {\n        this.activeStartDate = date;\n      }\n      this.mostRecentRangeValue = date;\n    }\n  };\n\n  monthHoverChange = (event: CustomEvent<Date>): void => {\n    if (!this.range) {\n      this.hoverRange = undefined;\n      return;\n    }\n\n    const { valueAsDate } = this;\n    const start = Array.isArray(valueAsDate) && valueAsDate[0];\n    const end = Array.isArray(valueAsDate) && valueAsDate[1];\n\n    const date = new Date(event.detail);\n    this.hoverRange = {\n      focused: this.activeRange || \"start\",\n      start,\n      end,\n    };\n    if (!this.proximitySelectionDisabled) {\n      if (start && end) {\n        const startDiff = getDaysDiff(date, start);\n        const endDiff = getDaysDiff(date, end);\n        if (endDiff > 0) {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        } else if (startDiff < 0) {\n          this.hoverRange.start = date;\n          this.hoverRange.focused = \"start\";\n        } else if (startDiff > endDiff) {\n          this.hoverRange.start = date;\n          this.hoverRange.focused = \"start\";\n        } else {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        }\n      } else {\n        if (start) {\n          if (date < start) {\n            this.hoverRange = {\n              focused: \"start\",\n              start: date,\n              end: start,\n            };\n          } else {\n            this.hoverRange.end = date;\n            this.hoverRange.focused = \"end\";\n          }\n        }\n      }\n    } else {\n      if (!end) {\n        if (date < start) {\n          this.hoverRange = {\n            focused: \"start\",\n            start: date,\n            end: start,\n          };\n        } else {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        }\n      } else {\n        this.hoverRange = undefined;\n      }\n    }\n    event.stopPropagation();\n  };\n\n  monthMouseOutChange = (): void => {\n    if (this.hoverRange) {\n      this.hoverRange = undefined;\n    }\n  };\n\n  /**\n   * Render calcite-date-picker-month-header and calcite-date-picker-month\n   *\n   * @param activeDate\n   * @param maxDate\n   * @param minDate\n   * @param date\n   * @param endDate\n   */\n  private renderCalendar(\n    activeDate: Date,\n    maxDate: Date,\n    minDate: Date,\n    date: Date,\n    endDate: Date,\n  ) {\n    return (\n      this.localeData && [\n        <calcite-date-picker-month-header\n          activeDate={activeDate}\n          headingLevel={this.headingLevel || HEADING_LEVEL}\n          localeData={this.localeData}\n          max={maxDate}\n          messages={this.messages}\n          min={minDate}\n          onCalciteInternalDatePickerSelect={this.monthHeaderSelectChange}\n          scale={this.scale}\n          selectedDate={this.activeRange === \"end\" ? endDate : date || new Date()}\n        />,\n        <calcite-date-picker-month\n          activeDate={activeDate}\n          dateTimeFormat={this.dateTimeFormat}\n          endDate={this.range ? endDate : undefined}\n          hoverRange={this.hoverRange}\n          localeData={this.localeData}\n          max={maxDate}\n          min={minDate}\n          onCalciteInternalDatePickerActiveDateChange={this.monthActiveDateChange}\n          onCalciteInternalDatePickerHover={this.monthHoverChange}\n          onCalciteInternalDatePickerMouseOut={this.monthMouseOutChange}\n          onCalciteInternalDatePickerSelect={this.monthDateChange}\n          scale={this.scale}\n          selectedDate={this.activeRange === \"end\" ? endDate : date}\n          startDate={this.range ? date : undefined}\n        />,\n      ]\n    );\n  }\n\n  private resetActiveDates = (): void => {\n    const { valueAsDate } = this;\n\n    if (!Array.isArray(valueAsDate) && valueAsDate && valueAsDate !== this.activeDate) {\n      this.activeDate = new Date(valueAsDate);\n    }\n\n    if (Array.isArray(valueAsDate)) {\n      if (valueAsDate[0] && valueAsDate[0] !== this.activeStartDate) {\n        this.activeStartDate = new Date(valueAsDate[0]);\n      }\n      if (valueAsDate[1] && valueAsDate[1] !== this.activeEndDate) {\n        this.activeEndDate = new Date(valueAsDate[1]);\n      }\n    }\n  };\n\n  private getEndDate(): Date {\n    return (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined;\n  }\n\n  private setEndDate(date: Date): void {\n    const startDate = this.getStartDate();\n    const newEndDate = date ? setEndOfDay(date) : date;\n    this.value = [dateToISO(startDate), dateToISO(date)];\n    this.valueAsDate = [startDate, date];\n    this.mostRecentRangeValue = newEndDate;\n    this.calciteDatePickerRangeChange.emit();\n    this.activeEndDate = date || null;\n  }\n\n  private getStartDate(): Date {\n    return Array.isArray(this.valueAsDate) && this.valueAsDate[0];\n  }\n\n  private setStartDate(date: Date): void {\n    const endDate = this.getEndDate();\n    this.value = [dateToISO(date), dateToISO(endDate)];\n    this.valueAsDate = [date, endDate];\n    this.mostRecentRangeValue = date;\n    this.calciteDatePickerRangeChange.emit();\n    this.activeStartDate = date || null;\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event\n   */\n  private monthDateChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    const isoDate = dateToISO(date);\n\n    if (!this.range && isoDate === dateToISO(this.valueAsDate as Date)) {\n      return;\n    }\n\n    if (!this.range) {\n      this.value = isoDate || \"\";\n      this.valueAsDate = date || null;\n      this.activeDate = date || null;\n      this.calciteDatePickerChange.emit();\n      return;\n    }\n\n    const start = this.getStartDate();\n    const end = this.getEndDate();\n\n    if (!start || (!end && date < start)) {\n      if (start) {\n        this.setEndDate(new Date(start));\n      }\n      if (this.activeRange == \"end\") {\n        this.setEndDate(date);\n      } else {\n        this.setStartDate(date);\n      }\n    } else if (!end) {\n      this.setEndDate(date);\n    } else {\n      if (!this.proximitySelectionDisabled) {\n        if (this.activeRange) {\n          if (this.activeRange == \"end\") {\n            this.setEndDate(date);\n          } else {\n            this.setStartDate(date);\n          }\n        } else {\n          const startDiff = getDaysDiff(date, start);\n          const endDiff = getDaysDiff(date, end);\n          if (endDiff === 0 || startDiff < 0) {\n            this.setStartDate(date);\n          } else if (startDiff === 0 || endDiff < 0) {\n            this.setEndDate(date);\n          } else if (startDiff < endDiff) {\n            this.setStartDate(date);\n          } else {\n            this.setEndDate(date);\n          }\n        }\n      } else {\n        this.setStartDate(date);\n      }\n    }\n    this.calciteDatePickerChange.emit();\n  };\n\n  /**\n   * Get an active date using the value, or current date as default\n   *\n   * @param value\n   * @param min\n   * @param max\n   */\n  private getActiveDate(value: Date | null, min: Date | null, max: Date | null): Date {\n    return dateFromRange(this.activeDate, min, max) || value || dateFromRange(new Date(), min, max);\n  }\n\n  private getActiveEndDate(value: Date | null, min: Date | null, max: Date | null): Date {\n    return (\n      dateFromRange(this.activeEndDate, min, max) || value || dateFromRange(new Date(), min, max)\n    );\n  }\n}\n","export const CSS = {\n  assistiveText: \"assistive-text\",\n  calendarWrapper: \"calendar-wrapper\",\n  calendarWrapperEnd: \"calendar-wrapper--end\",\n  horizontalArrowContainer: \"horizontal-arrow-container\",\n  inputBorderTopColorOne: \"border-top-color-one\",\n  inputContainer: \"input-container\",\n  inputNoBottomBorder: \"no-bottom-border\",\n  inputWrapper: \"input-wrapper\",\n  input: \"input\",\n  menu: \"menu-container\",\n  menuActive: \"menu-container--active\",\n  toggleIcon: \"toggle-icon\",\n  verticalArrowContainer: \"vertical-arrow-container\",\n};\n",":host {\n  @extend %component-spacing;\n  @include floatingUIElemAnim(\".menu-container\");\n  @apply relative\n    inline-block\n    w-full\n    overflow-visible\n    align-top\n    shadow-none;\n}\n\n@function get-trailing-text-input-padding($chevron-spacing) {\n  @return calc(var(--calcite-toggle-spacing) + $chevron-spacing);\n}\n\n:host([scale=\"s\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.2\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.4\"))};\n}\n\n:host([scale=\"m\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.3\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.6\"))};\n}\n\n:host([scale=\"l\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.4\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.8\"))};\n}\n\n@include disabled();\n\n.calendar-wrapper {\n  @apply shadow-none;\n  transform: translate3d(0, 0, 0);\n}\n\n.input-wrapper {\n  @apply relative;\n}\n\n.toggle-icon {\n  @apply absolute flex cursor-pointer items-center;\n  inset-inline-end: 0;\n  inset-block: 0;\n  padding-inline: var(--calcite-toggle-spacing);\n}\n\n:host([range]) {\n  .input-container {\n    @apply flex;\n  }\n\n  .input-wrapper {\n    @apply flex-auto;\n  }\n\n  .horizontal-arrow-container {\n    @apply bg-background\n      border-color-input\n      flex\n      items-center\n      border\n      border-l-0\n      border-r-0\n      border-solid\n      py-0\n      px-1;\n  }\n}\n\n:host([range][layout=\"vertical\"]) {\n  .input-wrapper {\n    @apply w-full;\n  }\n\n  .input-container {\n    @apply flex-col\n      items-start;\n  }\n\n  .calendar-wrapper--end {\n    transform: translate3d(0, 0, 0);\n  }\n\n  .vertical-arrow-container {\n    inset-block-start: theme(\"spacing.6\");\n    @apply bg-foreground-1\n      absolute\n      z-default\n      mx-px\n      px-2.5;\n    inset-inline-start: 0;\n  }\n}\n\n.menu-container {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floatingUIContainer();\n  @include floatingUIWrapper();\n  @apply invisible;\n}\n\n@include floatingUIElemAnim(\".menu-container\");\n\n:host([open]) .menu-container {\n  @include floatingUIWrapperActive();\n}\n\n.menu-container--active {\n  @include floatingUIWrapperActive();\n}\n\n.input .calcite-input__wrapper {\n  @apply mt-0;\n}\n\n:host([range][layout=\"vertical\"][scale=\"m\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.6\");\n  padding-inline-start: theme(\"spacing.3\");\n\n  calcite-icon {\n    @apply h-3\n      w-3\n      min-w-0;\n  }\n}\n\n:host([range][layout=\"vertical\"][scale=\"l\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.9\");\n  @apply px-3.5;\n}\n\n:host([range][layout=\"vertical\"][open]) {\n  .vertical-arrow-container {\n    @apply hidden;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include base-component();\n","import {\n  Build,\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromISO,\n  dateFromLocalizedString,\n  dateFromRange,\n  datePartsFromISO,\n  datePartsFromLocalizedString,\n  dateToISO,\n  inRange,\n} from \"../../utils/date\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  EffectivePlacement,\n  filterComputedPlacements,\n  FloatingCSS,\n  FloatingUIComponent,\n  MenuPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  getSupportedNumberingSystem,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"../date-picker/utils\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport { CSS } from \"./resources\";\nimport { connectMessages, disconnectMessages, setUpMessages, T9nComponent } from \"../../utils/t9n\";\nimport { InputDatePickerMessages } from \"./assets/input-date-picker/t9n\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrapComponent,\n} from \"../../utils/focusTrapComponent\";\nimport { FocusTrap } from \"focus-trap\";\nimport { guid } from \"../../utils/guid\";\nimport { normalizeToCurrentCentury, isTwoDigitYear } from \"./utils\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Status } from \"../interfaces\";\nimport { Validation } from \"../functional/Validation\";\n\n@Component({\n  tag: \"calcite-input-date-picker\",\n  styleUrl: \"input-date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class InputDatePicker\n  implements\n    FloatingUIComponent,\n    FocusTrapComponent,\n    FormComponent,\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    OpenCloseComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  @Watch(\"disabled\")\n  @Watch(\"readOnly\")\n  handleDisabledAndReadOnlyChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /** Selected date as a string in ISO format (`\"yyyy-mm-dd\"`). */\n  @Prop({ mutable: true }) value: string | string[] = \"\";\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string | string[]): void {\n    if (!this.userChangedValue) {\n      let newValueAsDate: Date | Date[];\n\n      if (Array.isArray(newValue)) {\n        newValueAsDate = getValueAsDateRange(newValue);\n      } else if (newValue) {\n        newValueAsDate = dateFromISO(newValue);\n      } else {\n        newValueAsDate = undefined;\n      }\n\n      if (!this.valueAsDateChangedExternally && newValueAsDate !== this.valueAsDate) {\n        this.valueAsDate = newValueAsDate;\n      }\n\n      this.localizeInputValues();\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(valueAsDate: Date): void {\n    this.datePickerActiveDate = valueAsDate;\n    const newValue =\n      this.range && Array.isArray(valueAsDate)\n        ? [dateToISO(valueAsDate[0]), dateToISO(valueAsDate[1])]\n        : dateToISO(valueAsDate);\n    if (this.value !== newValue) {\n      this.valueAsDateChangedExternally = true;\n      this.value = newValue;\n      this.valueAsDateChangedExternally = false;\n    }\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: EffectivePlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** The component's value as a full date object. */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputDatePickerMessages & DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputDatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the earliest allowed date as a full date object. */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object. */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (\"yyyy-mm-dd\"). */\n  @Prop() min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    if (min) {\n      this.minAsDate = dateFromISO(min);\n    }\n  }\n\n  /** Specifies the latest allowed date (\"yyyy-mm-dd\"). */\n  @Prop() max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    if (max) {\n      this.maxAsDate = dateFromISO(max);\n    }\n  }\n\n  /** When `true`, displays the `calcite-date-picker` component. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled || this.readOnly) {\n      this.open = false;\n      return;\n    }\n\n    this.reposition(true);\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the placement of the `calcite-date-picker` relative to the component.\n   *\n   * @default \"bottom-start\"\n   */\n  @Prop({ reflect: true }) placement: MenuPlacement = defaultMenuPlacement;\n\n  /** When `true`, activates a range for the component. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, disables the default behavior on the third click of narrowing or extending the range.\n   * Instead starts a new range.\n   */\n  @Prop() proximitySelectionDisabled = false;\n\n  /** Defines the layout of the component. */\n  @Prop({ reflect: true }) layout: \"horizontal\" | \"vertical\" = \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteDaySelect\")\n  calciteDaySelectHandler(): void {\n    if (this.shouldFocusRangeStart() || this.shouldFocusRangeEnd()) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  private calciteInternalInputInputHandler = (event: CustomEvent<any>): void => {\n    const target = event.target as HTMLCalciteInputElement;\n    const value = target.value;\n    const parsedValue = this.parseNumerals(value);\n    const formattedValue = this.formatNumerals(parsedValue);\n\n    target.value = formattedValue;\n\n    const { year } = datePartsFromLocalizedString(value, this.localeData);\n\n    if (year && year.length < 4) {\n      return;\n    }\n\n    const date = dateFromLocalizedString(value, this.localeData) as Date;\n\n    if (inRange(date, this.min, this.max)) {\n      this.datePickerActiveDate = date;\n    }\n  };\n\n  private calciteInternalInputBlurHandler = (): void => {\n    this.commitValue();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's `value` changes.\n   */\n  @Event({ cancelable: false }) calciteInputDatePickerChange: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n\n    const { open } = this;\n    open && this.openHandler();\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      try {\n        this.valueAsDate = dateFromISO(this.value);\n      } catch (error) {\n        this.warnAboutInvalidValue(this.value);\n        this.value = \"\";\n      }\n    } else if (this.valueAsDate) {\n      if (this.range) {\n        this.setRangeValue(this.valueAsDate as Date[]);\n      } else if (!Array.isArray(this.valueAsDate)) {\n        this.value = dateToISO(this.valueAsDate);\n      }\n    }\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n\n    connectLabel(this);\n    connectForm(this);\n    connectMessages(this);\n\n    this.setFilteredPlacements();\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await Promise.all([this.loadLocaleData(), setUpMessages(this)]);\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.localizeInputValues();\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  disconnectedCallback(): void {\n    deactivateFocusTrap(this);\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const { disabled, effectiveLocale, messages, numberingSystem, readOnly } = this;\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem,\n      locale: effectiveLocale,\n      useGrouping: false,\n    };\n\n    return (\n      <Host onBlur={this.blurHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          {this.localeData && (\n            <div class={CSS.inputContainer}>\n              <div\n                class={CSS.inputWrapper}\n                data-position=\"start\"\n                onClick={this.onInputWrapperClick}\n                onPointerDown={this.onInputWrapperPointerDown}\n                // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                ref={this.setStartWrapper}\n              >\n                <calcite-input-text\n                  aria-autocomplete=\"none\"\n                  aria-controls={this.dialogId}\n                  aria-describedby={this.placeholderTextId}\n                  aria-expanded={toAriaBoolean(this.open)}\n                  aria-haspopup=\"dialog\"\n                  class={{\n                    [CSS.input]: true,\n                    [CSS.inputNoBottomBorder]: this.layout === \"vertical\" && this.range,\n                  }}\n                  disabled={disabled}\n                  icon=\"calendar\"\n                  onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                  onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                  onCalciteInternalInputTextFocus={this.startInputFocus}\n                  placeholder={this.localeData?.placeholder}\n                  readOnly={readOnly}\n                  role=\"combobox\"\n                  scale={this.scale}\n                  status={this.status}\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.setStartInput}\n                />\n                {!this.readOnly &&\n                  this.renderToggleIcon(this.open && this.focusedInput === \"start\")}\n                <span aria-hidden=\"true\" class={CSS.assistiveText} id={this.placeholderTextId}>\n                  Date Format: {this.localeData?.placeholder}\n                </span>\n              </div>\n              <div\n                aria-hidden={toAriaBoolean(!this.open)}\n                aria-label={messages.chooseDate}\n                aria-live=\"polite\"\n                aria-modal=\"true\"\n                class={{\n                  [CSS.menu]: true,\n                  [CSS.menuActive]: this.open,\n                }}\n                id={this.dialogId}\n                role=\"dialog\"\n                // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                ref={this.setFloatingEl}\n              >\n                <div\n                  class={{\n                    [CSS.calendarWrapper]: true,\n                    [CSS.calendarWrapperEnd]: this.focusedInput === \"end\",\n                    [FloatingCSS.animation]: true,\n                    [FloatingCSS.animationActive]: this.open,\n                  }}\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.setTransitionEl}\n                >\n                  <calcite-date-picker\n                    activeDate={this.datePickerActiveDate}\n                    activeRange={this.focusedInput}\n                    headingLevel={this.headingLevel}\n                    max={this.max}\n                    maxAsDate={this.maxAsDate}\n                    messageOverrides={this.messageOverrides}\n                    min={this.min}\n                    minAsDate={this.minAsDate}\n                    numberingSystem={numberingSystem}\n                    onCalciteDatePickerChange={this.handleDateChange}\n                    onCalciteDatePickerRangeChange={this.handleDateRangeChange}\n                    proximitySelectionDisabled={this.proximitySelectionDisabled}\n                    range={this.range}\n                    scale={this.scale}\n                    tabIndex={this.open ? undefined : -1}\n                    valueAsDate={this.valueAsDate}\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.setDatePickerRef}\n                  />\n                </div>\n              </div>\n\n              {this.range && this.layout === \"horizontal\" && (\n                <div class={CSS.horizontalArrowContainer}>\n                  <calcite-icon\n                    flipRtl={true}\n                    icon=\"arrow-right\"\n                    scale={getIconScale(this.scale)}\n                  />\n                </div>\n              )}\n              {this.range && this.layout === \"vertical\" && this.scale !== \"s\" && (\n                <div class={CSS.verticalArrowContainer}>\n                  <calcite-icon icon=\"arrow-down\" scale={getIconScale(this.scale)} />\n                </div>\n              )}\n              {this.range && (\n                <div\n                  class={CSS.inputWrapper}\n                  data-position=\"end\"\n                  onClick={this.onInputWrapperClick}\n                  onPointerDown={this.onInputWrapperPointerDown}\n                  // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                  ref={this.setEndWrapper}\n                >\n                  <calcite-input-text\n                    aria-autocomplete=\"none\"\n                    aria-controls={this.dialogId}\n                    aria-expanded={toAriaBoolean(this.open)}\n                    aria-haspopup=\"dialog\"\n                    class={{\n                      [CSS.input]: true,\n                      [CSS.inputBorderTopColorOne]: this.layout === \"vertical\" && this.range,\n                    }}\n                    disabled={disabled}\n                    icon=\"calendar\"\n                    onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                    onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                    onCalciteInternalInputTextFocus={this.endInputFocus}\n                    placeholder={this.localeData?.placeholder}\n                    readOnly={readOnly}\n                    role=\"combobox\"\n                    scale={this.scale}\n                    status={this.status}\n                    // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n                    ref={this.setEndInput}\n                  />\n                  {!this.readOnly &&\n                    this.renderToggleIcon(this.open && this.focusedInput === \"end\")}\n                </div>\n              )}\n            </div>\n          )}\n          <HiddenFormInputSlot component={this} />\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  renderToggleIcon(open: boolean): VNode {\n    return (\n      // we set tab index to -1 to prevent delegatesFocus from stealing focus before we can set it\n      <span class={CSS.toggleIcon} tabIndex={-1}>\n        <calcite-icon\n          icon={open ? \"chevron-up\" : \"chevron-down\"}\n          scale={getIconScale(this.scale)}\n        />\n      </span>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputDatePickerElement;\n\n  private currentOpenInput: \"start\" | \"end\";\n\n  private datePickerEl: HTMLCalciteDatePickerElement;\n\n  private dialogId = `date-picker-dialog--${guid()}`;\n\n  filteredFlipPlacements: EffectivePlacement[];\n\n  private focusOnOpen = false;\n\n  focusTrap: FocusTrap;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputDatePicker[\"value\"];\n\n  @State() datePickerActiveDate: Date;\n\n  @State() defaultMessages: InputDatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @State() focusedInput: \"start\" | \"end\" = \"start\";\n\n  @State() private localeData: DateLocaleData;\n\n  private startInput: HTMLCalciteInputElement;\n\n  private endInput: HTMLCalciteInputElement;\n\n  private floatingEl: HTMLDivElement;\n\n  private referenceEl: HTMLDivElement;\n\n  private startWrapper: HTMLDivElement;\n\n  private endWrapper: HTMLDivElement;\n\n  private userChangedValue = false;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  @Watch(\"layout\")\n  @Watch(\"focusedInput\")\n  setReferenceEl(): void {\n    const { focusedInput, layout, endWrapper, startWrapper } = this;\n\n    this.referenceEl =\n      focusedInput === \"end\" || layout === \"vertical\"\n        ? endWrapper || startWrapper\n        : startWrapper || endWrapper;\n\n    requestAnimationFrame(() => connectFloatingUI(this, this.referenceEl, this.floatingEl));\n  }\n\n  private valueAsDateChangedExternally = false;\n\n  private placeholderTextId = `calcite-input-date-picker-placeholder-${guid()}`;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private onInputWrapperPointerDown = (): void => {\n    this.currentOpenInput = this.focusedInput;\n  };\n\n  private onInputWrapperClick = (event: MouseEvent) => {\n    const { range, endInput, startInput, currentOpenInput } = this;\n    const currentTarget = event.currentTarget as HTMLDivElement;\n    const position = currentTarget.getAttribute(\"data-position\") as \"start\" | \"end\";\n    const path = event.composedPath();\n    const wasToggleClicked = path.find((el: HTMLElement) => el.classList?.contains(CSS.toggleIcon));\n\n    if (wasToggleClicked) {\n      const targetInput = position === \"start\" ? startInput : endInput;\n      targetInput.setFocus();\n    }\n\n    if (!range || !this.open || currentOpenInput === position) {\n      this.open = !this.open;\n    }\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterComputedPlacements(flipPlacements, el)\n      : null;\n  };\n\n  private setTransitionEl = (el): void => {\n    this.transitionEl = el;\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  onBeforeOpen(): void {\n    this.calciteInputDatePickerBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    activateFocusTrap(this, {\n      onActivate: () => {\n        if (this.focusOnOpen) {\n          this.datePickerEl.setFocus();\n          this.focusOnOpen = false;\n        }\n      },\n    });\n    this.calciteInputDatePickerOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteInputDatePickerBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteInputDatePickerClose.emit();\n    deactivateFocusTrap(this);\n    this.restoreInputFocus();\n    this.focusOnOpen = false;\n    this.datePickerEl.reset();\n  }\n\n  setStartInput = (el: HTMLCalciteInputElement): void => {\n    this.startInput = el;\n  };\n\n  setEndInput = (el: HTMLCalciteInputElement): void => {\n    this.endInput = el;\n  };\n\n  private blurHandler = (): void => {\n    this.open = false;\n  };\n\n  private commitValue(): void {\n    const { focusedInput, value } = this;\n    const focusedInputName = `${focusedInput}Input`;\n    const focusedInputValue = this[focusedInputName].value;\n    const date = dateFromLocalizedString(focusedInputValue, this.localeData) as Date;\n    const dateAsISO = dateToISO(date);\n    const valueIsArray = Array.isArray(value);\n    if (this.range) {\n      const focusedInputValueIndex = focusedInput === \"start\" ? 0 : 1;\n      if (valueIsArray) {\n        if (dateAsISO === value[focusedInputValueIndex]) {\n          return;\n        }\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        } else {\n          this.setRangeValue([\n            focusedInput === \"end\" && dateFromISO(value[0]),\n            focusedInput === \"start\" && dateFromISO(value[1]),\n          ]);\n        }\n      } else {\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        }\n      }\n    } else {\n      if (dateAsISO === value) {\n        return;\n      }\n      this.setValue(date);\n      this.localizeInputValues();\n    }\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    const { defaultPrevented, key } = event;\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      this.commitValue();\n\n      if (this.shouldFocusRangeEnd()) {\n        this.endInput?.setFocus();\n      } else if (this.shouldFocusRangeStart()) {\n        this.startInput?.setFocus();\n      }\n\n      if (submitForm(this)) {\n        event.preventDefault();\n        this.restoreInputFocus();\n      }\n    } else if (key === \"ArrowDown\") {\n      this.open = true;\n      this.focusOnOpen = true;\n      event.preventDefault();\n    } else if (key === \"Escape\") {\n      this.open = false;\n      event.preventDefault();\n      this.restoreInputFocus();\n    }\n  };\n\n  startInputFocus = (): void => {\n    this.focusedInput = \"start\";\n  };\n\n  endInputFocus = (): void => {\n    this.focusedInput = \"end\";\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  setStartWrapper = (el: HTMLDivElement): void => {\n    this.startWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setEndWrapper = (el: HTMLDivElement): void => {\n    this.endWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setDatePickerRef = (el: HTMLCalciteDatePickerElement): void => {\n    this.datePickerEl = el;\n    connectFocusTrap(this, {\n      focusTrapEl: el,\n      focusTrapOptions: {\n        initialFocus: false,\n        setReturnFocus: false,\n      },\n    });\n  };\n\n  @Watch(\"effectiveLocale\")\n  private async loadLocaleData(): Promise<void> {\n    if (!Build.isBrowser) {\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.localizeInputValues();\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event CalciteDatePicker custom change event\n   */\n  handleDateChange = (event: CustomEvent<void>): void => {\n    if (this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    this.setValue((event.target as HTMLCalciteDatePickerElement).valueAsDate as Date);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private shouldFocusRangeStart(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(endValue && !startValue && this.focusedInput === \"end\" && this.startInput);\n  }\n\n  private shouldFocusRangeEnd(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(startValue && !endValue && this.focusedInput === \"start\" && this.endInput);\n  }\n\n  private handleDateRangeChange = (event: CustomEvent<void>): void => {\n    if (!this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const value = (event.target as HTMLCalciteDatePickerElement).valueAsDate as Date[];\n\n    this.setRangeValue(value);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private restoreInputFocus(): void {\n    if (!this.range) {\n      this.startInput.setFocus();\n      return;\n    }\n\n    const focusedInput = this.focusedInput === \"start\" ? this.startInput : this.endInput;\n    focusedInput.setFocus();\n  }\n\n  private localizeInputValues(): void {\n    const date = dateFromRange(\n      (this.range\n        ? (Array.isArray(this.valueAsDate) && this.valueAsDate[0]) || undefined\n        : this.valueAsDate) as Date,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    const endDate = this.range\n      ? dateFromRange(\n          (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined,\n          this.minAsDate,\n          this.maxAsDate,\n        )\n      : null;\n\n    const formattingOptions = {\n      // we explicitly set numberingSystem to prevent the browser-inferred value\n      // see https://github.com/Esri/calcite-design-system/issues/3079#issuecomment-1168964195 for more info\n      numberingSystem: getSupportedNumberingSystem(this.numberingSystem),\n    };\n\n    const localizedDate = date && date.toLocaleDateString(this.effectiveLocale, formattingOptions);\n    const localizedEndDate =\n      endDate && endDate.toLocaleDateString(this.effectiveLocale, formattingOptions);\n\n    this.setInputValue(localizedDate ?? \"\", \"start\");\n    this.setInputValue((this.range && localizedEndDate) ?? \"\", \"end\");\n  }\n\n  private setInputValue = (newValue: string, input: \"start\" | \"end\" = \"start\"): void => {\n    const inputEl = this[`${input}Input`];\n    if (!inputEl) {\n      return;\n    }\n    inputEl.value = newValue;\n  };\n\n  private setRangeValue = (valueAsDate: Date[]): void => {\n    if (!this.range) {\n      return;\n    }\n\n    const { value: oldValue } = this;\n    const oldValueIsArray = Array.isArray(oldValue);\n    const valueIsArray = Array.isArray(valueAsDate);\n\n    const newStartDate = valueIsArray ? valueAsDate[0] : null;\n    let newStartDateISO = valueIsArray ? dateToISO(newStartDate) : \"\";\n    if (newStartDateISO) {\n      newStartDateISO = this.getNormalizedDate(newStartDateISO);\n    }\n\n    const newEndDate = valueIsArray ? valueAsDate[1] : null;\n    let newEndDateISO = valueIsArray ? dateToISO(newEndDate) : \"\";\n    if (newEndDateISO) {\n      newEndDateISO = this.getNormalizedDate(newEndDateISO);\n    }\n\n    const newValue = newStartDateISO || newEndDateISO ? [newStartDateISO, newEndDateISO] : \"\";\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.value = newValue;\n    this.valueAsDate = newValue ? getValueAsDateRange(newValue) : undefined;\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent && changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      if (oldValueIsArray) {\n        this.setInputValue(oldValue[0], \"start\");\n        this.setInputValue(oldValue[1], \"end\");\n      } else {\n        this.value = oldValue;\n        this.setInputValue(oldValue as string);\n      }\n    }\n  };\n\n  private setValue = (value: Date | string): void => {\n    if (this.range) {\n      return;\n    }\n\n    const oldValue = this.value;\n    let newValue = dateToISO(value as Date);\n    newValue = this.getNormalizedDate(newValue);\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.valueAsDate = newValue ? dateFromISO(newValue) : undefined;\n    this.value = newValue || \"\";\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      this.setInputValue(oldValue as string);\n    }\n  };\n\n  private warnAboutInvalidValue(value: string): void {\n    console.warn(\n      `The specified value \"${value}\" does not conform to the required format, \"YYYY-MM-DD\".`,\n    );\n  }\n\n  private commonDateSeparators = [\".\", \"-\", \"/\"];\n\n  private formatNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            this.commonDateSeparators?.includes(char)\n              ? this.localeData?.separator\n              : numberKeys?.includes(char)\n                ? numberStringFormatter?.numberFormatter?.format(Number(char))\n                : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private parseNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            numberKeys.includes(char) ? numberStringFormatter.delocalize(char) : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private getNormalizedDate(value: string): string {\n    if (!value) {\n      return \"\";\n    }\n\n    if (!isTwoDigitYear(value)) {\n      return value;\n    }\n\n    const { day, month, year } = datePartsFromISO(value);\n    const normalizedYear = normalizeToCurrentCentury(Number(year));\n    return `${normalizedYear}-${month}-${day}`;\n  }\n}\n","import { datePartsFromISO } from \"../../utils/date\";\n\n/**\n * Specifies if an ISO string date (YYYY-MM-DD) has two digit year.\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport function isTwoDigitYear(value: string): boolean {\n  if (!value) {\n    return false;\n  }\n  const { year } = datePartsFromISO(value);\n  return Number(year) < 100;\n}\n\n/**\n * Returns a normalized year to current century from a given two digit year number.\n *\n * @param {number} twoDigitYear\n * @returns {string}\n */\nexport function normalizeToCurrentCentury(twoDigitYear: number): number {\n  const currentYear = new Date().getFullYear();\n  const normalizedYear = Math.floor(currentYear / 100) * 100 + twoDigitYear;\n  return normalizedYear;\n}\n"],"names":["Heading","props","children","HeadingTag","level","concat","h","inRange","date","min","max","time","getTime","afterMin","Date","beforeMax","dateFromRange","beforeMin","afterMax","dateFromISO","iso8601","isEndDate","arguments","length","undefined","d","split","map","parseFloat","setFullYear","isNaN","Error","setEndOfDay","dateFromLocalizedString","value","localeData","separator","parts","string","day","month","year","datePartsFromLocalizedString","parseInt","parseDateString","parseCalendarYear","validDay","validMonth","validDate","validLength","filter","c","validYear","toString","processCalendarYear","mode","unitOrder","order","getOrder","values","part","numberStringFormatter","delocalize","indexOf","dateToISO","getTimezoneOffset","toISOString","datePartsFromISO","isoDate","dateParts","sameDate","d1","d2","getDate","getMonth","getFullYear","toLowerCase","sort","a","b","getDaysDiff","date1","date2","setHours","DatePickerDay","proxyCustomElement","HTMLElement","onClick","this","disabled","calciteDaySelect","emit","keyDownHandler","event","isActivationKey","key","preventDefault","pointerOverHandler","calciteInternalDayHover","componentWillLoad","parentDatePickerEl","closestElementCrossShadowBoundary","el","render","dayId","replaceAll","numberingSystem","lang","locale","numberFormatOptions","useGrouping","formattedDay","localize","String","dayLabel","dateTimeFormat","format","Host","toAriaBoolean","active","id","onKeyDown","role","tabIndex","InteractiveContainer","class","connectedCallback","connectInteractive","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","DatePickerMonth","defaultPrevented","isRTL","dir","addDays","addMonths","activeDate","setDate","activeFocus","disableActiveFocus","dayHover","target","calciteInternalDatePickerMouseOut","calciteInternalDatePickerHover","stopPropagation","daySelect","calciteInternalDatePickerSelect","pointerOutHandler","startOfWeek","weekStart","abbreviated","short","narrow","days","weekDays","scale","adjustedWeekDays","slice","curMonDays","getCurrentMonthDays","prevMonDays","getPreviousMonthDays","nextMonDays","getNextMonthDays","dayInWeek","getDayInWeek","currentMonth","ref","weeks","i","push","onFocusOut","weekday","renderDateDay","step","nextDate","setMonth","calciteInternalDatePickerActiveDateChange","lastDate","startDay","getDay","num","endDay","betweenSelectedRange","startDate","endDate","isRangeHover","isSelected","selectedDate","isStartOfRange","isEndOfRange","hoverRange","end","_ref","_this$hoverRange","isFocusedOnStart","isHoverInRange","toDateString","endOfRange","highlighted","onCalciteDaySelect","onCalciteInternalDayHover","range","rangeEdge","rangeHover","selected","startOfRange","focus","_this$hoverRange2","focused","start","isStart","insideRange","cond1","cond2","CSS","ICON","DatePickerMonthHeader","onYearKey","localizedYear","setYear","offset","onYearChange","onYearInput","commit","prevMonthClick","handleArrowClick","prevMonthDate","prevMonthKeydown","nextMonthClick","nextMonthDate","nextMonthKeydown","setNextPrevMonthDates","renderContent","_localeData$year","messages","activeMonth","months","localizedMonth","wide","formatCalendarYear","reverse","suffix","Fragment","prevMonth","href","tabindex","icon","getIconScale","text","headingLevel","inputmode","maxlength","minlength","onChange","onInput","pattern","type","yearInput","nextMonth","Number","getInRangeDate","parsedYear","_ref2","inRangeDate","DATE_PICKER_FORMAT_OPTIONS","dateStyle","translationCache","requestCache","async","getLocaleData","getSupportedLocale","fetch","getAssetPath","then","resp","json","catch","console","error","data","getValueAsDateRange","v","index","DatePicker","resetActiveDates","monthHeaderSelectChange","detail","activeRange","activeEndDate","activeStartDate","mostRecentRangeValue","monthActiveDateChange","monthHoverChange","valueAsDate","Array","isArray","proximitySelectionDisabled","startDiff","endDiff","monthMouseOutChange","monthDateChange","calciteDatePickerChange","getStartDate","getEndDate","setEndDate","setStartDate","activeDateWatcher","newActiveDate","valueAsDateWatcher","newValueAsDate","newActiveStartDate","newActiveEndDate","onMinChanged","minAsDate","onMaxChanged","maxAsDate","onMessagesChange","setFocus","componentFocusable","reset","connectLocalized","connectMessages","disconnectLocalized","disconnectMessages","setUpLoadableComponent","loadLocaleData","setUpMessages","componentDidLoad","setComponentLoaded","getActiveDate","getActiveEndDate","minDate","maxDate","onBlur","renderCalendar","effectiveLocaleChange","updateMessages","effectiveLocale","valueHandler","Build","isBrowser","getDateTimeFormat","onCalciteInternalDatePickerSelect","onCalciteInternalDatePickerActiveDateChange","onCalciteInternalDatePickerHover","onCalciteInternalDatePickerMouseOut","newEndDate","calciteDatePickerRangeChange","InputDatePicker","calciteInternalInputInputHandler","parsedValue","parseNumerals","formattedValue","formatNumerals","datePickerActiveDate","calciteInternalInputBlurHandler","commitValue","dialogId","guid","focusOnOpen","userChangedValue","openTransitionProp","valueAsDateChangedExternally","placeholderTextId","onInputWrapperPointerDown","currentOpenInput","focusedInput","onInputWrapperClick","endInput","startInput","position","currentTarget","getAttribute","composedPath","find","_el$classList","classList","contains","open","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterComputedPlacements","setTransitionEl","transitionEl","setStartInput","setEndInput","blurHandler","_this$endInput","shouldFocusRangeEnd","shouldFocusRangeStart","_this$startInput","submitForm","restoreInputFocus","startInputFocus","endInputFocus","setFloatingEl","floatingEl","connectFloatingUI","referenceEl","setStartWrapper","startWrapper","setReferenceEl","setEndWrapper","endWrapper","setDatePickerRef","datePickerEl","connectFocusTrap","focusTrapEl","focusTrapOptions","initialFocus","setReturnFocus","handleDateChange","setValue","localizeInputValues","handleDateRangeChange","setRangeValue","setInputValue","newValue","inputEl","_this","oldValue","oldValueIsArray","valueIsArray","newStartDate","newStartDateISO","getNormalizedDate","newEndDateISO","changeEvent","calciteInputDatePickerChange","commonDateSeparators","char","_this$commonDateSepar","_this$localeData","_numberStringFormatte","includes","numberKeys","numberFormatter","join","defaultMenuPlacement","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","handleDisabledAndReadOnlyChange","valueWatcher","flipPlacementsHandler","reposition","openHandler","onToggleOpenCloseComponent","readOnly","overlayPositioningHandler","calciteDaySelectHandler","delayed","placement","overlayPositioning","warnAboutInvalidValue","connectLabel","connectForm","Promise","all","disconnectLabel","disconnectForm","disconnectFloatingUI","_this$localeData2","_this$localeData3","_this$localeData4","onPointerDown","layout","onCalciteInputTextInput","onCalciteInternalInputTextBlur","onCalciteInternalInputTextFocus","placeholder","status","renderToggleIcon","chooseDate","FloatingCSS","animation","animationActive","messageOverrides","onCalciteDatePickerChange","onCalciteDatePickerRangeChange","flipRtl","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","message","requestAnimationFrame","onLabelClick","onBeforeOpen","calciteInputDatePickerBeforeOpen","onOpen","onActivate","calciteInputDatePickerOpen","onBeforeClose","calciteInputDatePickerBeforeClose","onClose","calciteInputDatePickerClose","dateAsISO","startValue","endValue","formattingOptions","getSupportedNumberingSystem","localizedDate","toLocaleDateString","localizedEndDate","warn","isTwoDigitYear","normalizedYear","twoDigitYear","currentYear","Math","floor","normalizeToCurrentCentury"],"sourceRoot":""}